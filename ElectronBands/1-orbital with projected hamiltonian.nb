(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    240729,       5392]
NotebookOptionsPosition[    237751,       5292]
NotebookOutlinePosition[    238302,       5314]
CellTagsIndexPosition[    238259,       5311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"R0", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["2", "3"], 
        FractionBox[
         RowBox[{"-", "1"}], "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"]},
       {
        FractionBox[
         RowBox[{"-", "1"}], "3"], 
        FractionBox["2", "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"]},
       {
        FractionBox["2", "3"], 
        FractionBox["2", "3"], 
        FractionBox["1", "3"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ";", 
  RowBox[{"R1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["2", "3"], 
        FractionBox["2", "3"], 
        FractionBox["1", "3"]},
       {
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox["1", "3"], 
        FractionBox["2", "3"]},
       {
        FractionBox["1", "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox["2", "3"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"R2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox["2", "3"]},
       {
        FractionBox["2", "3"], 
        FractionBox["2", "3"], 
        FractionBox["1", "3"]},
       {
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox["1", "3"], 
        FractionBox["2", "3"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"R3", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox["2", "3"]},
       {
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"], 
        FractionBox[
         RowBox[{"-", "1"}], "3"]},
       {
        FractionBox["2", "3"], 
        FractionBox[
         RowBox[{"-", "1"}], "3"], 
        FractionBox[
         RowBox[{"-", "2"}], "3"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.609630445373417*^9, 3.6096306687610884`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"D0", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["2", 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{"1", "-", "\[ImaginaryI]"}], 
         SqrtBox["6"]]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], 
         SqrtBox["6"]], 
        FractionBox["2", 
         SqrtBox["6"]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"D1", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "-", "\[ImaginaryI]"}], 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox["6"]]},
       {
        FractionBox[
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], 
         SqrtBox["6"]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"D2", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"2", "-", "\[ImaginaryI]"}], 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{"-", "1"}], 
         SqrtBox["6"]]},
       {
        FractionBox["1", 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{"2", "+", "\[ImaginaryI]"}], 
         SqrtBox["6"]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", 
  RowBox[{"D3", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox["6"]], 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "\[ImaginaryI]"}]}], 
         SqrtBox["6"]]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", "\[ImaginaryI]"}]}], 
         SqrtBox["6"]], 
        FractionBox["\[ImaginaryI]", 
         SqrtBox["6"]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.609631109372175*^9, 3.609631211832365*^9}, {
  3.609664576710065*^9, 3.609664659696511*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Tau]03", "=", 
   RowBox[{"-", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}], ";", 
  RowBox[{"\[Tau]30", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1"},
      {"0", "0", "0"},
      {"1", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]02", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]20", "=", 
   RowBox[{"-", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}], ";", 
  RowBox[{"\[Tau]01", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1"},
      {"0", "0", "0"},
      {"1", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]10", "=", 
   RowBox[{"-", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}], ";", 
  RowBox[{"\[Tau]12", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]21", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1"},
      {"0", "0", "0"},
      {"1", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]13", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1"},
      {"0", "0", "0"},
      {"1", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]31", "=", 
   RowBox[{"-", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}], ";", 
  RowBox[{"\[Tau]23", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Tau]32", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "1"},
      {"0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.609665274518431*^9, 3.609665726825986*^9}, {
  3.609665803103891*^9, 3.6096658111678224`*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.611998782601405*^9, 3.6119987906653967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T03", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]03", ".", 
      RowBox[{"Transpose", "[", "R0", "]"}], ".", "R3", ".", "\[Tau]30"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D0", "]"}], ".", "D3"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.609667214655017*^9, 3.6096672373468194`*^9}, {
  3.6096685658731737`*^9, 3.609668572310998*^9}, {3.6096693496213217`*^9, 
  3.609669486034601*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T02", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]02", ".", 
      RowBox[{"Transpose", "[", "R0", "]"}], ".", "R2", ".", "\[Tau]20"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D0", "]"}], ".", "D2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6096695020843925`*^9, 3.609669522774995*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T01", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]01", ".", 
      RowBox[{"Transpose", "[", "R0", "]"}], ".", "R1", ".", "\[Tau]10"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D0", "]"}], ".", "D1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.60966953155772*^9, 3.6096695528421335`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]12", ".", 
      RowBox[{"Transpose", "[", "R1", "]"}], ".", "R2", ".", "\[Tau]21"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D1", "]"}], ".", "D2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6096695609998035`*^9, 3.609669592332649*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]13", ".", 
      RowBox[{"Transpose", "[", "R1", "]"}], ".", "R3", ".", "\[Tau]31"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D1", "]"}], ".", "D3"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.609669600879959*^9, 3.6096696148035793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T23", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"\[Tau]23", ".", 
      RowBox[{"Transpose", "[", "R2", "]"}], ".", "R3", ".", "\[Tau]32"}], 
     ",", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "D2", "]"}], ".", "D3"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.609669621445627*^9, 3.609669638979865*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "b", "]"}], "T01"}], "]"}]], "Input",
 CellChangeTimes->{{3.6096938215933385`*^9, 3.6096939277154446`*^9}, {
   3.609693988584038*^9, 3.6096939942405643`*^9}, 3.6097145363294115`*^9, {
   3.610377780133954*^9, 3.6103777971853294`*^9}, {3.6103780519678392`*^9, 
   3.6103780623047295`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.60969393088748*^9, 3.609693995662509*^9, 
  3.609714541601918*^9, 3.6097834491907034`*^9, 3.610378012452835*^9, 
  3.6103780629641695`*^9, 3.6120200447223077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "c", "]"}], "T02"}], "]"}]], "Input",
 CellChangeTimes->{{3.6096942819116755`*^9, 3.609694304884677*^9}, 
   3.609714642936363*^9, {3.610377808903133*^9, 3.610377814444828*^9}, {
   3.610378074956165*^9, 3.6103780838130693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["5", "54"], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["20", "27"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["5", "54"]}], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["20", "27"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["20", "27"], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["5", "54"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["20", "27"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["5", "54"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6097834493518105`*^9, 3.610378091714336*^9, 
  3.6120200479704795`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "d", "]"}], "T03"}], "]"}]], "Input",
 CellChangeTimes->{{3.609694331701602*^9, 3.6096943322016315`*^9}, {
  3.6097147329202538`*^9, 3.6097147450913525`*^9}, {3.610377831768384*^9, 
  3.6103778377533703`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.60969434342196*^9, {3.609714736312505*^9, 3.6097147462581224`*^9}, 
   3.6097834495269246`*^9, 3.610378113834083*^9, 3.6120200523814325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"c", "-", "b"}], "]"}], "T12"}], "]"}]], "Input",
 CellChangeTimes->{{3.609694349751463*^9, 3.609694351454668*^9}, {
  3.609714762159707*^9, 3.609714766634696*^9}, {3.6103778498924637`*^9, 
  3.610377855678317*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.609694352877631*^9, 3.6097147679625835`*^9, 
  3.609783449612984*^9, 3.610378117047225*^9, 3.61202005520031*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"d", "-", "b"}], "]"}], "T13"}], "]"}]], "Input",
 CellChangeTimes->{{3.609694360535326*^9, 3.609694362847941*^9}, {
  3.609714775769765*^9, 3.6097147810783*^9}, {3.610377861844429*^9, 
  3.6103778666376233`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "+", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "9"], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "-", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "18"]}], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "+", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "54"]}], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", "27"], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "54"], "+", 
         FractionBox[
          RowBox[{"5", " ", "\[ImaginaryI]"}], "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "18"], "-", 
         FractionBox["\[ImaginaryI]", "54"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "27"]}], "-", 
         FractionBox[
          RowBox[{"20", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6096943639729967`*^9, 3.6097147822020435`*^9, 
  3.6097834496960373`*^9, 3.610378120698659*^9, 3.6120200583654385`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"d", "-", "c"}], "]"}], "T23"}], "]"}]], "Input",
 CellChangeTimes->{{3.6096943737099276`*^9, 3.609694375522519*^9}, {
  3.609714790021253*^9, 3.6097147953377934`*^9}, {3.6103778838631067`*^9, 
  3.610377887919821*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["2", "27"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "27"]}], "+", 
         FractionBox["\[ImaginaryI]", "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       FractionBox["16", "27"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["16", "27"]}], "+", 
         FractionBox[
          RowBox[{"8", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "27"], "+", 
         FractionBox["\[ImaginaryI]", "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "27"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["16", "27"], "+", 
         FractionBox[
          RowBox[{"8", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["16", "27"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       FractionBox["16", "27"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["16", "27"]}], "+", 
         FractionBox[
          RowBox[{"8", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       FractionBox["2", "27"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "27"]}], "+", 
         FractionBox["\[ImaginaryI]", "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["16", "27"], "+", 
         FractionBox[
          RowBox[{"8", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["16", "27"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["2", "27"], "+", 
         FractionBox["\[ImaginaryI]", "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "27"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.609694377678875*^9, 3.609714796380482*^9, 
  3.6097834497790923`*^9, 3.610378123315403*^9, 3.6120200634037933`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{"0", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.612019592280503*^9, 3.6120196123569193`*^9}, {
  3.6120196477475734`*^9, 3.6120197248721266`*^9}, {3.61201984688908*^9, 
  3.6120198480018263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"p", "=", 
   RowBox[{
    TagBox[
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "3", "]"}]}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1"}], "0"},
       {"0", "1"},
       {"I", "0"},
       {"0", "I"},
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.612019852636924*^9, 3.612019896999572*^9}, {
  3.612019980098113*^9, 3.6120199860020585`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["3"]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      SqrtBox["3"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[ImaginaryI]", 
      SqrtBox["3"]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[ImaginaryI]", 
      SqrtBox["3"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      SqrtBox["3"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6120199869316893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.6120199293652043`*^9, 3.6120199361067104`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["3"]]}], "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["3"]], "0"},
     {"0", 
      FractionBox["\[ImaginaryI]", 
       SqrtBox["3"]]},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      FractionBox["1", 
       SqrtBox["3"]], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.612019936786171*^9, 3.61201999005677*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"ConjugateTranspose", "[", "p", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6120199399722958`*^9, 3.6120199668462553`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["3"]]}], "0", 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["3"]]}], "0", "0", 
      FractionBox["1", 
       SqrtBox["3"]]},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["3"]]}], 
      FractionBox["1", 
       SqrtBox["3"]], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.612019968602428*^9, 3.6120199975407705`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "b", "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T01", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6120200720125465`*^9, 3.6120200891780286`*^9}, {
  3.6120207082687635`*^9, 3.612020722605344*^9}, {3.612022122014409*^9, 
  3.6120221322802715`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["31", "81"]}], "+", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "81"], "+", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "81"]}], "+", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["31", "81"]}], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "b", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6120200901987076`*^9, 3.6120207235910015`*^9, 
  3.6120221681822824`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "c", "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T02", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6120208097215695`*^9, 3.6120208104340453`*^9}, {
  3.6120221443623524`*^9, 3.612022146563819*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "+", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["11", "27"]}], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["11", "27"], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "c", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6120208120231133`*^9, 3.612022177092224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "d", "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T03", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.612020850039518*^9, 3.612020851205301*^9}, {
  3.612022157733284*^9, 3.6120221604290876`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "+", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "81"], "+", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "81"]}], "+", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "d", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.612020851675617*^9, 3.6120221825798907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"c", "-", "b"}], "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T12", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6120208579157896`*^9, 3.6120208640879097`*^9}, {
  3.612022189729669*^9, 3.6120221962150064`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["31", "81"]}], "-", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "81"], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "81"]}], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["31", "81"]}], "+", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "c"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.612020865296715*^9, 3.612022200146639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"d", "-", "b"}], "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T13", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6120208708654423`*^9, 3.612020873200996*^9}, {
  3.6120222060755973`*^9, 3.612022210404488*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "-", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "81"]}], "-", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "81"], "-", 
         FractionBox[
          RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["31", "81"], "+", 
         FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "-", "d"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6120208743177505`*^9, 3.612022211855457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"d", "-", "c"}], "]"}], 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "p", "]"}], ".", "T23", ".", "p"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6120208819048195`*^9, 3.61202088361596*^9}, {
  3.612022217755401*^9, 3.6120222211106443`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["32", "81"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["32", "81"], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["32", "81"]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["32", "81"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"c", "-", "d"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.612020884958856*^9, 3.6120223605928693`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"i", "-", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6120214763128414`*^9, 3.612021598195307*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Half", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["31", "81"]}], "+", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "b", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "81"], "+", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "b", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "+", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "c", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["11", "27"]}], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "c", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "+", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "d", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "81"], "+", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "d", "]"}]}]},
       {"0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "81"]}], "+", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "b", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["31", "81"]}], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "b", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["11", "27"], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "c", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "c", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "81"]}], "+", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "d", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "d", "]"}]}]},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["31", "81"]}], "-", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "c"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "81"], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "c"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "d"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "81"]}], "-", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "d"}], "]"}]}]},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "81"]}], "-", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "c"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["31", "81"]}], "+", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "c"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "81"], "-", 
           FractionBox[
            RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "d"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["31", "81"], "+", 
           FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "-", "d"}], "]"}]}]},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{
         FractionBox["32", "81"], " ", "\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"c", "-", "d"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["32", "81"], "+", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"c", "-", "d"}], "]"}]}]},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["32", "81"]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"c", "-", "d"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox["32", "81"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"c", "-", "d"}], "]"}]}]},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.6120222687705026`*^9, 3.612022348699922*^9}, 
   3.612022378971155*^9, {3.612022410105963*^9, 3.6120224529402*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Half", "+", 
    RowBox[{"ConjugateTranspose", "[", "Half", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.612021822937517*^9, 3.612021844475909*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "H", "]"}]], "Input",
 CellChangeTimes->{{3.6120218494372253`*^9, 3.6120218590816727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HH", "[", 
   RowBox[{"b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "b", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "b", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "c", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["11", "27"]}], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "c", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "d", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "d", "]"}]}]},
      {"0", "0", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "b", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "b", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["11", "27"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "c", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "c", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "d", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "d", "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "b", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "b", "]"}], "]"}]}], "0", "0", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "c"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "c"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "d"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "d"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "b", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "b", "]"}], "]"}]}], "0", "0", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "c"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "c"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "d"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "-", "d"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "c", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["11", "27"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "c", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "c", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "c", "]"}]}], "]"}]}], "0", "0", 
       RowBox[{
        FractionBox["32", "81"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"c", "-", "d"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["32", "81"], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"c", "-", "d"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["11", "27"]}], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "c", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "c", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "c", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["31", "81"]}], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "c", "]"}]}], "]"}]}], "0", "0", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["32", "81"]}], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"c", "-", "d"}], "]"}]}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox["32", "81"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"c", "-", "d"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "d", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "d", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox["32", "81"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "c", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["32", "81"]}], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "c", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], "0", "0"},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "81"], "-", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "d", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "+", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"Cos", "[", "d", "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "81"]}], "+", 
          FractionBox[
           RowBox[{"11", " ", "\[ImaginaryI]"}], "27"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["31", "81"], "-", 
          FractionBox["\[ImaginaryI]", "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "b", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["32", "81"], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]"}], "81"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "c", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], 
       RowBox[{
        FractionBox["32", "81"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Conjugate", "[", "c", "]"}], "-", 
          RowBox[{"Conjugate", "[", "d", "]"}]}], "]"}]}], "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.6120227786295433`*^9, 3.612022798968136*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"HH", "[", 
      RowBox[{"b", ",", "c", ",", "d"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.609776123808461*^9, 3.6097761252584305`*^9}, {
   3.6097768003136935`*^9, 3.6097769479039187`*^9}, {3.609777114762969*^9, 
   3.609777271744444*^9}, 3.6097773080155835`*^9, {3.609778886593169*^9, 
   3.6097789615520573`*^9}, {3.6097791288423924`*^9, 3.609779129621913*^9}, 
   3.609779284902256*^9, {3.6097793224872727`*^9, 3.6097793451963882`*^9}, {
   3.609781116172014*^9, 3.609781141844099*^9}, {3.609781448481177*^9, 
   3.609781480827702*^9}, {3.6097817023201113`*^9, 3.609781733462839*^9}, {
   3.6097820787556443`*^9, 3.6097820876025286`*^9}, {3.609793120730218*^9, 
   3.6097931215988*^9}, {3.6097931629713297`*^9, 3.609793164075066*^9}, {
   3.6097931955250015`*^9, 3.609793196562687*^9}, {3.609798794722413*^9, 
   3.6097988002801113`*^9}, {3.609798925389376*^9, 3.6097989260017843`*^9}, 
   3.6120226656430254`*^9, {3.6120228080462084`*^9, 3.6120228101345997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{"2", "t"}], ",", "0", ",", 
          RowBox[{"2", "t"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"Pi", "/", "4"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{"t", "-", 
           RowBox[{"Pi", "/", "4"}]}], ",", 
          RowBox[{"t", "-", 
           RowBox[{"Pi", "/", "4"}], "+", 
           RowBox[{"Pi", "/", "2"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"Pi", "/", "4"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"Pi", "/", "2"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"Pi", "/", "4"}], "+", "t", "-", 
           RowBox[{"Pi", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"Pi", "/", "4"}]}], "-", "t", "+", 
           RowBox[{"Pi", "/", "2"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"Pi", "/", "2"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"3", 
           RowBox[{"Pi", "/", "4"}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"t", "-", 
              RowBox[{"3", 
               RowBox[{"Pi", "/", "4"}]}]}], ")"}]}]}], ",", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"t", "-", 
              RowBox[{"3", 
               RowBox[{"Pi", "/", "4"}]}]}], ")"}]}]}], ",", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"t", "-", 
              RowBox[{"3", 
               RowBox[{"Pi", "/", "4"}]}]}], ")"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"3", 
           RowBox[{"Pi", "/", "4"}]}]}], "&&", 
         RowBox[{"t", "<", "Pi"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{"t", "-", "Pi"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"3", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{"t", "-", "Pi"}], ")"}]}], ",", 
          RowBox[{"3", 
           RowBox[{"(", 
            RowBox[{"t", "-", "Pi"}], ")"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "Pi"}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"5", 
           RowBox[{"Pi", "/", "4"}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", 
            RowBox[{"Pi", "/", "8"}]}], "+", 
           RowBox[{"t", "/", "2"}], "-", 
           RowBox[{"5", 
            RowBox[{"Pi", "/", "8"}]}]}], ",", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"Pi", "/", "8"}]}], "-", 
           RowBox[{"3", 
            RowBox[{"t", "/", "2"}]}], "+", 
           RowBox[{"15", 
            RowBox[{"Pi", "/", "8"}]}]}], ",", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"Pi", "/", "4"}]}], "-", 
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"5", 
              RowBox[{"Pi", "/", "4"}]}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"5", 
           RowBox[{"Pi", "/", "4"}]}]}], "&&", 
         RowBox[{"t", "\[LessEqual]", 
          RowBox[{"3", 
           RowBox[{"Pi", "/", "2"}]}]}]}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pi", "/", "4"}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Pi", "/", "4"}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{"Pi", "/", "4"}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Pi", ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", 
           RowBox[{"Pi", "/", "4"}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{"Pi", "/", "2"}]}], ",", "Dashed"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.12", ",", "0.15"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pi", "/", "4"}], "+", "0.12"}], ",", "0.15"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<W\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", "4"}]}], "+", "0.12"}], ",", "0.15"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<L\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"3", 
            RowBox[{"Pi", "/", "4"}]}], "+", "0.12"}], ",", "0.15"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pi", "+", "0.12"}], ",", "0.15"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<K\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"5", 
            RowBox[{"Pi", "/", "4"}]}], "+", "0.12"}], ",", "0.15"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"6", 
            RowBox[{"Pi", "/", "4"}]}], "-", "0.12"}], ",", "0.15"}], "}"}]}],
        "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6097781109189367`*^9, 3.6097781283355274`*^9}, {
   3.609778342587119*^9, 3.609778343419674*^9}, {3.609778468811123*^9, 
   3.609778471643008*^9}, {3.6097810554886284`*^9, 3.6097810795516496`*^9}, {
   3.609781369827837*^9, 3.6097813703651886`*^9}, {3.6097822031374187`*^9, 
   3.6097822835939646`*^9}, {3.6097823768160057`*^9, 3.60978242352209*^9}, 
   3.6097832270108337`*^9, {3.609783310675516*^9, 3.609783416357857*^9}, {
   3.6097837388034453`*^9, 3.609783745955206*^9}, {3.609783841799994*^9, 
   3.609783858162883*^9}, 3.6103919940970106`*^9, {3.6119165908596783`*^9, 
   3.611916593642152*^9}, {3.6119166321338196`*^9, 3.6119166619040737`*^9}, {
   3.61191712751503*^9, 3.6119171633336215`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
D50brrwY1I3b96pghTnRh/4PHxaTBg==
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
xjb4LK0farT2D2ofegkHQ9sg1q6EeDz2B3FL45vGe1ph2EhbPHn6D1qluL39
AbcVzNRfobC/f9CmSJUrlm2tIDbz4tFJ0XH05VXdkw/MVrieUOAqozCOVpUF
D5dXtEJUZTblusU4Cg/QqAl62AqhaknrXJ+Po5Tgw0s67FuhU0LqhM2rcXSI
/5acsF0r6E8nxJm8G0cXRq8Zbj7eCnyV8ePKn8dR69HH3NsHWyHY9saHjo5x
NHXcqyNhVysE3LxqaUGfQNIn38odXNsKvlMX/bRcJ9DJtJr/lv1mw9lkG+WH
XhNoVesSxytDbDiyZXcD3X8Cqb83oo7x2KDluXLdYOQESs9+d7qLy4ax4SrW
gwcTaHLMp1+IyQbX3v+20xsn0Pc3O4cOvWGDbbhQTwB7Arkh7iPpV2wwWzMa
P8CdQCPPcqY6itigbl/FqxyeQKfuffS/8owNA23uKQEik8hh9K6LSAYbzjRW
TvXvmESnA7pOqUax4ZDX80wrg0mU3+J4a3c4G3YtSTWv3DOJnor8uu8cygYF
C/fHGYcnkdOvByaVAWzg1K6wsnKbRN9Vf5+Ci2yw+eT26tPDSfTp2tijHzZs
MD1tba+ZM4kiNlEp5tZs2EExomUUTKJU/WbXBis2rMArzvq/m0RlWffCBi3Z
0PL201LNpkk0+ubc7Nm9bDj4QsY7nTqFYpINPoVrk/XJM6eO0KeQY//zy25b
2CD1OPye3rIp5Po7bYvdZjYw745WtilModeakV8PaJD1Da1ZtnLnFFonZVwS
sJYNRy0ul6S4TqG9H6vKZ5azYdu+AlOe1xQ6/O0/upE0G2SMejja/lPoS4no
teSlbCC2WVCbI6fQdYvLNFNJNhyXV7Ve+mAKLdwyTOUXI+s/0jJ38+cUIjZ5
h6TwsUGvnxbPZU0h2WOm93b/I0Cua9eaTZwp9JdiLLywQACn6bnp96EplLDJ
tcZvjoBTH6Lu0YSm0Ziek1b5JAEGJR822YpNo5COM7zMCQIUisYr8ySnUW/6
vsnr4wR0Zp0cNpWbRkTfPSW3MQIcYrah69umkaghdebKMAG7Il1/EnrTSFFk
R2byLwLWXHnkuM5oGq1azigqHCKgx4sRX2MxjVSX21PmBgiocjVeI3N0GnX/
UzFWJZ19LqDknO004pNZ++dEPwFnbXgcYedpJN737wbRR4DxkVXeVhen0c1f
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
6+HC/wByVROa
     "]], LineBox[CompressedData["
1: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
cpGQq9xE8hgHLu7ueJyozUXV6lGaT0c4IKX/7O9JKy5au9g/OvqLA2etD5RM
hnNR1VN3iTW9HNA6rt7JiuOiG4PzJ6O6OUA9uVy0MoWL8rbXfxXo4sCrCz1n
o0q5aOLDEaZsJwei3D7HX6rkov82Ue3ftXPA3rMEjjRwUeJagUaXNg4IXQ2R
kevhIuF6cavfTA6wQp0MBUe5iGdka/S+lQOFEWaeA/NcpCyN5jNaOGAdt/rL
C8kupPFi4djNJg5sTBCYS5LrQs4XnYdiGRz4+2BQKUi1C320yBDI+smBJ1ll
IQf0u9DF9AeRwz84kCzjm652qAvNa6UVLiccE7ujkn6iC1V22u0z/c6BsCUT
nRMXutBnqz874r9xwCeg5F+rTxc6nmDu3vuVA85j7nJvr3Uhv241jiHhE07q
KCOuCxn0Lfd49YUDh9p/219/1IUES1wkthPed/hZ0IWnxPu/niiABg7sqndO
NX1NjHf71OZjhNWQyrutH7rQpP7ya3yE177sb1/2owvNFF9JePmZA5KqOYuz
7V1I263Mwo+wUIajbMdgF5ILPZB1gPDccgXtqukuROMGeysRHr7NtcsR7EZv
UOILccJdpPTAKPFu9PdrzgERws1+9ilua7rRrsViOTrhT8Or31iqdiNDlTQF
BcLvHNnsnbu6kZiZDtInXMx6ML/SoBudyD54wp3w40NHV/2z6Eb+ek7nnxJO
+rh8T7d9N2rP2mg8Rvj23ibbWpdu9Hrv8tF9xHxCSu765/t1o1eTKbrZhL2U
LZNjr3cj62yFjRJEfM6n0is847vR22DSvVuE7aS+MW3SutH6oIgL4kR8zaOi
Z/c860a1b8fvZRHW4zORWVvejUKaQ/n0iPzs9BHZLfixG5FVnBKHCK85HenX
0NmNUiN6B84S+ZVoNUh6PtSNgm83BGxvJOJnJlh2b7YbCSnmcqhEffzeHTpt
J9mDDOgfPvcR9cMpQtK6a3vQLeYBpR6ivhiKf3cqbupB1oamC0PNHHgjHuDz
27AHJU/6Va8l6vV55O7EH4d70KLz4g1jFgeyFqdfvjzZg+a/v/UIZRP1P+A1
edW/BwVdHz9O7eDAsfduXtTCHqStQFd6SvSPieame+MVPWib/qZCVaK/cMGv
F821PeiUfnDB6z4OKD84/yeV24POHl71ZniAA1Pupz3Ul/WidVt+fmge5cC9
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
jd5WeJ5q/OWGCRXLbn7uaNTfCirJ6o/CzIn3r5lauXGgFTITJF0DLamYajEt
suFXK9y9zRZ1P0rFF+dcGL5EvYjegLYLx6m4ZZWFyeexVgi/lvXsjD0Vh15o
0dpD1JuPv4uJjSMVD+9Uq7g02woj3uarLZyo+Pe5qMFtC61w/vK2ISNnKh5T
zf8u+a8VbM/P39Jxp+LL3wT+KRL1/vNM5/FdnkR8Fig8GzITTByqVTV8iPj3
uNc9XsoEbetbnxUDqVhE8kdJjATRj/tWLRW7QcV9jLu01HVMeID+sYRuUfEz
u833MhWZILGn+ylfDBXvpdx7WEn0o4BGvtHEXSpOyG0LOKBB9Lvcnih2GhXr
r7l8O2wfEwrmbSlPX1Ox1mQF08+VCW4/JxK6K6j4rbvltC+xvmzOj5GXfUfF
p9pWfrhzhQnPbav2xH2gYvElBXekIphQUq7i5vODil+crpW2SGdCme9Mo94v
KuZTSPH0ZTLhinm8Q+AwFYvavYogc5mgtUFt6OUYFa9//uHvcx4T/mt2WKIy
Q8UyDnqH988w4d2OWk3aEhrOyHOlh69gwYc/CSnsNTTsUVGVKnGCBdc/q6ss
k6fhOvWzL0nnWGCYVf/STJGGY75z1whfYkGt5eLX96o0vDkiWc0klAWfih35
c3fRcHyVmmhVDguibv6N5u6h4UHTq3fMn7PA+FTSylWIhrUuhY+PEPtJA71h
W4wBDdceNIk9/4UF3y5tO+dlScOnX2Zt3T7Jgrj9X8YLrGiYIXruzuF/LDgk
5xTcf5SGRWuoJ8MpbBCf5hNdZ0fDKbNF7h8l2dD4NTnJ1oGGz54NSZRZQ+x/
OdsV752m4dTfrMdXldlwOOhr8ZezNOy0RefSuAYbpKzP6whfoGHb5Sb1vtps
YGwifcYXadhL0GPRALMhYUmKjf8lGvZdx1wLe9lg3b6j54UHDWs2bgvatZsN
LbcvLCpdoWGTbKEzasTzWL++q4tF0PDQzZ87V69ng+TluOeaN2lYvL6s9ymx
n5pMmW89fZuGLWwTyrVk2fCO75vG63ga1njvom+/nA1Zy77sOJVGw/8YIfxl
ZDZcRPV7XpbRcLnJjeGvv1nwL/79/hO/aDgp/MQX4woW7FoRWhc5TMM1ewy2
73jNAo9H+GDJGA1vvPlbVaGUBT1PwEh4hrDg221ihSxw7OjIOUqiYyE+eefV
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
PdbLhf8BnE0S2Q==
     "]], LineBox[CompressedData["
1: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
rHZZ5j8vTFa8tXr6FSNioCmGiIx64csmW/rvJzGi1lmGAw8tvTEtySP9czoj
Epg6Zarn5YMnJLVP+b5nRCkDfHvXyvwwi8ycyXozI/r0bOxl9p1gDKpHsybo
mNB0Tnp//NEIHLXxafswIxO6vtw2/9EzAo+/04+isTAhOYHXx0VaInD4Lme3
L5xM6Nc3use69yLx8GbVpRxhJpTZs/r1VVIU9i27uGArzYRc7sk5HNoSjRuO
3FdYMWFC6LxjJWKKx9vG1gtmTZnQ6ysBCb668fjhqxDJidtMKCDD2DQrMR6L
chXw0CyYEOfd08yxZxKw5eTy0AdHJtQsLBr6+eErzJ3q5+8RxoTi/+jOOlok
4suiSV9ZMBOS3HnQ+FhZMp7NGaeDaiZkobJThmEoGT9VkpZ1rGVC3upzR1NZ
U/Ancxw19oWIf+kfxVwvBR8r7rv2uYsJLVM5BbumUrCQnuho0DwT4vpdxr3B
m4ppIZErnJLM6M8BubirJ9Oxw84eKVUpZvSGSdx6u2E65ivcdd3tIDMK1flC
/845HWv2FlT8kmVGXs/nzqEP6bh8f6t3CzCjRKXrLH9OZuBX9Zxc4deY0ZFE
CZvKQ2/xTXr/nfwhzOjvTls975lM7KD8R+1MODParpoz4UHKwsE+NyxvRzKj
sJW7Py9KZOH3zKeLi18yoxD2C0039bMwC/usllEaMxrP2Hx4oywLZ/MZOqVi
ZpRfWzsw/TgbV12uT2ipZkbz4t7ULc+ycXvUsZrlWmb0cmjy+paMbPxPiIf7
fBMzOkoZoHveno11tn5K+d3FjBRD7BvDD+fgJYnDX+XmmdHNR5P+5V05mON2
3MKNReL3Ppramr9y8I40NtHgFWZksPf7WQp9Lj63b8Ss9x8zUtupEEfan4vj
D8aseXKwoPSeHY9GnXKx0nEGycbdLOjjfkdHd548/FStw9XIgAUxOpy+9puc
jyniO2UvGbIgN1d9yl3hfNy5YDGm9B8LCj7ypKdtez7elUKvu/cWCxLTO7fs
fjgfF28e3DtvzYIUGLIqpDXz8XCJz7cAfxb0L6X2MZd3PmYLb/F3DmJB70pY
OXMD8/GhuyJnrJ6yoMyR/XVKYfnYSTAvTTeCBT3r4WFSic/H3A9pLuKvWNB1
MZe+3MJ8fPKAjOS7QhbUxGN3TeFnPjZmcO1JLWFB9E5Nn0Sm87Fvd114zAcW
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
29OVTq7dfMjS1pF67ccQ/A9HJ9zl
     "]], LineBox[CompressedData["
1:eJwV1nc81d8bAHCba16rUMoopZ0GDZ5DWZGQKPkiURJSViFkU6FEMkKy9y1C
OCJESLrWtSV7Z10qv8/vL6/36+N8Ps95zvM850pa3NG3YmJgYMhjZmD4/1//
beTCtpYHStsPJpX7LVNw94Fv2Ya5RqD21Vr9EeGPn6W5pHNvwsGJyGEXwiz0
WbOnVXfBQHs5wopwFp/OSVKuK6g8enzxPGF9mWwh/1cPwaknROIAYY9t/q7e
VY/gn8V/K+yEW2TfWyoV+0FYYcIP2hIFSx/7qfcnJxBYliXzUwm7IAEoTQ6B
1NTRgNuEG7SU991/9RSO++/SkyUcureYO1Y9HF5c02IfWKRghYILzG5Vz4Bh
ZjYxjPDQ8VH6ZcUIYHoyLKRA+EmZ55x88QvwEtx7pes3BffX5fQu5bwE3035
MmyEg86rUqm7XwGjztTLZwsULPejp+Fdcgzs03fOECYc0MdVfPdVPFzbEujE
Pk/BBy2Tc3WFEkCCJYrPeY6Cp5ziW1+qJ0Kn6l+e7lkKjlo7Wu9SlQR9trMz
YTMUfLvc++yI1xsI2fUwu2+agpF3I76kmAxdjNa+OwlPsFoWHS1+C2lbDffE
TlKwIn9E8kJOGkhRrcelxyhYgNq3zeJ2OvDa32E5PErBI1F7Yr7vzgAnkv7D
YyMUHL61Kjw/OROS14W27BimYKt+Hm6Ja1mw5zwfO+9PCj755kpg2LZsYFIS
6Z8ZpODhXfMP7V/lgJOkQueLfgoumThN7zXMhbeqr0uu9BH5zQlyOi+UB5mT
eezCvRQcJxp+LEo9Hw51MF6zp1GwasKufc5VBeCtyC6WTqXgfO+m8X2SFNji
6nB/6w8KFrNwTBv2okD9hMKWgO8UPLMDSxkovoOOBI5ghWYKjs40FD1S/B7M
39zSE66jYKYnf9onNhWCg1HVjoM1FGxn9+bFG+dC6OK63H26moJVDs3wCRwp
gjPZJoeOYCLfhf5s8zkfoMG1atW/iIIvSowaJwoVA6nQ8xz7ewouDdHIu+Be
DOJfD7rcLyDO14zrcq5GCZRSjBVlsyl4J+lZxu2fpdDe72xXlkjUh+PCX7Fz
H2HQK8vtfTwFL/Ze1G/I/whXrEuYYmIouIqyaX23Zxl46A2d2PeCgk1N4rRH
RCpAPqHi9/UACq6p/ZsY6VUB/CXp4RU+FLzvsNnS2ZEKOCzdPcfsRcHrrFKv
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
vYNgNVVx36NLAN1xcKVe+TUI/wNAatUg
     "]], LineBox[CompressedData["
1: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
E1fhKG/E3QPnJmDtenkDx+xViCz/zdZydQLaH1xf3/RlFSyv/Y1/HzgBjq40
P18Cj888WHcY30vPy9sWuexhQ/vz41fpepPga5CbcEOBDeltWPPX2HgS3rjO
Prx8kA19WzgsU2M+CaRKb8NTR9jQq6ux7Y8c8HOjiGkxLTZ0Gd3hqwqeBDaf
T3I1ZmzIf0b632T1JGS28iVtCGVDZPvoek6hKWhfOBvI/ZQNFXnsNtAXnYJV
0eibyxFsSLtOVzlq6xScs5FSHYpmQ+sePNggIoOfLyn9Lk5hQ8qpE59nFfDz
7RabrpSyISe+X2Nz2lOw4lrwKG+MDWWUiadu9ZyCW+458vRJNmS0uI3tP+8p
6PfI+C40w4aCWRIVSvenoO5ugpAfgcc//8NGJWAKwv2CMww52ZHLxlsU/ogp
kHliWb+4lR3R/FF0Z8YURIWZ2e+RYkflDy1kY99MwbrwC/xWMuwowTeedSF3
Cqae6V5okmNHwSfPatcXTkFxzJHhhEPsSNV0xtehfArOpG4ga5xlR8Qr3nPf
26agIo0v292IHQ03Hvmm1TEF+zPI+jkX2JFB+Y6rH39OwZY3q1GCl9nRYalD
fSHdU0DLH905YseO5mpO/14anAKX0qoTTx6yI7ZYlvwIawri2+8Edn1kR2/b
/Yc4hJiwzU7nU+cndtS9XtO8RJgJrzm2T/0ox+Mr91k6iDIhS6HjfGsNO1rq
G+Sr3cqEojDlHQ3f8Xy08xrUZZjQqrNc82mYHdkpjg5eUWCC4cAPoniMHY3c
L3jdup8JPz1z5D9OsqOY+PZulYNM+Jtp/vzdHDuyd1co41Rmwhh3pVUOOwkN
rgsSvaLCBM6ahxyJQiR0Zm22n6oWEx6ZmivFi5JQ5aX3AVdPMIF3VulG3FYS
UploYwWcZMIGqeHWqO0kdMBp99ZybSZI3Nd+9XQfCZEixG3mdZmQvEW648kB
EtKIe1DG0mOCTN4/cqgSCb1Zt/HuvD4T5P9m3w5SIaG+jnG5gbNMOKxCVfM7
SUIJ6soageeZUNrOcLqvQ0LGojZVV42ZgOw+p9/TJaFNV+OTVS8wQSvWkepl
SEJDP9oCaCZMOEe0/3WyIKFG3qbm6UtM6AzL3nDHioQcP8aeyTJjgsnOh1q3
bUjopMu23ebmTLh8XinX3p6Esh2sl4ouM8H+XbS3tTsJRe7aMnbAkgnXFl+k
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
Prg6Vubm1SWArugc2WhC74P/AUBQS5k=
     "]], LineBox[CompressedData["
1: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
guiS4YH1Fox++B+9N021
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    TagBox[
     InsetBox["\[CapitalGamma]", {0.12, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["X", {0.9053981633974483, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["W", {1.6907963267948967`, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["L", {2.476194490192345, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.2615926535897932`, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["K", {4.0469908169872415`, 0.15}], "InsetString"], 
    TagBox[
     InsetBox["X", {4.59238898038469, 0.15}], "InsetString"]},
  Frame->True,
  FrameLabel->{None, None},
  GridLines->NCache[{{{0, 
       Dashing[{Small, Small}]}, {Rational[1, 4] Pi, 
       Dashing[{Small, Small}]}, {Rational[1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[3, 4] Pi, 
       Dashing[{Small, Small}]}, {Pi, 
       Dashing[{Small, Small}]}, {Rational[5, 4] Pi, 
       Dashing[{Small, Small}]}, {Rational[3, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{0, 
       Dashing[{Small, Small}]}, {0.7853981633974483, 
       Dashing[{Small, Small}]}, {1.5707963267948966`, 
       Dashing[{Small, Small}]}, {2.356194490192345, 
       Dashing[{Small, Small}]}, {3.141592653589793, 
       Dashing[{Small, Small}]}, {3.9269908169872414`, 
       Dashing[{Small, Small}]}, {4.71238898038469, 
       Dashing[{Small, Small}]}}, {}}],
  Method->{},
  PlotRange->
   NCache[{{0, Rational[3, 2] Pi}, {-0.7654320987654326, 
     1.6049382716049194`}}, {{0, 4.71238898038469}, {-0.7654320987654326, 
     1.6049382716049194`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6120227159746666`*^9, 3.6120228173464193`*^9}]
}, Open  ]]
},
WindowSize->{1008, 593},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
ShowSelection->True,
Magnification->1.4000000953674316`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 4058, 128, 124, "Input"],
Cell[4618, 150, 4025, 125, 96, "Input"],
Cell[8646, 277, 7274, 200, 304, "Input"],
Cell[15923, 479, 84, 1, 42, "Text"],
Cell[16010, 482, 496, 13, 42, "Input"],
Cell[16509, 497, 394, 11, 42, "Input"],
Cell[16906, 510, 393, 11, 42, "Input"],
Cell[17302, 523, 394, 11, 42, "Input"],
Cell[17699, 536, 394, 11, 42, "Input"],
Cell[18096, 549, 392, 11, 42, "Input"],
Cell[CellGroupData[{
Cell[18513, 564, 366, 7, 42, "Input"],
Cell[18882, 573, 4562, 140, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23481, 718, 306, 6, 42, "Input"],
Cell[23790, 726, 4346, 135, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28173, 866, 286, 6, 42, "Input"],
Cell[28462, 874, 4543, 140, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33042, 1019, 305, 7, 42, "Input"],
Cell[33350, 1028, 5079, 159, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38466, 1192, 303, 7, 42, "Input"],
Cell[38772, 1201, 4982, 155, 194, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43791, 1361, 309, 7, 42, "Input"],
Cell[44103, 1370, 4106, 123, 194, "Output"]
}, Open  ]],
Cell[48224, 1496, 402, 10, 42, "Input"],
Cell[CellGroupData[{
Cell[48651, 1510, 1003, 31, 148, "Input"],
Cell[49657, 1543, 738, 28, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50432, 1576, 133, 2, 42, "Input"],
Cell[50568, 1580, 1016, 35, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51621, 1620, 178, 3, 42, "Input"],
Cell[51802, 1625, 1041, 33, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52880, 1663, 370, 9, 42, "Input"],
Cell[53253, 1674, 1580, 48, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54870, 1727, 319, 8, 42, "Input"],
Cell[55192, 1737, 1437, 43, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56666, 1785, 315, 8, 42, "Input"],
Cell[56984, 1795, 1499, 45, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58520, 1845, 344, 9, 42, "Input"],
Cell[58867, 1856, 1665, 51, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60569, 1912, 342, 9, 42, "Input"],
Cell[60914, 1923, 1615, 49, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62566, 1977, 341, 9, 42, "Input"],
Cell[62910, 1988, 1483, 44, 84, "Output"]
}, Open  ]],
Cell[64408, 2035, 620, 18, 70, "Input"],
Cell[65031, 2055, 6841, 198, 288, "Input"],
Cell[71875, 2255, 210, 5, 42, "Input"],
Cell[72088, 2262, 133, 2, 42, "Input"],
Cell[72224, 2266, 13712, 405, 320, "Input"],
Cell[85939, 2673, 1194, 20, 70, "Input"],
Cell[CellGroupData[{
Cell[87158, 2697, 7688, 224, 448, "Input"],
Cell[94849, 2923, 142886, 2366, 333, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
