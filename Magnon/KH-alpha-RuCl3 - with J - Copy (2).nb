(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    511595,       9944]
NotebookOptionsPosition[    509235,       9868]
NotebookOutlinePosition[    509578,       9883]
CellTagsIndexPosition[    509535,       9880]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.718468907989884*^9, 3.71846892002048*^9}}],

Cell[CellGroupData[{

Cell["The classical ground state of zigzag phase for alpha-RuCl3", "Section",
 CellChangeTimes->{{3.7184690463734055`*^9, 3.7184691134872336`*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pKxy", "=", 
   RowBox[{"-", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pKz", "=", 
   RowBox[{"\[Minus]", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]xy", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]z", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Theta]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}], " ", 
       RowBox[{"p\[CapitalGamma]xy", "/", 
        RowBox[{"(", 
         RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
      "]"}], "/", "2"}], "+", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Phi]", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pJ", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7184691584073267`*^9, 3.718469258030373*^9}, {
   3.7184695899519725`*^9, 3.718469618540905*^9}, {3.7184696528151197`*^9, 
   3.7184696730717106`*^9}, {3.7191546113337407`*^9, 
   3.7191546182649717`*^9}, {3.7191546762775073`*^9, 
   3.7191547193248825`*^9}, {3.719160719698928*^9, 3.7191607410597105`*^9}, {
   3.7191611031210318`*^9, 3.719161137950824*^9}, {3.7191644283817387`*^9, 
   3.7191644488077307`*^9}, {3.719165232406958*^9, 3.719165248924226*^9}, {
   3.7191668367508135`*^9, 3.719166851010581*^9}, {3.719238494026471*^9, 
   3.719238505979059*^9}, {3.7192388187457867`*^9, 3.71923882556927*^9}, 
   3.719240919754949*^9, {3.719249773649143*^9, 3.7192498108255973`*^9}, {
   3.7192509180108213`*^9, 3.7192509388796463`*^9}, {3.7201957889000826`*^9, 
   3.720195804047458*^9}, 3.720195835541623*^9, {3.7201958884707603`*^9, 
   3.720195894040225*^9}, {3.7201959324401255`*^9, 3.7201959349547577`*^9}, {
   3.720196149263216*^9, 3.720196151078658*^9}, {3.720196601779607*^9, 
   3.720196602620137*^9}, {3.7221863266914625`*^9, 3.722186328598254*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pKxy", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
   RowBox[{"pKz", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
   RowBox[{"p\[CapitalGamma]xy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ")"}]}], "-", 
   RowBox[{"p\[CapitalGamma]z", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7184691238978567`*^9, 3.718469156353512*^9}, {
   3.7184693153927474`*^9, 3.7184694834033313`*^9}, 3.7184696822956715`*^9, {
   3.719154627968582*^9, 3.719154642304252*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]1", "=", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Sqrt", "[", "2", "]"}], " ", 
        RowBox[{"p\[CapitalGamma]xy", "/", 
         RowBox[{"(", 
          RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
       "]"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7184696971819024`*^9, 3.7184698150533776`*^9}, {
  3.719154647542511*^9, 3.7191546745578895`*^9}, {3.719154739847042*^9, 
  3.7191547523615503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]1", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]2", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]2", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot", ",", "p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7184698200367126`*^9, 3.7184698622465916`*^9}, {
  3.718469922676993*^9, 3.718470028638232*^9}, {3.718470243415079*^9, 
  3.718470273416379*^9}, {3.718470373692477*^9, 3.718470382470674*^9}, {
  3.7184704335938005`*^9, 3.718470562412529*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
84lQI+a3sMd+odJHv6L7BymO9usdOzaydtBP2Ced1p8WOVuKw95u18Bi1n/w
gOfWTQ8zEe47wPW7fbnB4g/6iXa8S3WcWD9R3wC+7Jf/debnaF+8PrS4ThZ9
E9h+DRz1lp0T1xxdc9Oa9insXyt/2hb2UbMgHHWSt23tc/ermpMfYn8JLY0y
WsnHbfgJnbutDfjF9nesU+jDJffUZrC8DzjsL+qG3Y1q1KR5xH7klu3vsXyQ
Pq0X4AnLJtyY5KlFOHSLVeCz9rmHtKXrSILHv/3eMzhKqgOBe16/v/0Qr5+x
v4jjpSF34WhI+qQ8Q1rXwNfEPn5unWJJ+ybaOftljhfL15QUne8PSv5G9qVx
B3yZHkB8A36n6czWsDumFMeAtwnZ0WWUlinFbeBu9zwG3fiqTeeVqLc88Kxv
we6roH6COvaH4tMR7L1m1KNgv9p8vzWry6G+gTpzg+O0f+y9JPRfPA9/RLUu
1UGs/6hvwN5E1/EBez8I/UF9u2VZ3WjfK7rUH9iXDxvmxN5nR39gvyvQbUfX
IdJ7KbDvlePYR9NYnur2sO+jF72zyK2RvjsB+/Bkl9Wzwv6QfoB9YbXG3CbB
exaIk0uqFswKFZyf0ncebl7dys5PUS9Cncp9aWtT9r4b/A15t3Wfz+XMD9FP
tHPnYtJZjS4qdL8X7XyNEr9fhvlFO51r7ewWfNGl8wXEW7chvjWXnTPp/Atx
e1Sk+H1AtIO4HTr5ntI7een3MVCHT5u7q/jSNiU6j0AdPjRVO4W9D4X5hf29
iKv5wvdGgY/wnhLPzh/RPurbha0r7dj5EdpHve6Iyo8gdk6EfQf2+zfrtGbn
U1jviP9NB7KUWybbkj3u2zzeci2H3R+GPeLtojsb6lurSOv5qDO/f1C1mL13
Dz4R98KVup1k97LgJ8Cjz/9dw8534FeoGzvXBvVk929hj3iYtMziCLt3B7+F
Pj+edIj7NUx6fwbxrThwns9GwftEwDdPiDPst0j6vifa+bRQ/F4n5hfxc+4c
U2M2v6jTQm/bK3XyZOcy4B/4kmuezux+L9qH3o70F7+fi/YRV12+tunD/FCc
58hx0D/dJq9KUM+wpvWIeHLpTak7ez8IeRDslc/Y3Uu4ZZyCc3D4f+5s8bgQ
b+H/W0d6174VjIvyQSWnqex9K5xrYF3H/zg+OeOoLO2P0FcjjoX0Y3ku4j/w
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
Xh0ciR/Pu+YZn/e04nVsZvclV6V1gGOihgst7NW44K+dYn/z+ynWO861b8br
nm01PZfqSzi/rv5SWLOTk+Z30MObo6cUsPM18IPn2vgmhDJdQfpTUp9Z1017
hLAO2UUyrs1mOrZsfwSO+wMhTznFzvy+AD6b/+5nczxTgoMftNNvW+Eytu8Q
z5L6Rl65/cR2+Q7EG+Zr0KdV/dj+Bd4qPEse756pyb2cGb10sKZ0f0f/VQ/3
GLdkrDX5D+o5XNHm/52HYr3gfD+vae/CTX+0aF+Dnn8YMWOFFp9H0/mLRM+/
/bpWlXPTp/Hintsuye94Nse3SnCMC/yMr/ogz86d0U/wY/V0hnqbNtL+g5+N
YXXLqp2lOPpj83Nng6evNN9BnaeX+2MHowpLaR1PkndwJW+f6vH5PsaLfq5J
+ReqEC09FwNe9ndfMjsXaz6u7ZJxYR7Rn0l91qbrFloTjv7UNFQk/etrQfEE
PNd3d9+zur/0+ySoO7nf50Yrh0njDM4vYgpmx5W6ahJvyF+25XsPPG4jrZ+g
7mR/UWZ7io4J+T/a6bAvdiyLG+AH9xI3VPRMOSw4xwQ+Pi71ZRj7/kOz3820
l/xuZnO8aqcYBw/o5z3FxDEnN0jPcdDP9i3zc+ICPlEeh/OUWdd6LdeJlO4v
aD/61zrOid9nsZ8in9o1yv+AvLs88QD7xxuuL5jwzJR4AO5Sttab7S/A8dwO
2weprHWR1h9wr/Li48jJbJ+Cn+C5jidz0vyP6xA/sN8o+f3K5ni4BAcP9Ds7
zz/c7RCiSfbNf9eyOR4jwdEOzn2SUjsPf9Naj/QV2h9+8Hk025fBJ/B/itcS
Hfh9HLwBX+0xNLB7f2Xax4Eb7opvsUGgN4D3it+fyHQF6RNJfvpso5PIu0xa
j0K++XtP/9GtLxdQ/oj+dz/cKDrK+yF4Rj7bL0hlA6u3wE/AQ+R+H/PFFxVp
vMA9YnPy/grOAen7IXsXuDnz+zv8B+1Xj6ttMXS3dH0Bn/Tpn4bKlWqqsyGP
PjvdSK+3kSLtR3huhLXcAdUdWVRXxLnYtz+vx/L6lvwKed+YsIonQh3e/Hsd
wHGvrPFYV/nkLdI8Avdn8jeWWq/ZbUL7BeyT941VaiG4HwI8w3jJPR0rO+IB
uEzBjDs6a2yJB+CLW580WNShNeF47qFh0R3H20jfz8U9mV21jyewvA/9BC73
9FpPli+jHeBm9r/aszwU9riXkpOxdVNreWk9CvlC9eeNhRkvzWlcwD13vTDj
8xeKM9DDeYedjxdvkH7vEbr6M7cvcteLKtLn9D35j4OP2vPrEfMLXZpYllbB
8gWMF3pscH3PV51G6lL/gQeZii6UuErr1fSdK+v4JJZnYV3jHsJzye8Gon3o
nJ8Z07LYfR7adyT2h3cbxW+w7ETPhf2sGfss5fh5Rzt0j2J2nhm73wX/hH2A
zM+lF1ItqD+4b1Ak+Z0+PBd4uJfsinfajrQ/4tz/quT38jC/wJXjlROE952w
n7o2nTB+ZSf1H+BJawy7fOPnEbwBX136KYvxhvaxr7k9Xb+R3TtC3ECct1G/
cnrEynxR831Kfdf/vU8Br9Qz1x9gUpWMdYf4NrHkeQPH5y9oB/GqpeR37tBP
4NXxDq+3KErPJREfSp7PTmL3puCH9Duz+YGXHXj/gR8CP9Z0PmvYKF3iE3hy
RdnPe5aypNPgz8ndTePZ/YHm5xEJkvMItA88yeLP4d78eNE+/L/iyYE37N4U
6S6J/4zNPhvM7j0Chz94DeQqmM4ED8C/7BhQx+7pYX7B81pzjxsH+HUHvwXe
7UZOvnJMAekx8D/uyNT09nx/mu+n+J1o8Al8+o37qcaCe1zAjx9RdFgT8490
BfjkdlTe+snup+G8tdnv1gFXbYYjnuP8pf+C0o42gvM74O/P+7tfcblO5+A4
78h7MfDc1qfa0vgvOU/5jt+ha4Z/leAYF9p5d+/sihQ5bcJxzr5HpcidnSuh
P9BdZo0rbYXn6ag/r/eyPic89wc++9mF2pgi6Xmi+N5uoyh98qfv50tNqR3U
Nx4HaCTKjDah+Tonqc/ESepFmHecQ1Ufex3NzkOB0/2BdvJqmr+l90V7SJ47
/vbs83cvtiJ8uuS5JgZcgUu9GvUn96a3dhR7n88npmbFen3CcQ51cIzz+mc+
ulL9ILE/pf7IVr+HtD+w3zPvZnSInsB/JPYTxipVbRDgsB9+6MBy1g76+Uli
/3KoYRJ7LukEib1eYkOXlXw/6X6sZB6nf+o6h/kV8EbJvLcKu22uz88XxoXz
Dpn18Tfu8PwAhw5vEW1fxPH8ND9nKZWcs2C8OKc+kh19/WCRtN4F/7k5+WFt
q/7Xad/Ec+uyn+xn5w5UT5bgSW36u1wolerw1ZL+5JktsJAdLc1TlCXP7btf
cQobF/AUyXNbjFp9iPGAcY2x6b536EM9zmryOI7xCRz6vI3BwEQ274jzOE/f
tPJqzkor6byjHc7bZ1AwP4/A0Y7GivJcPX4eMb+wNzTxS9YX4LCXsZk0fCPf
DvrvJrE3Upm8SDi/ByX2X13+NAj9wU7Sz9Lv5X/YPRngXyTr8b3cGrsIPm6g
nzh/eZ/39YnSemm9Djq29zR1s7NvikT/VceGPfSSxZm0a8J8AfWu1dnut1uu
l+ZlOA9Nfj67+BjfPvYFnOull7rfYuehaB95VlWFtmGPBdL4DD7ldBZ2CP6n
+v/ssy0k+yz6b93snIjic7PfwwKu+R/45mbnR3RfRXKesmGA5c1tSrakP3Hv
65NP8IOfozsSjnOl4sDDI9eWd5Le55S0YzVk29JK9Q6E416czBSLc6z+Axzn
TZopPXezehHax322yiv6c9j9NOC4D+bYoJ8ZyD8XOM4jet5R+1vE9xPt49wn
6l9mMqvXAcd51sCvsvFCHOcvg/sZtGR1v/861wCe1ux3ozCP0BWWkt9vao7r
S3CsU+DTB+1ZvkKwX2O/G7336Ua2X6CfiEtTXrbYzvY74IhjScNHZQn3R/jh
tBXhoSUsL/iP38f5L7y5fypI/BO6BXniuEE13sz/geM89G/KujLDCkvqD+zD
7h64lT3TkPgfJrF3cMz1bM9J8yac+yj5HDvO7kWjfeRB3gouc1jdGP0Ejvs2
sK+T3KvZN8RFntXNgJtK7sOsWOcbwvqP/qCdAqfJOnz71B/gL6YvnbFD8J4I
cN2RcyrkomtJZ+K8xrvFIe8HvI5FfIP9lE8dfv4cKkt6Evbf7587I8/n1xhX
89+7gc6Evp0SsaZ8Q7Aa6VXYxx9p7ObcX5niEvI7T2/vdHmB/qTfi9EdnPeQ
72fzeyMLmt0bAR48olP6lntS/Qy8StHHW5inIP+ymB5bv5DPr5vf9yiT3PfA
ugA+dEBarjafpwNH3bh+XP6vIUrSOjzyr8a/VXtYPgg+gYeYD6kW1s+RZ+Vq
bzvJ6hKwR5417/oHC3ZOARy6vcO4kiH2fF6M8WJ9eX24Ocnur/R+BfC675Y9
+/P5FOyR7y//c8J3oaDOgHPMT/1UleWyjSlPhD+4v8kJWiSo/wBf9Xn3k9+s
/tPsXpNNs3tN9B3vnMul3Xh/aB6XTCVxCfbQb12iutpmZevQc3FP9f2U1m1y
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
zLvB9X+FbywX4mqsC4Pnlj7uZ1ttQ8/Dr111lOcnEV9BD0vGTU9SjK/Azd01
27A4H/IBL3Lp6/Lhlug3YZfafF66/sQ5E5ID4oTsuZuLmBzwPLjzZv/vLF+E
eAB6pfKq6tBx4T2QA3jJz7ktw11NJXXrb415/S2+S3XO1i8+vxfkVnc9cQ5f
T6xbr1vC63UxX4M+ePaRz9fQTvSv68Ln7Vj7Ecfi+e8ffjxn8fN77tfAS69P
6MX82mY+fsEzV/RbHJSiTPE5+Ov3+7ecFPQEcSy+u+BMm35nhfk17BWe37LI
MnqP4N/Rfjz/sqq2ltWHQA7Qw2233j5g8sTz4DcuyetJIH/w7mkH7gUJ4yWQ
21Xwy5V7tg66UuiMvDTVc04aePxW9DtnjBdwq89OPTcJ4/E8tzPgxRIztz/n
F0phZ8C9TDrnKn8rlWL+C34h6Pp8Zv+Rb6H83uteT9m6qnzfmli36bmxttmE
aBNalwdf0CliNotPECeAb81WN+spxCeQD+WXzsvlA32APtvO3Hjni6APkBue
n6T9InCMIDdwqo8qedqL2RPoD9Xd5U5bIrFTproF8Oidg96HCvqDfgdXtfuh
6REg9iPlZ37+t98xjpR6uayPEdqDeRnihAt+3ZYnX9Un+wA+Z/O5GmYf6lu3
Uq8nTq4vrqhvHQrfxfj99PWJNvvuRB6vgkdYL//S/Hybeten6otP6nu+vvik
7jrXFL7OtYzHV7Q/oktB4lwhvkLeBvzgrc2WrF4F8TPV1Ty1NPmQZkf5HPBJ
369cit7TTjaTx/kY12rtbiSzeBL6Bh7vVPTpmDAfRz0SeIR9WZsTQnxoztcT
ad7BzyF5zOMB8OdjbWfaCfEA6pfou+/aZ6uOec7PHxHr/zs/G5byxj1NCj8L
O9P1Q9abgYIfhBwwjmwaxeuzeAbrCOAZibufsXgGcgZ3/xAdHna5hQT1POCn
rdJcPwrfxXo05TEKhhWev51HdXrwg09mdF17TtBnjBfwEVpfz7G6OMR14JlG
qyayfDL8MvxdjM/cscwvX+D2Crxsm2Gkn34bWSX3v+Ajp3htYv4XdQLgITe1
vFhdE+whxu8o50f3IgR7iDwtno/b3yzy0np7qoMCH3b40HOmV5AP3hNw3T+1
SJAP+pHWx9utvPXEJVuK8Uh1sHHr764W4l7oP7i67lRvj2B9CfQT3PuvEceY
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
W3BXmdbjwMe7NHf9GFjmjO/CX4S2SoubqK9C52rSfsZPM/WdLCqkaA/4/fmx
OoVOprRvDuM64PsNzW+Pzf5vP1oU349Wd3+ZId9fRvew8PFrrJ5UcW9gGd2D
AO7yJL7QZo8h/RftI5sfurD1C/Ece8jZo+v6fgWDRb0Cz7a5OYndZ0H3uXOu
tEYzKleQD56H/O/yukGdOnkMa57HwPMYL519C1LMQ8Rza8EXZ3l0m2mhTBx6
/rmJw2+5kTw5D16wzkfx/ibouU64QaYtkwMfj7Q+VXJ1SWmhJv0v+v3YtW7L
cu+K9/fRfoHuQ5eydvrU8acjuD/Fd/H8Rv1Np1n7m9TJMzvwPDOdw8x5yEVp
G2YP0V/gB9pFrGnzQrwPi/aR1bmnFXwyv6cVHPLf6t/l0zh98Z532JOZMYay
L4J+4nnY5555nwbv/CTaB8h5zqqjLor+C3L4PPvut94K9g162/Pa3RJFe0v1
Tnz/GvSfxi+vI0X/Qh8u7NO+PMNCvK8Q/NuK9T9Zv0DOGHdPfEOfOw3HeShi
/WcOr//E+9FfhqOeShTfD770oI2jhYJ+1p2/kH7y/90bKtdD8lOcF82W+y+0
E/1VNDbsELt3FRxykF3ePov1C+QGORfwuuW6+zHX8/2YkD/ej/uqFtWZd0gq
5PMOOl+UyzOA14nheXAn2c39YwW/AA75+Dx6+64gXuTQq1Ael+L94Nq8rgb6
hn6ZGluw64Bgz/EeqgPpWHrU9+M8sm+Qfxrfd4zxiHaG3mq2RZKoRv2L/33E
6wrQHtoPzte1wfFf//J1YfRL3XVD2EOMlx/nnj1ldtWnTvxsxOPnFXXiZ2ce
P+P9+N/jb5uasH6nOJCPu29bY/wUz1OFHWtUWml5qKt4fjL6vQs/n5biBK6H
DhUmv98Djv+6Yhijy96zos484iyfR8yvZx5H54Tz7+bx+8v+B5Pk/3c=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnQXYFsXXxvfZDrsxUBQxwe4WBbFFsRVBUGzFbsVAEQMDW8JAMLADRQUT
sbFbMRCwu7/7997j9f+ui5eZZ3Z2dnZ3duac+9znTIe+R/Q8PI6iqHsTRYnS
VcsoWrkVRe3yKPq+iKJY+f2UPq3yzVSxvyq19Lel8u+rfqx8N+U/UP7NNIoe
1u+rdM5COqenyr9VO2P1e4LKb1U6RuWnq+4rSg/VXzuV1apzvf6eUv5SpQ/p
Whvp3B/qKFpMdd5Q+Q0q319t9NXfYvp9gNK3lC4e2n5Ef5er3Zt1H5OyKNpA
6Z1qY7D+XlKd8WrzKh2/Tfnp6ucLqv8q96Z0X/0tovy9qnsx96L8DrHbpc2H
lN6sftyoNhdVnz7VsReUHqs2t1H+VuUvUH47ytX2A6o/WX/X6dzjqij6TelA
HTu/dvl5Sger/s4cV/lJqvOP8icp/5CuPZFnpd+36Pejyt+gshnK36f8aOW/
VP7+kL83cX648jNV/qDyN7XcZ97D+2p7bOE+3aT0dl07UR876V4eabn8unAt
niHvanpohzZP0Pl/hH5+o/zujAG18Zvy5ypfKT9UbX2oZ76Qyi5Q/n3lF1D+
QR2/XH+fqJ091N7u+ptX+WGq87zqzKn8Z+rLLqrzmvIHq3/zKE31ru/T8xmp
686l3xfo951KByl9UH8zlL9T6ee69meq87bamqnrTVd+TqX36twRkdufqToX
6hqlrnmt0mdUNp/+7lK9r5S2dLyP/g5U365R+oXKu6o/w5Wfov6UKu+l9Cre
O2NP7Tys3x/p3FvVhw/1N0X5K5V2UPsb6Nz3lL9d6TmMBx27TOeUKltXbV+q
fKH82sp/r/RdHb8x97f1jvLPqN/3q//3RX4Wv6re2TpW6vo3qd4SKptT6SCV
7cQ7UX5uHXtB+UOUTtfxDvp7Qec3ei67qE9z6/enSsepziTl51W9l5Q/TOn1
Kn9OZfPr71219ajSi3M/uzsjP8s5lL9D+XuU/0jHntfvq3O/m/GR39WDuq9a
z+UYtXu8+vx75PxQHds9jO1DdM7lOudA1TtD1z5T5Q+qj9dwLT3bgfq9hfpz
m/JHKH8Gz0b5v7gXld+h/KnKn6t27texldX2xyp/SuW36PdBKr+UuUHtn0Lf
VH6U6v+r/lzHWNQ179I5V6rsAR2/RX1+JnN+QbVzt+pfoGNfKf++8p1Uvr3q
HK92T1Z6ps4/h3Gl/N1q5/bIz+sftX+t2q91/JDM99FRxxdQO3epnUtU55DE
bb6uY9/o94fKv6n8cqrzsfJvKH+1zn9F6Qc6dxX9faHySbqXCWp7RuL5+U5d
61Odv7TqPq5j73Mf6t8vfEuq8KPSROmX+vtE9SeozvPMYUo3L31d6l+h819V
+Ycqe1TH3lP5XSpvaJd5RykX/CBxfyeqzuyW61ypY8/q8Os69xX9fcmzV72/
dd67SqeFdml/4fC9vq3yj/X7LJ17jdLJek7Xq83Dld9XdRZNPZcx57xQek4Y
rr/FVO9xlV+reo+UXlN+VBvLlS4/Ued+HeZJ5q4XVd5Lv+/W3xdhzmTM3alr
XUSfla6l8sdCm/M1zp+jNvdKPPfervpDK4+pdVX+kOrMpfNO1Xknq/zfyPn7
Vf6J+reJ0jt0/EnOVXqC+nSjzu2kvqyov0kqv03l5yi/U1gLFtb9PqHyofo9
Ldz7hcqfpuv1VXqF6r6k8rEqP06/2+k6Nyufqt3nSq9RX+j4lNJz0UVqc47G
dU5WG0vo9y3K99e5S6vOOOV/VRsPlv7ef9F9XKR6L7L2MR+XnqeHxf7O+d6b
ltezm1RnN/0+s+U2T1d6ic4fz7yhc9snbv9Y1RmnNmOds6zKv4987q5K83Av
Z+ucx0uvvb+rjSeUn6Z8ofMeLT1fDql9nTGh/2+o33qk0QZKL1a7/2TuG/28
IfL81JXrqfx0pQNYt1jbw7Mmz7NvW2tbXntXUd3X1ae5VH8z+q7yvSKv1Scq
34f5S8dHJD6nj+rvrbLvlPZWO8epbB/9HqS2tlfaWffyN7+Z35RO0T1swtxa
e+6jnLlwFV3vg9TPbT+Vn6ryfuH5ZPrrEPsZLsbaoTZ/0bHjW752d96t8uep
ndEaT6NanpvaqX575BzVP0y/j1Tdg9XPO1TeUeWvqLyb2t5Sf5fpnOv4FpT2
zz3GPladC/X7icwy0imZ5ZxOrMuVZaYxkWWo4frbHzmqtkyyCuud6rxYeH4e
UfhbuEvnnMVLU1ufxb6v+3XOykrfVv3Ndd2PwnX3VL0BrHc679rS+d90XlfV
+SR2X3k2F3O/zK26ThfmGrVzoM49RWUvIx+q7KyWz2fsMIYYs+er3tWMzdLz
PfdyltKl1eZS+ttQ562nvt3HOqn0DeRd5kOlCza+l2Fq42mdM4rvQOmTmWWM
0zPLdePDN3Gr2toxdlu1jn2n/Dr6O1v9u0z1ZyvdWdf8JvY5c6eW53jWq+tv
DOtv5DkDmWdc5PX7Hv2NVv4yXeNu5ZsqrGGR17SPkcnU37cbH79U5Sfr+k9l
lqPOUNoz9VzJPImsNyHMmX1jPye+63vD+sU6trmOH6OyM9X+67reFcpHSk+q
Xfe0yvLk4jr/ReXv0zlHq8qhSl9MvXazhj+fepyfr3YuKf3d7FB7zkdmXVV/
a8aed3lPyO+kpyq9sPI3vk7t/iKXz1bZczo2VuXnKF0j9hhl7C6h34tnnluf
zSxHn630XJ1/B89W556Zew16K7cew7qJLjOH+larzt+q/67qD1LZCObXxOsm
6yBr9Rax18JxOn9p3iFrIuuN8rflnl+YM45V2bl6J8sxT+aeg5iL3qK89Dxz
tPK7oeso/17k8fahnstCSm9qPM42VPpObnn9QqWj9XuiytdrvF6hM/DsOhVe
i29XnXv0twJyjdJd1f6KyHdq/279Xl75BXLfN/ePzMDzYR1kPTwE2Vh1F6k8
vzHXdU38/niPW7Huqv4NSusg+2+g+rsoPVJ9nwf5Q78PV34O5T9XfoXa6TyV
9YP1ld9Z6SU6f0rmOXxepfu0LNNvhizO+qz6RzBPJ/79iO5xJdVZRP2fnVr3
/JnnUvrbPzm2nHVIkN+QSWYpXbZlueB1pS+pnV5qfyfkSaWn1F43WT931fW6
M4dzfV3jV+UfUDqU8d7yt3G/+nkS96e0Kj0vHaA68xbuwx7MSWHO3x1ZgDUo
rD3X6xqbq+xwXWcUzzH2nL4Nwp3SgyPPW6zffGNTw3fEc79U1+qt49uqjS9V
/ntsfeAFtXc+613uOZ48a8DglvX3QyPL1Oe1LFfPzL1WfZtZzkDeGKv7HaLj
F7QsM5+rtKW/Q5Tvo/tKlP9J9fvkXht7q+zF3Of0Vfqezj9L5aupbyeqzUOY
q1X2be1ndb3KVtU9n8waqrL+Or9SnT/V5o36/Qc6NnKL0kzlx6jetWprPbXd
V+ftr/p5yzIMcgTrRj8d66djO9NX1b249Dr5EzqT/s5AtlJ6lNo9j3Yb398p
4R5PUP2DlO+u48cpfyDfhfJ76pxtlD+8tty1iP52TKxXoF8crOtWes7LsLYq
f25lXQad5mXVWZZ1M4zP6YmxkU8Szx2zwxzC729bXpdZk2kHWQSZFtmE8u6p
39cWIc/1PixcxrvmPN437/pZ9f9hpatmnuOY6/5rh/qcd4PO/wo5XcfmKi3v
Mn8+oTpDlN+O8cq3pPzGrDuVv0X0bMYP/eD+L1VbOyndRH34SfmTVf6z0klK
h6reJjpn78rtLa9z/01cjn4+OXX7nM89bRH6d01puWkR1d9BZdvr78XaKb/B
Mo5hbCmfqO1l1caOqdfKE1X+lvKVyvspf43uabraO17519SvhXTsBJ6tykvV
WV75VPmMdablazBWkFN6pJa3twG3QR5rLB8hiyCH7KvyP5VfGrkxtRzDWFxK
v38N9Z+vfS/c0yfhXNoEV9kqNf61ApiArr+i0r10/kXhmRfoi/rbFB2gcP4d
1Ruq/EbMY3rme6idSxPP0azLyyOz1647LJz7qK5zrvJbM171d43yX0f+Lq7U
7zeU/pS4znIq30ttXJ/4u+2gY9+obFbtb7ZU2Rq15yrmrD917CKVj1P5h5Xl
0lFBNuVbQJ9/kzU6yM9gAawTrBdLq/zryjISmBPy+bWJ+7hR4jpbRJbZRqrs
I6WPqZ3BKl9H5cvr9w9KV1Z/Nsu9XiR6Nstk/sbXpW/6fTZzhNL7de5ZjEnm
MubGUOcYnT9T6aJgFYnH/wr6fXTtd0H5pUHWQuY6Tv1ft/SYWUK/Z6vuV+ih
lfWclZSft/rfWjd/5fWKdWx/5Xuqned4lrH7syjPXL+35Z3yjYAtqPwIcB5d
Y20d30npDpX7/pTSDRPfF23tlvt5d+NbDN8I3wLy1HapZaoLKusa6Bw8G+5/
3dBv+j8dOV/HZqXGtXLVOVT59ZBTY8uLyIezdI0dlX6FfFm7zlvhO+Xaq6nu
c8hxys+JLKi/dZXvpXMmqd4ByCG19Z0NU8uL2+j3trrOMP1eU/04iG9Kv99E
Fk89hyyg/qyvfDt0DPVvtOqto3RybZ3pytKyFHXQq4/V/f4c2kRW6RVZ9mwa
Y0jkBynfW89uu8Zj81iVLZJ4fUbfY40ert8DU68HV4T8jpHrU4f1EnkEuaSH
8nOGPO/7SGS61GN0wcR58C/kIOShrZT/ojBes6PSPdTnR1QeN8bV+yv/E99P
7WfyRm0850Dl/0A20u8B1NH9/aP8g2Eu+rzwerK90q/111f5XZU+y/PXNa8G
Mygsj/+t+3+6tm59lcoP1fmj9Gx/VP4Jla+lNh9XerjKb1T5zyo/SvkHlP9T
+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
PMxd4M/sg3tW5P3m/g9G51Eh
          "]], Polygon3DBox[CompressedData["
1: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
MW2/di7h/Gdr+/ZiX/ost3W95h6O5tn8qx2IvjHHJ6f9xbTZ0fUVfTz04X5r
6BuhT+bci74D+lroTvvn8mcI+qNc09ic6xGuY3v0B9Ar9AfRt0afjTIubRdw
/ujEPn+R632a6z2hGxtdW/1ZbTZtD9qPaGfOd+4/mfbna+ugH4N+UJW59jL0
/bS9af+K8yXj7FtmDXUtHU79vt2srzvUssa71h9Bud/5wzWZsXbxmPYb+pPo
+6Nf3oiNfhZjDXN+0v/QXqliU2pbPqY9qG3Vje26GdfwirZUN7aWc7Zz9whK
w++BNmcy3vbdfOvaLNou01S51kX1KdCvptRpf5zfB+3Pq/JsFuL6PkSehHJi
I3PWUG199HN8dvT5qps5yblJH0dfZzPq/2nEh7nSuZkx5yhy7Ar08yhfNLJm
17uxX13btGm1be91fuR+H6fPWei3VrGF9UnORh/KeIsVuaY90C+h/NLIGrtS
lfnxS+Rfub4pubbnKee2c817dTNfb1eLzaPtc2+V9dJ1c0HK0d389q/Sf0z6
3k39t42MeT51F1Ga9cyZzp2uGa4dPsNrXGs4//hc/1BtVv5/SPkKeZxG5uDP
9DGK+ECboN9extf5FH0O+k5Uxpb9k3In8pmtrB0z12JPTMyxWZH/otyFfCnl
f64lXNOcjNctY//O6pqMfgp9ntHWrMWfOZT662t532fmfGOiT1OLDTYm+uhl
5qZ3KVPQf1u/Q/rXtI+Rf6Y0kNdpZP0dt4zvtRP6WPTfkfrdi/gP+pubUX8M
8mCez7u0X7gV2+NDyqv6T9QfTf2IRuyHbTi2vfMNx27SxqL+XuSNtUn8HZ0b
9ZWamU9/0v5rxkfSV/oL/Rb0hWp5H37U3kW/mvo7nXsot/tuoA9m/H+7eT8v
QX6L33si6q/Rv6P/+Mh/a0+jL46+KuP9R7ueviDlZH1H2pxL/Z7aQ+i/+40g
n+/vxnincuyRWtZofZiz0J+sxefR35+A/lfQfyz6zOu6Q/1Y1D9KOa3MejQL
xy+lzdjOZ663zZzDc33Ynz8XoM2WnO8LfyP0Pei/Bv2X5hxv1eNz7of8HfX/
FMEMSvruT5sraTs3bfahbk/0i9BnQ99bG6MTbOAR5CMY/yr0s9FHoh+OPoz2
19J+Htof5JqMfh76zOi7ox+MPgJ9IPqB6AdWsf+0fQ+m/7RlbNWFKcdyffOV
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
OvLFtP+HMTav5/v1O9an07czpjlGO3jIEPGHfrxDTFNsc1fqS449pS1Rzxh/
a3twbC3GWruZ+KyYptjmqVz3Mb4rVWKL35WJN/7rM60HjxSXvIzyVi2Ypvjl
fK5P6N+WiW+u47rZSMz3G6+X0m4kpmG8/KMq8Yg5kI+i/QRV8FhtHG2d5T1f
LTEf8WFtSG1JbRJtk7Wo36uWGIrxg2Vo8w7yRdqLZWwObY//tRLfHK/Ku6xN
pG00Ff9Ppv1rtLnKdZrnN5TxKo5fRP0WtF+jFptA20D8+ORG7mHNdp6Tz+ul
WuKzXpfXNy76s8iXid/qr3Hs6nb025Hvof74Mhij/v+ZZbDHy6m/k/rJ/L6Q
r6U83Mh8vi3yEa3Y6vrYT7Tix+lb/FYkHuV1er2HN/J++74rL6K9iHwsbTZA
Hoc2z7Sia59vpb1Jfa+MvIT4pOuw35hYDO13L/NN+W35DMTPNxcjqCVGd30r
dpL20q/1xJdeL8OdkEOhDztfO7GFZekzP/Li1G9QS4zlVPQHytjm2ujGqxZp
J1a2pv6M74sYhnM7ZQX0e9D/qcVmmhv9yHb8PzH0cai7Cf1J5Ptpc1Qrfrb+
9i214OE7cOyGRjC7W/p4x3FF7O+L+3j2mciP8ntMLZbnOalfQ3unnXfMd23v
er5RMR+xn2s4dj76dJ3gX9qL0yP/1kqd/s+W7Txjn/WRzcRHNmvHtzFG8oPP
t6/rv+jHLNiLbaJNqW15FfV3Ufca7ffj2ML6GLX4KPoqHc65dxF/oELeuh1f
0hjddrQ5zN+futspjznnUj8tddc1Ep9+RBuFusk5fiXjzYj+hrYV5QDqb+D4
I7R9H/0w9Der4AX3MtbN2nbaBto3zvnUL9KL76yPpK90DfUj6T+hNqR+Ff0v
o/4Kjl9K/SV9X8gx9nLub+e330L7Gvm1Ktj4nYx/k7Y1bV6rJYY4bTt420ju
/2WOXYB8uLGXWjCox1t5J3w35Bg82Qp+5ft6t/iTWCTHHqiFE/KUc6JYtHMz
5elWMDltBW0G7Qj5Ls6l62iTI09CeUhskzaTtoN/nSP2aB/kicVomvER9RVP
YMw3auHsPI/8PcfXRD6KNn87N7TD5XiPNnch/9CvlzN0CfL0HHuR+s+on8Fv
kd/rI/EF5KsZ/2TG/LiWmPkLreBE4kWn1BL/ubCd3157XLvc71f8SYz4EOTV
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
x5iVsStjXsa+jKkaH/Eb8VvRhtaWlhMkh8f9W5am/22t5Gxro2iruB790EpM
xdiKc5xz3SlFcom1h/Ql5RFrb5uzK0dHm9h8BNe7b1r53sz1dY5xrtmvSC7q
/3OW3V9kg27y6Y5shRNnPMGcWzkL7rdkLq45uWJy8h3N1TV/zetxzhKvMad2
v/71mc8mp2T//vPQvny3Su6y+YD6Dxt3k4tuzrnr0TtVcqdPKpI/ZIzQWKHc
A/PHzLGUvy1W7Hqqn6e/J0dXfvVZVXLJ3cPL/byMIRlLksPs/lpitGK17mFk
fqd7Mrg3g3uMaX/og+qLimmJb93QzV4+5lSZW6U/KhZmTpa5We5b4f4VcnDd
r8n9AN5qhv96XJm9MK4ucsz9AWahvN1MDr7xUnmr2sbGsN0fQA6yXGQ57HJ4
jYEbC3ePOPfbMnfOWNeLzfChJ+fY1c3ECMyvN4dJ/pHfqN/qZ93Yas4Zzh1i
gfKV5GzJ3TJ/Xd9gZeNDjDVfL2u7a5prm3zhb2rhUMmluqcV7pIYoFig/Gyv
RQ64XHDjFfITzfk39989OYw9uueP8405WuZqieHJP9Le/LGV+d/cVzEgsaDN
i/jrYjxiPZsVwWvdT8i9fuQkyU1yvwC5ZXIE5QpqU8v3O7kdW3ulMra7HAfz
TeSPu3eRnDS5afP3Yiu7xrvWT0f765rhSJo/7/4GUxVZ/20jbqgtLgdSPr22
pPnzYrruHyW/U77p+/Q5qxWOslzlq4rwpc3/cK8k47/P9edw5/KPi/Db5uol
lmFO3lvd+FT6VnKe3D9G/pNYqnvKuLfMSRybtJU9UeTT3de3Z41JuB+TNr22
vZxQ+VjuaefedsZY3f9qjV72ChPzEPtw/y9j3eZMuZ+INoGxX7nR2grO2fL3
5V44l2vDGV+R+6Rt52YU8qXdI0N+tGvqQ0W45K61xu/kcumj6u+Jvx5VJKYy
t3NVJ7G4gf14hfupiLXKIZNL5n4sYm9yAOUCuh+PXAD36TmiDGYkdmROmPF0
cyzNtayayYfU/hpUBg8wdmF+n7mExoQG9hIDNxYuh8r9Jc0pM7ds4f74xiPH
6dvM2s5er7EV45XGD8VHlykTfzJ2o82n7eeectrnxjtfa8XH19eftpdYjZw+
7VFtHvM7zmvFFlq7l3idcTv5UdrQ2tJiZO63pw2jLWNOsPEI/ZG/WrEPzY3X
BpCPKbde28D5zGdhzqu5r3Ia5TaKAfi+ud+l+QqPFuHP64/900rM19ivPoq+
ijaUe0fJYdylv57oT7veHlgGT3VvBueLvfrrneuNv7G/tXE08Tn9hb3LYALu
1WC+rb6sObrm6roeul5pIw/vZH11X82L+uufHEy5mGLk5ouu1st867xrPpDc
hFFYZ5F8A3MSzTe4tUj+v/xMc5tdv80PMF7tu2sMzlic/O1fa8Fn5KebY22u
tXuUub+fOaLyDc0xkm/qHkDOrc6x01axybTN3DNQfqO2zigstEj+kPxyc5lc
b113zZlw7fAezE86rq+bU2H+gDEIYxFyxCau4g+vUmb+MZ/U/QDF/sTX5Cv/
H/X74ac=
          "]], Polygon3DBox[CompressedData["
1:eJwl1X1MllUcxvFbEhEkl4g1M2VO8GVmTUASFQUFRQRFkHxJUFy62RbUzF5l
ZrbVellYTmeWpqW9b7UyrWFppjlzrX+spshihqCZKRYZZutz9vxx7TnX91y/
8zvPuc9zP0OX1VfUxUVRtITiqSAxim7tEUXbekXRwIQo6uan9ImiVpMd2Czh
Tqw7KYo+6hlFt/WOokFUK3MZ24Il89flp2MXsHi+TO0f1h+mth/+s9xIvAGf
w+fgCcbr9Ky+gdR10VtyqXIptFQuRe6ktR+Qy5YrkJmPT+NXUyG2XraLsvUr
l73TuvPU/YYNwQqx0Vg5tljtd+qOU7JeP2B76IpxpnwWfrfMP8a71JXQ7da4
lz+h90q58zIdtERuQzgPe1jKd8oWYsnW26XmKf4q/ou6Lylb7Sl+lL3MlFsp
d4dcqVwedh8/Dt/KTw57lm9Sl44XyS3E2iiDz8TT9F1uvWtYkboKrEbucewJ
quTL8CXWPk5pnuUr9luNNZtPMN6ox1rrVRmLRCes9WPoL5NPZ43bab65BpkP
ZEe4LynCe62xSGYqXZQ5j5Xp8bxcK23B+veOPdPwbEer/TM8I7kEtVf4GWr7
8u9Rm3W/l79Ar6sdgvWXX8D/RW9ixZSO1fL3qD0c7oXxv3oM48tpk7oWyrOX
feZ66LNPXT22Su12LA77PDwv4wyfY9WVUrVMDdXJvWwuQa7JfI5xT58jZa4Z
f2bcx+dmfS/5blX4HnVnaYa+zeYqsA/DOdFV3+00thBrtOcN1NPzy1BbSr3M
d1mzAV8g0y27m59FY+xlOX/eXkqsPRv7ifqGe4vviI/d8XDXa/iDeLLcIX2H
hrvGL6Nc48OUau4ovz/8Bo0PYCOoWN/xWG/jRtpvT5v5A9RH7mtsDFXyd8nu
jI/d3XCHr/sO3ybG1g49xlIVnyP3WriflCb3t9xePJJrCncy9A096SuZVbTe
9G7f4zIW5zyKZc5hA/nn8MFqj2G/yxZYfyIdDGdHWeZa5Fbo85jzzZSbaI0b
+US5I55XKbYVexg7Yr1KNZewHTRX5gt8uFwrXyqXzp+UK5L7FfsknIHcKWw6
1sZ/Gt452BqsFDvHzw7vTyyX9tvbo5Rp7rT9Nco943wXy1zGp8nU0Bn9+mHD
zeXpm58Ue+/V4+PwarWT5A6pWUvbnMuLWB1N7RV7/4X3YD1/jAboNxebaG4F
fzO18PNoktwtfLsekf3MCedn2MHn6fEN/yRtx943f4Ze5XPjY++K8M7opDf4
qTQYq+Yv0jZ+Ag3AFvGbwu/Nd0r1PeIVZ4c7EM7aOVeE+4E9iA1Piv0upoSz
Db9X7G3sP+yo2vFYLfZOUuy/qZ3Pp5Jwd8N61lpNz1p+pzWelvtY7U61j4Rn
IjOBDsisoc1y78o9JPeS3MbwvsYH6ZElN8p4Zvh/wZtlUvFmrDKcqdoB/E34
ZPMv0Dpr3J8Ue2eFd9ccn+W0zFr/AwHq5M4=
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVVEUgPFlWdoty1HgoCJwEMQVnFhxFcyGtwbmoBdoiA8SUiSKmjmz
Jk00nUSEYNEgKcioBoHc/oEyy7dJvjBCCAl8DPwdhLv3962119pnn33uycaO
y+15ETFonMqPSLx9b0Sa1BVGFIuv4AlswDJsxSq8kIqoUHuRZ3k1v8Ev8Sxv
48/UPsABfIivsB/f4Au8pvaq2mF+kzfyL/ztgYg/zlDvTKPiSflVcc++iO/i
v3yhQL31MfEqrsktyjXxH3Lv+ai+n7yb3+bjvNceE/gEJ7EPp3Bdf7Pe6WR/
/C9e0tfCZ+R+65/FEbklPsf79f7CD/sjNtW3qp0XL1vfEM95z2/icvFXnuNp
nuPv+HDh7t0PYR++xG58jvexTu1TfouX8Mf8Oj/Ku3iW38FKbMY01uNxrHWH
Nc5Q5kxHxP/0pPb4bs58ODkHnjeK+D1r1fwQv8sP4mt9pd4rY4+cvlTyLGtn
xbaOR+6hU+xx0YFV+qUig9riHPrFadMZIz/5/qZjFsvt8dme2mLF9EluW04q
PvKtvN3/4w69zVYd
        "]]}, {
       Line3DBox[{2131, 2373, 1432, 2844, 2845, 2846, 2485, 2902, 2986, 2747, 
        2272, 2715, 2562, 2563, 2486, 2987, 2273, 2806, 2912, 2915, 2274, 
        2132, 2916, 2275, 2133, 2878, 2917, 2276, 2658, 3021, 2376, 2487, 
        2277, 2659, 2378, 2489, 2571, 2748, 2869, 3005, 2488, 2719, 2721, 
        2720, 2490, 2716, 2988, 2278, 2847, 2717, 2718, 2492, 1849, 2749, 
        2279, 2491, 2381, 2494, 2280, 2493, 2888, 2918, 2495, 2281, 2810, 
        2913, 2919, 2282, 2134, 2966, 2384, 2283, 2385}], 
       Line3DBox[CompressedData["
1:eJwVzktKglEYBuCvSXTTcge6h2gJiRj9YFBml4F0VftbTTh3DY3LzDbhBmpQ
loWk5KDHwcP3vh/ncE6hfltJFyIi4WAp4nclYms1YsBEnrK9HPHKeDHiXB/K
Fc7kovnGvfPv7lepy1ds8qEfci0PzRptec+dLp/6EXd2Jf2JLz2vFyjrPda8
dUGGB/t9u0v5jx25Y2Zpsk7VrmG22JWfeXRvQ78hR80uNWckcn9+Ru7O36Dk
fIMX+5E/HdPUv80TWvKPeco/TuAunw==
        "]], Line3DBox[CompressedData["
1:eJwVzr1KgmEchvG/ZlZ2FBmRU2trJ+AShYiVZUo65KudSGu1VkciFK2BGuTo
Eq59g9nP4eK675vned53rZbstlMRUUR1OWKai9hejXjFn5zno5WIda7gGff2
WzzY77jKb5gsRQz0/nxz7hxj+d27x2jrH3yCK3nPnU+5hmt9X3/El950r4WS
/oREnuHSN+p6yvk0yvIWL+AGGZzZOs5WeIPLthEW0dWb9gvO6gdyQR7iBZvo
2Q/tO/K3fzlFYvvhOjryLzfwD9wYLHw=
        "]], 
       Line3DBox[{2151, 2409, 2410, 2972, 2150, 2726, 2400, 2727, 2401, 3008, 
        2578, 2579, 2544, 2317, 2538, 2318, 3012, 2152, 2790, 1496, 2789, 
        2319, 2153, 3033, 2791, 2792, 2154, 2973, 2414, 2415, 2155, 2971, 
        2402, 2504, 2403, 2156, 2405, 2506, 2406, 2989, 2157, 2416, 2816, 
        2417, 2990, 2158, 2418, 2598, 2419, 3038, 2861, 2159, 2623, 2320, 
        2601, 2321, 2160, 2626, 2954, 2322, 2625, 2323, 2161, 2955, 2324, 
        2325, 2162, 2956, 2326, 2327, 2163}], Line3DBox[CompressedData["
1:eJwV0Lkyg3EYhfFXYbJow9gjxBZxDcwYYqJTKrVBClmJ5QaSS6DVqehTqF2B
SmVpcAN+X/HMOed5v3/zFY7rh2cjEXGE23REORPRwAb+8DwWccOX9M1sxLoc
cFX9ml+zy/oLt40rbjV5z63Inn3A91Diutwl92gv60Vc2Pf2t/uSvS8XZZbr
Jm/c27KDAv8lF2TGvaW/yo5vKnoTebddOS/7bnt6233O/tDfRyPS/Kfe4nMy
Zc+6n+JJ38Kv3nR/cK/abyjihJ/ghhhPkptJ/ps+Lc9lw7s7/seeQg2T2HH7
B/ajKKw=
        "]], 
       Line3DBox[{2190, 842, 2427, 637, 3000, 2189, 635, 2426, 634, 2188, 
        2350, 2608, 3015, 2882, 2187, 1228, 2682, 2430, 2186, 2881, 2942, 
        2827, 1226, 2185, 840, 2633, 839, 2184, 2977, 631, 2424, 630, 2183, 
        629, 2423, 628, 2999, 2182, 627, 2422, 626, 2181, 727, 2507, 3022, 
        919, 2180, 1300, 2607, 3014, 2903, 2179, 837, 2941, 2606, 2349, 2178, 
        835}], Line3DBox[{106, 1383, 107, 1384, 108, 796, 1385, 109, 1919}], 
       Line3DBox[CompressedData["
1:eJwV0Esug3EUhvEj0brOMTRgYiDWwLB1KUUkBiyABWh9bS1A69piAy4Da3Bv
XWYGFkEMSAz9OnjynPe85598+YbXN3MbHRGxgrPuiKXeiGWUeyL+UhGndik5
jTe7Ib7uixjkE12Ln5Fpv7NvYtHc0D1yE08oeZvnIhZQ19/zA969WUXipiD3
m7f42M0N3+EWr/orHtVf8pF+rCtiwNyJF/0Fj+jP+VC/zR9IMIG1dMSB/Y7b
irss9uWKXDZnsCePy3PuW/I851Czn5JLmJZnMYOq/WT7+1H07hc/2LX/9g8L
5i93n8jiH9f1M48=
        "]], 
       Line3DBox[{2206, 1461, 2205, 2799, 2929, 2299, 2800, 2352, 2611, 2037, 
        2300, 2610, 2885, 2930, 2511, 2613, 2301, 2612, 2736, 2737, 3028, 
        2908, 2512, 2733, 2302, 2855, 2734, 3027, 2735, 2514, 2586, 2764, 
        2303, 2513, 1998, 2739, 2738, 2516, 2304, 2515, 2436, 2517, 1463, 
        2688, 2438, 2518, 2993, 2305, 2207, 2778, 2931, 2306, 2865, 2779, 
        2932, 2307, 2801, 2886, 2933, 2539, 2543, 2308, 2829, 2689, 2740, 
        2690, 2520, 2741, 2309, 2519, 1651, 2866, 2310, 2208}], 
       Line3DBox[{120, 853, 1918, 119, 545, 1742, 118, 1091, 398, 1637, 117, 
        1146, 116, 1389, 1144, 115, 1388, 114, 1387, 943, 113, 1386, 112, 
        1093, 2014, 111, 939, 1949, 110, 854}], 
       Line3DBox[{2210, 2872, 2947, 2209, 1467, 2211, 2440, 2521, 2994, 2311, 
        2856, 1285, 2934, 2522, 804, 2614, 1046, 2935, 2523, 744, 1235, 947, 
        1050, 746, 2442, 2979, 952, 2524, 1103, 2765, 2437, 2525, 2873, 2978, 
        2212, 2439, 1470, 2213, 2936, 2312, 2214, 2832, 2937, 2313, 2833, 
        2895, 2938, 2540, 954, 955, 678, 2541, 1150, 2781, 3031, 2780, 2867, 
        2314, 2215}], 
       Line3DBox[{2217, 2874, 2948, 2216, 2446, 2526, 2875, 2981, 2218, 2441, 
        2527, 1474, 2691, 2692, 2894, 2939, 2528, 2693, 2834, 2694, 2447, 
        1327, 2830, 1657, 2831, 2696, 2697, 2448, 2835, 2863, 2443, 2864, 
        2836, 2838, 2837, 2449, 1965, 2839, 2444, 2616, 2782, 2783, 2615, 
        2445, 2876, 2980, 2219, 2877, 2949, 2220, 1477, 2221, 2450, 2451, 
        2315, 2857, 2858, 1669, 2859, 2587, 2588, 2529, 2742, 2743, 2452, 
        2617, 2786, 2787, 2785, 3032, 2784, 2316, 2222}], 
       Line3DBox[{2224, 438, 2982, 2223, 427, 1673, 440, 428, 1674, 442}], 
       Line3DBox[{2229, 272, 1898, 808, 451, 1755, 571, 437, 2092, 1250, 449, 
        271, 1108, 2015, 270, 2228, 2961, 269, 2227, 2960, 268, 2226, 267, 
        2959, 2225, 444, 1754, 569, 443, 1753, 568, 430, 1665, 430}], 
       Line3DBox[CompressedData["
1:eJwVzjlOAgEYhuHfBhgtbWztbXDftxMYEgtCwMQD6DFMVEjcxS16BQpkcNfS
xjN4BE3cKh+KN9//vd/MZPpX1wtrXRGxjJdcxGIScYEF/KHdE/HMz7snuyPm
5D634n7iU3nODXA7mYiW/shn5Rn/jlP02Wvcg+1Xr7oTz5+4Z3HPV7hXz83o
dUwj4X7knb2RjdjWp/Tjzv8gp3/LW/umewsT+hHGsed7N7ZPfkwvy1G5y7f5
q863/EfqvnRv2N9sS2hxH3rGXpIj9mvuS6b2YXmIITT5Xv836D5AHkXv/AOm
lTB0
        "]], 
       Line3DBox[{2257, 874, 2472, 664, 3004, 2256, 873, 2620, 872, 2255, 
        2371, 2619, 3016, 2887, 2254, 2471, 2532, 2470, 2253, 689, 2951, 2531,
         1061, 2252, 662, 2469, 661, 2251, 2985, 659, 2468, 658, 2250, 657, 
        2467, 656, 3003, 2249, 654, 2466, 653, 2248, 1254, 1329, 2126, 1328, 
        2247, 2475, 2704, 3025, 977, 2246, 2897, 2950, 2652, 2474, 2245, 
        869}], Line3DBox[CompressedData["
1:eJwVz0suA3AQB+DpRqlNVwRBWxKnYOUERSJdSDgA16iVKOpxAhIUtRIra6GK
erOqE7Dy/Lr4OjO/mfafZucW8vOJiJjmrd1HKiLBQUdEd1vEq2zNXOZdVu2M
yPMi35RtMcu5bIpnea/ax4b82HeeZJPmRZZkVdmjbMJc5Mj8YO7yXkU/zr05
6/aKHPuyP1b1I8mIO/tBfY0Me3a/pPQ/asO+X3/JALuygre26WFFdutmWb2g
RNPNmd2w/oQhbtysq6feHGvNXLfI62rD/Qyj+k8+qNul/Zcdv/fNF4f8A5b7
N+s=
        "]], Line3DBox[{2635, 1169, 2421, 625, 2976, 2177, 834, 2628, 1907}], 
       Line3DBox[{2656, 1183, 2463, 651, 2983, 2244, 868, 2650, 1923}]}, {
       Line3DBox[CompressedData["
1:eJwVzj8vg2EUhvEjUiSdSL+A1WRr12JsgjJaSkSXVtKklejgz2rG3obFSkcS
g8FSHQSLpBaNTZgqwe8drlz3uZ+TJ2d6fbtYHYmIVWRTEYWJiElkMIWNdERO
vygvoWxe5iLexyM+MEBF/8t/eLa/wi98zPmxiFG+stPXDcxvvKa7081zHQvY
RRP3+i87Jfmb93gfQ3mTf7hmp+uvLWST27iR3Cs/yj17DW7xDje9teUn+QBH
OMSM/Qv9g/cT8ytOcZncjJ6+Zf5EG7O6Phf41tuZfCOf85y/ruUO/gHJBTPw

        "]], Line3DBox[CompressedData["
1:eJwVzr1KwlEYgPHXJAsqEN0DF5u6gILGIAoT3HMIMSyxsRpbasndAm1ISL2B
biEwhT4InBr0Qvr9h4fnOee8h3MKp5eVVioiSthZjnhCbS1il3to6AN+QUuX
OVYjZnqPU1hCGnNnBV5wZyXiPRPxyFOzh3pfH3HN+a29E11F134PDV3nc/7g
MX7MfVo/6wku9Bk3+crZl/7VI/7GtS76ww1v8dBeHw/WM7Rxl/yP/5L/Ydtc
CcdYt+5jA5vuvfLAO286l9zlPGfN3ut/vawodg==
        "]], 
       Line3DBox[{1339, 1493, 1494, 2917, 1340, 1580, 2967, 1581, 1730, 1582, 
        2968, 1583, 1360, 1602, 2973, 1603, 1905, 826, 2957, 1885, 922, 923, 
        626, 1621, 1516, 1381, 2946, 1631, 1740, 1632, 2014, 1094, 1744, 1033,
         3027, 1747, 743, 949, 947, 1049, 750, 1310, 2863, 1245, 2091, 1678, 
        1754, 1679, 1921, 1543, 2962, 1774, 642, 1690, 653, 691, 655, 693, 
        2570, 667, 1713, 1556, 1428}], Line3DBox[CompressedData["
1:eJwV0DFLQmEUBuATaEnOCrWoU9EQNjq4NQaBQ2voFEEFLUZrS4sVhEM5SuVg
BS1ltkmjGeL/8B9kj8PDyznvvd93uYXaSeV4ISJ2KScjVlIRq1wuRQzTEbnF
iC/yNM0FOaDInXlLflOiZd6WV95tcMo9I/uW3NElZYINlnnXpeWe7kzW2adq
HlLj0HcdyTEj3Q+/PNHh3P5Rtp31ICe88MqF7ll2OeDPWdeem8kbXYpb81Rm
9Rk2ydG3z8/v0PXkB5+ssc6bfWb+X5z1D15jKgw=
        "]], 
       Line3DBox[{8, 882, 2659, 23, 1271, 2848, 38, 892, 2664, 53, 2156, 352, 
        68, 2169, 363, 83, 2183, 378, 1140, 98, 2197, 395, 113, 551, 2515, 
        128, 1102, 2765, 143, 805, 2615, 158, 2226, 173, 2236, 460, 188, 2250,
         481, 203, 2264, 598, 218}], 
       Line3DBox[{885, 316, 2494, 520, 319, 2500, 528, 333, 2600, 774, 2601, 
        229, 780, 2603, 241, 932, 2682, 383, 385, 2432, 261, 1146, 1145, 2932,
         1396, 1239, 2937, 1403, 433, 2451, 434, 271, 570, 2530, 450, 576, 
        2532, 468, 994, 2712, 501, 995}], Line3DBox[CompressedData["
1:eJwVzj0vg2EchfF/h5akXj4DEtqEWBiUwVcgEbEYKgwSaulQ8WwtiY2ZL2Cy
MGsQJF1Vo+ZKEDYWEr8OV65zzv3cd56hYmlxOxURS5hPR4xmIq4who1sRJ1z
aPdE5HnTdsNTWLBd69NySd7BszcObctyW17hW70jv2JVv9M/5Tf3vjjTG1Gx
P9gT/rat8Q8POzuR133bL4/g197Hf1x2591ZXt/r/isnvGv/4CpmbDWe5QJa
8rk3H7Evj9sOuKlP4EV+4jn7kXyKY2zZ7r07IJ9hsItvqvaG/ULv4BKT9rr9
HwUyMRE=
        "]], 
       Line3DBox[{1345, 1326, 2076, 2075, 2919, 1346, 1440, 2923, 1354, 1445, 
        2927, 1363, 1500, 2955, 1880, 1501, 1883, 831, 2958, 1615, 1512, 1617,
         634, 1624, 636, 1739, 2992, 735, 1636, 937, 1742, 740, 1649, 944, 
        2740, 1042, 749, 956, 678, 1773, 680, 1054, 2743, 1053, 1897, 966, 
        1755, 1057, 1899, 865, 2964, 1900, 1546, 1902, 872, 1707, 663, 1762, 
        2995, 1709, 1719, 1710, 1431}], 
       Line3DBox[{1347, 1578, 2966, 1579, 1348, 1441, 2924, 1355, 1446, 2928, 
        1364, 1502, 2956, 1882, 1503, 1607, 1798, 2998, 1799, 1616, 1513, 
        1618, 1806, 3000, 1807, 1625, 1809, 1808, 1626, 1528, 1638, 2057, 
        2056, 1918, 1650, 1748, 1651, 2118, 2119, 2120, 2039, 3031, 2038, 
        2121, 2122, 2123, 2041, 3032, 2040, 1410, 1539, 1898, 1540, 1683, 
        1816, 3002, 1817, 1694, 1819, 1818, 1695, 1827, 3004, 1828, 1708, 
        1830, 1829, 1711, 1559, 1979, 1560, 1720}], 
       Line3DBox[{1427, 1491, 1925, 1552, 1421, 1487, 1791, 1696, 1821, 2983, 
        1820, 1417, 1483, 1684, 1811, 1810, 1411, 1478, 2982, 1672, 1404, 
        1472, 2948, 1397, 1466, 2947, 1390, 1461, 1383, 1457, 1627, 1520, 
        1377, 1454, 1785, 1619, 1801, 2976, 1800, 1371, 1450, 1783, 1608, 
        1794, 2974, 1793, 1365, 1447, 1598, 2972, 1597, 1356, 1442, 3035, 
        2078, 2077, 1349, 1436, 3034, 2071, 2070, 1333, 1432, 2096, 1561, 
        1721}], Line3DBox[CompressedData["
1:eJwV0L1LglEYhvEn0BKqtd2oySZBhb5GoaGglpwaEloEw01oaIxA0KnFwYyG
QoLKwcmWIGiJhv4Uh6bod4aL+7mv5z2Hw5s/PT9qzkXEAW6yET+YzUesoGf+
RixEPOqrKRcj8rLDf+GP7+OVe8EV94me74K/NL/jXr/Q2+Yp7vSm3jJPcOvs
ei5iDQ19jLr9Bl/Amf6MqvmYX5ZDdyzJE36EX34fWXcM7DKyxj/gg3/ituRh
eg+6zm7qO3Ibe9wAb+k7vWhXkWXs8v30druSPk3/A9fmf8PKKCs=
        "]], 
       Line3DBox[{1125, 769, 1764, 1715, 2952, 1425, 1489, 1778, 662, 1113, 
        1112, 1922, 3019, 863, 1416, 1482, 2961, 1537, 1408, 1476, 2949, 1401,
         1470, 1648, 1394, 2993, 1464, 1647, 1388, 1460, 1916, 1083, 2756, 
        1084, 608, 930, 840, 1375, 1452, 1737, 2991, 1509, 1369, 1449, 1735, 
        2990, 1605, 1362, 1213, 2970, 1596, 717, 1074, 716, 2667, 895, 714, 
        1343, 2988, 1002, 1726, 705, 883}], Line3DBox[CompressedData["
1:eJwVz71LwlEUxvHjkAZBSwRBFPhHZFu0NRUoSZMg2tJSDb1MRUsNNTQ7NDg3
FNFoENKQQnOTY0QoZGKDYNDnN3x5Xs4993Kzlb3Cbioi8lhIR8xORsxhnp+h
tYmI26mIHF3U3dBHeY2umC/rvjIRXfSwoX/HizMFeRMtFLGlb9Mlex3zVbuf
+Nb1UTI/oidmXf6Av6NVnOkGtKz7wQA78gjb/BC/2E/23JnzRoN/sHdMD3V1
8yZ/mtwnX+KVP8e082m5gzf5Chd263IfY7t/uNY36L3uia7jOfk3PvAP9oQy
CQ==
        "]], Line3DBox[CompressedData["
1:eJwVzT0vQ2EYBuBHE1rxA4wimA1dMGjF99JKIwaTdMfQRUQkJiEdMPsLJhbT
SajFKDGQg5KQGGppbCS9Oly53+d+3vec4ep2ZasnIlYZ7Ys4zkaMyIQJ5xsm
eWKKW8bs6nKaZCCiIJ8p0iBvP5SLSO1OzKfMmgss2L3q13QtfljvjdjTley+
uTBvsK9ryXvdH/+8uP+oT2XW937tq91/O8+waZ6Xbd2cvDbX3K/JhB3nXXnH
ARnffHO3yTsfDNKvv5SLLLHMOIfen9u1efD+jCPdlfmTsjsrfNEBSWkxlA==

        "]], Line3DBox[CompressedData["
1:eJwVzi1LQ3EYxuFnYTo8STCJYUaL4DbEJhoEJxYZYlhaWtoQYU0NWlQw+LZP
YDEaBF1xYWowGcQ4mMlm0OCK1wk/7pfnPvtvutbcaGQiYgsPIxFzo8hFTPId
FOSCXKQ3ScQHLaGom3I/4X/oL1ayETPyPP9M3+x76d72ia67L9EXLNg8ui/S
Mzlvc043bZbpBfp812bV5kpuo6rboV+0ov/DEDV53/abVuVbWseY301wx2+7
N2kHLezZXeu6/G76vXyU/nf+EBPeycr3Npf0VXeMA30i99P3+SFO9e92A35c
P0CZn/X2Gv3EPxREMVA=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
OM7qj/vLrlH3l/0/Up7+Qw==
     "]], 
   {RGBColor[1, 0, 0], PointSize[0.05], 
    Point3DBox[
     NCache[{0.42875033932890305`, Rational[1, 4] Pi, 10.413022197970424`}, {
      0.42875033932890305`, 0.7853981633974483, 10.413022197970424`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.05], 
    Point3DBox[
     NCache[{1.9995466661237997`, Rational[1, 4] Pi, -18.01302219797042}, {
      1.9995466661237997`, 0.7853981633974483, -18.01302219797042}]]}},
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{357.412832088235, 196.67673350451355`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, 2 Pi}, {-18.00159804391774, 10.401597788214108`}}, {{
     0, 3.141592653589793}, {0, 6.283185307179586}, {-18.00159804391774, 
     10.401597788214108`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.48769173083864814`, -3.274321092184629, 0.7006983380502945},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.718469868713341*^9, 3.718469928693194*^9, {3.7184702352263203`*^9, 
   3.71847027452195*^9}, 3.718470563473029*^9, 
   3.719166878839588*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0nQd8FFeWr/XAYezJ8U3a2dl9O5t3mbHHOY9n7Jmd0ERjHMAJSRjbOIAx
GDDGYMCAMTnnnBEgECIHAQIRJXKQBMooJxSQ7vvODdXVTUvAeJbf76ib6u7q
6nv+3znn3qq6988v94zt+ubLPbu9+vLPn3735bdju7363s+f6vEum1r+n6io
/9M1Kioq6edR8lzx1P7R/6Llj/1PU8//Vf60lA895Nv6H/q53qzsv6j7b+L1
f5M/LXx73S8Pt8iG5yN89AHzpgNhL8kveaHpb0qJ8NKz4T/nYIQ3TTAvveO9
t1PTb3o3wksd9N9b/Nvk+aSmP/GM1x6Tm35TqXnpJ957OzT9ph9HPoT2ET6R
IH+/LZv+pdnPtvO+d748+4E8+6a3rfnPXpLH/yvPvh3hCL7pNXTzeznofW/L
CHv51pfY9otmv3eD9723N3X0f/tjCbp5rvf1d97gLiId0r1Nf9VSefi+vPKN
G9xZJEjtzsZ7R9ukq8O2vdn0zgZ4O4vk8UhHe6PN0cyXxnpfeqPuvvvmvqCt
9wVfvcEvWCt//YQ87O0i0tsjbdvb9PH8s7ezFje4sxvVyXPy9zaJ+jFNf/0P
5OFbTbX3jX7VzyNs09H+Tvn6rtf5+hYqOjr6lhv8+kjbRsrfr8lXvXadr+Il
vktv5zGisFfe+M5u83Zmd2jeExW1Wh6/Ift41fetdj/N7cPt5+b20dK/D09H
/m0rvZ29LM90lP3npnfRMsK2Ffrvt1TrVtHqmVbmSF7hMRZ7C+uFfYj1wwZg
H2EfY5/YR/l//1bRL9/cj9Gy0ALRgTLqh6ot+3kW64y9hr1uj+U9HnvbY/jI
fu+n2HBsJPY59gU2FhuPTcQmYROw0dhnZj8v3Nzx3RZhm07RUX+nAuyxnT3a
F7FXsW62td6zRy1HOxAbjA1r5kgnY1Ox6dhMbDY2x+5jhn2d9xrob/zwb4+w
bbZpco6ePCjH38m2dvjx97bf745/KDYi7Pgn2FYOP/a52AJsIbbI7AfhLmkl
TC61r/G7TBS58d/zlQjbZsjflvr3fFUr9wXMKfdN7B2r3j5Gofp7+D3sTI7q
Dn3cs2x7z7fHvBiT41zuHfvKVtEt1Cr9A5bbN/BmU13e+A+4I8K2qcEfcLtq
EyZ/55B3efVWfShf9YQksh4TJqJppmGdE+xnblEr7A+P43Ftq+iWah0v3qL/
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
sNaYGZ9TgSfzzP8fTEfQZ9y1v7vuMVOHiSjD5xGWd1xP02HbfuDVK/bivtb6
lG+HJkTtCuhwUZdXlVByuAK61p7xaELULUTTLUTQUi4FJS19QHqCH4VIuj6C
pGWP3o32OXZaBbnZ3kq61EraTYMj8xrJVDj5SDrPSfpkqKQvuvuvraQv+O7B
9kv6ZLikk8zduEeR9eGd5o7cg9uDkk7eErw3O6Kk5e4pZL11nbkR091lt3H1
9SWt77oLuzlzvk/W8nm5SVNGOyZPMzfyu3u59c38yPozN30DxcdAN2MHxcf7
FB/vfWr28SZxuttHRtavIOvO9A+f72Ve64Cs273RqNoi69bIOvDyVStrrKO5
ylmfXf5jCbK+jKxzVeDRS2b7PadV4Ndp+rlMRb/7weiQOZldnP5/N6dpN9VW
pMrDRW27NJd+jwg8NlTgfiKM1su0wstVtS6qtcJFr3VeF9YNNYvIG2tkc6Pt
Ioo1VsvmKukJNroAfm1pzR7RelS0mVXAXuCqK5Fm1C4TPhU3o3b//DFZvklF
mlP76f1myomTduaB43uDsw8ctfeeh6t9f5ja5VZjmY0gCcXvsvei/1Vqt4pf
4e4fXBh6n/o8W27L52fOCo6GyEQlem4aN1nJxGBVIkFcZg37CMX3c4q389T0
IJC/QS8yFsV3RfEvo/gXUfxzvWyP8ruqbfdG1RrBB15rsIK/qgWvFdeOXmRA
hviKZYhPBX4jgr8YFPzdqfr59rv0lKohQfyvFPz3bAUeVqKYYP4Vb+pGd5GF
LrmCem/pad2OnhRXXPb6kE7uemSvLjgaIsJvITcFaLG3EK1LMBelG7VHGbnf
4ck9vFZxgR2p2xzZ29wp76TupkfKNnOblfnkLrNH6gnrZI4z5J6P3N3cgzci
d5k26ZybSwfJnz4QlPtxO6dOapjcZbaVg8g9JZLcfTOv7G5K7utCJ+LQcnd3
29upGOJ8kl+5JBjglywMTtAh8/HIFEzy+Vn2Lnxdt0wPzrk11k7H5CbJG+rm
VJO6Bcl/iOQ/sBN3vEuQf4seZnckH4PkX0PyL/VV6oXeSnXqqVQHez1bazQf
iG20mm/QmteC08PaVXZYWzRfgOZzVOCRTBV44Dy1yynRvHfzksxV64T7wy+v
/e82p/3bvdsq3Rlxd8fLm76V//oEh8FDRhGLKgpUaWWxqqg2fWd9uqZWRgcb
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
xpjFgMHs+y4ECEkIBEJCiEVIQvuO9n1HgFiMMRgwtsEGpDu/3znnvvcBkiup
mqHqfEKfvve+d889v3PPPfcsEZ3CXrHif89hNX1qurS48Nr1sWU3Zaf2NORs
DG7/Kr5qAr7+TTzWFOiYd6FvZkBGZ0FW3weWP8DTL+ZO0e8eM9Ts9Pj1i2p0
5gD41dWQO9UsL19cIdXtHC/vJWQHyNXfMLkJRxTF23OUEg2T2/EzAb/Hg+Jy
bC3+G7cl3/ba+BkN2kjCxK0HrQOtBa0BrcL7K0DLMJlL8sxRjt8X2PVz8fsc
fMV7uP10PNK7eNQpGMZkDG8Shv062DAe7BgL1rwEFo0Gu54F257CTD6pzv3/
j9bwD0wdREWdVZf0zD51VS+zm/zSPhbplSLtBYLTIlCcDhTvP0MU33SHzt4A
ihUXOee+dPkfXXdF56+50o+/cOUfA8kXvnBVF68FsGsCgpuvfOVaPr0BJN8E
km+59s/6XYehmEeX3UxZBF4xCv7aGUEdZhn7cxmun0cvu+BIk++V4GcxqOAi
reR+eqF8+ak1TV9JO4/INgZEc2uNsXfI397e6Mb3gSoN+0DdheyIGu53VdXN
VmTn3IHsw76k0wGtJuMryfgqMslpWrUiaa+dlv4PKRIjVZpYnSlBi+auhm22
MlZroS2x0tMs8zkPSJ8DpM9arZ08pgHp7wDpbwHpk4D014H08dbqideMnoVd
G5A+ahrk8B1tg/b4m+aEmXfTjVgBGV0lB/fuRXzXq3iGCZDZN6CFJtMVCxl+
F0vSzFR1APE6Qn4pnUR0FoFW04GUEbFc3wH3zWrwCuR5PY1gQn0bWBhH81eM
5ASJhY8HewlxQhk0jLi2+EIeFCfkKsXr4TGUhxwab8OftuUL8bcCvsZiEmO1
2Z16VfC6CJO8ALujD/D++/j7bFwzC/QeaAZoGu7zDm79Nr59Ep7udTz9eIxs
LI+6DwyO4tB3PCz439d4kf9KXu9zUW9wu9ynERKMlsBEjFivp70/4WfuMcW8
BzvAlNMQItBtkD1DuPapKQyoZpztc5kf3gBcvwJcv3SF56+7YoHsNVd2QbOx
qj/5ytVd+so1XFZjrQlQbf70lmu52udaAde2z/yOtYOZ/YAlnr71Mw05aJFi
bi2fU9k0RzRx4PJaInmN+SxFn3fBKy/sY92O4/1DfIrHQF1HOhrMKv5t2JYq
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Spin Wave Function", "Section",
 CellChangeTimes->{{3.718732142328045*^9, 3.7187321625067163`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Local coordinate for spins in ground state\
\>", "Subsubsection",
 CellChangeTimes->{{3.718732171683177*^9, 3.718732214469037*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "4", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718732222979663*^9, 3.718732245544861*^9}, {
  3.718732296369285*^9, 3.7187323861424046`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "4", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718732373907943*^9, 3.7187324479387903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7192560710846615`*^9, 3.7192560865487347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.719256088277079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "4"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"Y", "[", "i", "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"Z", "[", "i", "]"}], ",", 
        RowBox[{"X", "[", "i", "]"}]}], "]"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7187324507051773`*^9, 3.718732493329486*^9}, {
  3.7187325719667845`*^9, 3.7187326089172707`*^9}, {3.7187326569607725`*^9, 
  3.718732660713532*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"S", "[", "i", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"S0", "[", "i", "]"}], 
      RowBox[{"Z", "[", "i", "]"}]}], "+", 
     RowBox[{
      RowBox[{"SX", "[", "i", "]"}], " ", 
      RowBox[{"X", "[", "i", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"SY", "[", "i", "]"}], " ", 
      RowBox[{"Y", "[", "i", "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718732706571398*^9, 3.718732776011696*^9}, {
  3.719255966968883*^9, 3.7192560361604757`*^9}, {3.719257034445321*^9, 
  3.7192570523931026`*^9}, {3.7192578517250032`*^9, 3.7192578575943522`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7201952622887144`*^9, 3.720195284991826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BJ", "=", 
   RowBox[{"J", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0"},
        {"0", "1", "0"},
        {"0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7201952913076906`*^9, 3.720195301530614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BX", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"Kxy", "0", "0"},
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "\[CapitalGamma]xy", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BY", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "Kxy", "0"},
        {"\[CapitalGamma]xy", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BZ", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "\[CapitalGamma]z", "0"},
        {"\[CapitalGamma]z", "0", "0"},
        {"0", "0", "Kz"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7187328675104713`*^9, 3.7187329200572395`*^9}, {
  3.7187330077931395`*^9, 3.7187330086056814`*^9}, {3.718735101396516*^9, 
  3.718735102193427*^9}, {3.720195316201436*^9, 3.720195327128065*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", " ", "n"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.71873310084011*^9, 3.7187331485621133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "2", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "I"}], " ", "qa"}], "-", 
        RowBox[{"I", " ", "qb"}]}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BZ", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], ".", "BZ", ".", 
      RowBox[{"S", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "3", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "3", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7187336079394827`*^9, 3.718733658272017*^9}, {
   3.718734416826456*^9, 3.7187344302101526`*^9}, 3.718734581075245*^9, {
   3.718734653416236*^9, 3.7187346775914855`*^9}, {3.7187347489666414`*^9, 
   3.7187348157451925`*^9}, {3.718734861917691*^9, 3.7187348635583997`*^9}, {
   3.7187350812113624`*^9, 3.718735174818839*^9}, {3.7187352323131423`*^9, 
   3.718735241636572*^9}, 3.719257872671686*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"hamiltonian", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SX", "[", "1", "]"}], ",", 
         RowBox[{"SY", "[", "1", "]"}], ",", 
         RowBox[{"SX", "[", "2", "]"}], ",", 
         RowBox[{"SY", "[", "2", "]"}], ",", 
         RowBox[{"SX", "[", "3", "]"}], ",", 
         RowBox[{"SY", "[", "3", "]"}], ",", 
         RowBox[{"SX", "[", "4", "]"}], ",", 
         RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SX", "[", "1", "]"}], ",", 
         RowBox[{"SY", "[", "1", "]"}], ",", 
         RowBox[{"SX", "[", "2", "]"}], ",", 
         RowBox[{"SY", "[", "2", "]"}], ",", 
         RowBox[{"SX", "[", "3", "]"}], ",", 
         RowBox[{"SY", "[", "3", "]"}], ",", 
         RowBox[{"SX", "[", "4", "]"}], ",", 
         RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7187352687029185`*^9, 3.718735461164908*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UPH", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
           RowBox[{"Kxy", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{"J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
        " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
      {"0", "0", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0", 
       "0", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
      {"0", "0", "0", "0", 
       RowBox[{
        RowBox[{"-", "J"}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]z"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
      {"0", "0", "0", "0", "0", "0", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
      {"0", "0", "0", "0", "0", "0", 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.7201954849346905`*^9, 3.720195530034555*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
         RowBox[{"Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"J", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", "0", ",", 
     "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "J"}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], ",", 
     "0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "J"}], "+", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[CapitalGamma]z"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"J", "+", "Kz"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"J", "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7201955381912456`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"hamiltonian", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"S0", "[", "1", "]"}], ",", 
         RowBox[{"S0", "[", "2", "]"}], ",", 
         RowBox[{"S0", "[", "3", "]"}], ",", 
         RowBox[{"S0", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719145618267482*^9, 3.719145688467393*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"S0", "[", "2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SX", "[", "2", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SY", "[", "2", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S0", "[", "2", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"Kxy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"S0", "[", "2", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "2", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"Kxy", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
            RowBox[{"SX", "[", "2", "]"}]}], "+", 
           RowBox[{"Kxy", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "2", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "2", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Kz"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"S0", "[", "4", "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
               RowBox[{"S0", "[", "4", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
               RowBox[{"SX", "[", "4", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
               RowBox[{"SX", "[", "4", "]"}]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"Kz", "-", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "Kz"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"S0", "[", "3", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"S0", "[", "1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SX", "[", "1", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SY", "[", "1", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S0", "[", "1", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"Kxy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"S0", "[", "1", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "1", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"Kxy", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
            RowBox[{"SX", "[", "1", "]"}]}], "+", 
           RowBox[{"Kxy", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "1", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"Kz", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"SY", "[", "3", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"S0", "[", "3", "]"}]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "3", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "3", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "3", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "Kz"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"S0", "[", "2", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"S0", "[", "4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SX", "[", "4", "]"}]}], "+", 
        RowBox[{"Kz", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"SY", "[", "2", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"S0", "[", "2", "]"}]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "2", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "2", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "2", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SY", "[", "4", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S0", "[", "4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"Kxy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"S0", "[", "4", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "4", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"Kxy", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
            RowBox[{"SX", "[", "4", "]"}]}], "+", 
           RowBox[{"Kxy", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "4", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "4", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"S0", "[", "3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SX", "[", "3", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Kz"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"S0", "[", "1", "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
               RowBox[{"S0", "[", "1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
               RowBox[{"SX", "[", "1", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
               RowBox[{"SX", "[", "1", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"Kz", "-", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"SY", "[", "3", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S0", "[", "3", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"Kxy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"S0", "[", "3", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SX", "[", "3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"Kxy", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
            RowBox[{"SX", "[", "3", "]"}]}], "+", 
           RowBox[{"Kxy", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "3", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"S0", "[", "3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.719145694850743*^9, 3.7191457964330935`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719145901977542*^9, 3.7191459794530745`*^9}, {
  3.7191461088974113`*^9, 3.7191461220617943`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[CapitalGamma]xy", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "  ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"\[CapitalGamma]xy", " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", ")"}]}], "+", 
    RowBox[{"Kxy", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Kxy", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}]}], ")"}], "+", 
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], ")"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Kz"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"S0", "[", "4", "]"}]}], "+", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "  ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7191465723831377`*^9, 3.7191465842244053`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "Kz"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], " ", "+", 
   RowBox[{"\[CapitalGamma]xy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"Kxy", "-", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7191465965626287`*^9, 3.7191466419501476`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Kz"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"\[CapitalGamma]xy", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"Kxy", "-", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], "/", 
  "2"}]], "Input",
 CellChangeTimes->{{3.7191537164180717`*^9, 3.719153745338648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"UPH", "+", 
     RowBox[{"ConjugateTranspose", "[", "UPH", "]"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "qa", ",", "qb", ",", "Kxy", ",", "Kz", ",", "\[CapitalGamma]xy", ",",
          "\[CapitalGamma]z", ",", "\[Theta]", ",", "\[Phi]", ",", "J"}], 
        "}"}], ",", "Reals"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7191540591894045`*^9, 3.7191541202392416`*^9}, {
  3.719154261149852*^9, 3.7191543173511686`*^9}, {3.7201955685801353`*^9, 
  3.720195571140877*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
          RowBox[{"Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"J", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "J"}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
       " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0", 
      "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
          RowBox[{"Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"J", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       RowBox[{"-", "J"}], "+", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]z"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
      "0", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"J", "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "J"}], "+", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]z"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"J", "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "J"}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}], 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
       " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
      "0", "0", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
      "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7191543238043857`*^9, 3.720195577960662*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", 
    RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.719159524601757*^9, 3.719159629008116*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
     {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
     {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
     {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.719159614143425*^9, 3.7191596294912243`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", 
   RowBox[{
   "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",",
     "\[CapitalGamma]z_", ",", "\[Theta]_", ",", "\[Phi]_", ",", "J_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "J"}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
        {"0", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0",
          "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], "0", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "\[CapitalGamma]z"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], "0", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
        {"0", "0", 
         RowBox[{
          RowBox[{"-", "\[CapitalGamma]z"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "J"}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}], "0"},
        {
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
         "0", "0", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Kz"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"Kxy", "-", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", "J"}],
            ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}]}]], "Input",
 CellChangeTimes->{{3.719153761308741*^9, 3.719153879104764*^9}, {
  3.719154350678459*^9, 3.7191544283882246`*^9}, {3.719159637553063*^9, 
  3.7191596400528793`*^9}, {3.719159681622105*^9, 3.71915972227676*^9}, {
  3.7201956189966183`*^9, 3.720195639904683*^9}, {3.7201956989649115`*^9, 
  3.720195768146266*^9}, {3.720196014437434*^9, 3.7201961020291047`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HH", "[", 
   RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
  RowBox[{"H", "[", 
   RowBox[{
   "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", 
    "p\[CapitalGamma]z", ",", "p\[Theta]", ",", "p\[Phi]", ",", "pJ"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.719154512929757*^9, 3.7191545426633015`*^9}, {
  3.7191547861653466`*^9, 3.719154831509534*^9}, {3.720195814110454*^9, 
  3.7201958157410855`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EE", "[", 
   RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"HH", "[", 
     RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7191593282638855`*^9, 3.719159393592677*^9}, {
  3.71916591799345*^9, 3.7191659255521107`*^9}, {3.719167213595196*^9, 
  3.7191672222623262`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], ",", 
          "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"2", "Pi"}], ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], 
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}], "+", 
           RowBox[{"2", "Pi"}]}], ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}], ",", 
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "Pi"}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"2", "Pi"}], "+", 
      RowBox[{"4", 
       RowBox[{"Pi", "/", 
        RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<Y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<M\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.05"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.08"}], "}"}]}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"2", "Pi"}], "+", 
         RowBox[{"4", 
          RowBox[{"Pi", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7191567285378084`*^9, 3.719156814767311*^9}, {
   3.7191573953391294`*^9, 3.7191574111783323`*^9}, {3.7191574493538713`*^9, 
   3.7191575303129835`*^9}, {3.7191576768399243`*^9, 
   3.7191576783252773`*^9}, {3.7191577236135664`*^9, 3.719157896860779*^9}, {
   3.7191579689909306`*^9, 3.7191582388227515`*^9}, {3.7191583043279276`*^9, 
   3.719158368850711*^9}, {3.719158399241756*^9, 3.7191584139823775`*^9}, {
   3.719158586816337*^9, 3.719158701020711*^9}, {3.7191587711578693`*^9, 
   3.719158786507741*^9}, 3.7191588225662704`*^9, {3.719158918027117*^9, 
   3.719158918710702*^9}, {3.719158968997963*^9, 3.719158997027031*^9}, {
   3.719159071840695*^9, 3.7191591170479364`*^9}, {3.719159168889499*^9, 
   3.71915924896544*^9}, {3.719159405312111*^9, 3.7191594213555417`*^9}, {
   3.719159958186528*^9, 3.7191600015401573`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0H000wscBnDbTROzX3dJOVTohaE6epHK9f1Sp4yopKJS7qRu0ZTeS9Q6
SK0loqGSOy95KaGWl4q8FlbW3egyOZu8NO8bts6RrvvHc57zOef567FghXoH
kXV0dPym83//bj5eV3Az3jnZptGojU9gtK5puR35FNgPbFleOe0H58szKeRr
MOKffyFs2mdDvg9qObGQmhytGblPYPZzA9Nx0l3YF/omd+O0jfIsK064JoLV
wcQE7yQCr2auD+zhJIPNzYLitYkEDqTtoByqfgjBBbMMuxMItBMVS/tJ6VBO
n0oPiCeQ5V5hZW0pgFr2prNP4gjk1zdcPOyaCW+/DsS+5hH4cXNL42NWNoTU
Het6wCVQt0q+oIOTAxPCqCjmTQKdYDDURJAHO3b+daYqhsCw19p3u6ufQtDS
xBeUKAJD2ymre0mFsDMuy0kTQaB+iuEBXXoRuGQfuJN+mcAs3zlRiy2LYUDw
y23+BQJl0oWth1xfwilqqn7wSQLP31uiE+EtBBeSs/nWEALpu2wYD1ivIOu6
ZcnwUQLdmtde/sIphbmr+25nHSSwi7cxYyK+DD77bJG98CMwwtNFZCQoByW7
U3THh8AXDdsW7ax+A8ua7lXkMQmMUxTKv5Hege0jB1W4PYFf362ZUMdO+/ji
E6M2BNqmv9L/jV4FVtHKjlVLCKw79Ga1hWU1LPVtbTYzJnBS9j7K37UWtJoi
f56Ghu6vPVJCGmrBrDupJ3iYhvdTPz677F0HLhM5IuNeGq7aJ2lNZtXD1Avx
iERKw2OtnYwWzgcQZ0Y6jD2noVDIcu7WbwCH/T1+ztk0nJHU7T0W3wBZHXW+
ex7S8LFP/2W6oBEYnIzlIzdo2CKeEHlVi8CFPLVU5E9Di56ZpV0kMUTuMVE4
TRmiZJ6KkeEhhiOc0D17RwwxmtmRcjhRDAqxp7ujwhCV+cXh3dafIa0/ydyr
1hCLTgdg7/Z/QCc7Ir/phiFuJpXVKx9KYZOdSrBS1xAnVmU65vVKgXpo50SF
mopPDsflBNu3QGHarOL5CipS3x+5NVDTAg4WCarFb6ko5c3ZPtTfClKG3DPz
NBWPmJ1oGV3fBr0/P6aFSQxwvpfv1qLrbeDWlD03pcIAGyI3lYSJ2qBdXO/A
zTXAFV0mKeqAdqi1vzFXHGmAmpw6//EYGchC5t2RWxngjXXm3VrpV1hvxHmM
bH3cnfP9x68SOXgumRG2QKqHC6U/U9ntcjAosxgvKdfDPh26c8dPOSxnGSfa
/K2Hl3w3cMpcFaCNGqiMY+vhI8ot/bNNCnBmnu0O0Z3eB9mZKju7oNH0dHGU
LQXDLUOdJDN7ILRmqoq5TxczUscinvgooZFuPdntTsKyDzzH4+eUoN5EcR+0
JmGzxlply1fCvPg+jXQmCSd3+QcVtCshVXGV2Falg7uodR5CVj/w7b+zP63T
QfKV+/NrTg7Agt3BqTkbpiDg4IaiTu4Q3E5tkL/P+gHnuJLg9GdDMIhuNdX7
fwC3jL00sHnaMssPN2f/gBJjAb9nzjCY+jE8Ii5qgfhkEDmYMgws8rNLZKYG
OtOGMq/4jMAR7sujwq9jwJtdGXaLNQpTPx1uezUNgxl/XWzbmVHgKX9d9TMb
htxFBWmMmFHYe57BHQ8egtoVj5rq80bBPfdf085ZgzC5LXzZjPFRSJjzNDoQ
lXA81rEtPEYFfWShSXPSN9DOfj7SmKwCzR8K+pbpH6P5VhTTfBVsNOd6LrPq
gvRs4zWlzSrYvVJMn/lSDl9qx26Pm6hB4PbwGiWuAxzNi5n7bNUgrGyKMLOW
wZikqyzBWQ13SwNX0PhtQHz73GsfqIbHW/vqtiW1whZyoQs7Xw2T12ydPgWJ
QRJr7fvmrRriiI1/ZiR+Ai8y04vXqIYarezpSg8R/Adv67B4
     "]], LineBox[CompressedData["
1:eJwVxX08lAccAPDnedyjS2uaFJJmGlvCKW+h+v1UXtZkitKLkNkqWXrhaq28
1PikNLF98naEjEP64KMmalSo5q3QoRjd1ZVq0bk7d+557rb98f18P4uM3fId
RRCE93/+X812Jk3PVsIxpvbsVu9hMLjEKz9lqoTFXOf9NUkjsHDV7TWVHkrg
P853I1aOgcPJwWi9RCW0tb2ePPCJBEI5hm3XZ01DAeFb0vrgNTQan/xxkZkK
ZEEHm1JNZdDy8m6ro60Keqs9lncelUH7jdnzfD1VoD5J/mHUI4Pe7dllR3er
YHjhHnVJyhSMC+r6OotVsM1NquiSycHUetw+0VYNudU/KHhd0xDvsk0s8ZwB
E550860kFrR83737AmaA9qcz+BIWUhtWvXsXMQMPZRVltj5ayPE0VypSZmDz
i7u6hDk6aPQam819NAOOHaz7q40EEgHRK+yiNFAeI1Du6icxLWPXjRq+Bnpj
jyYfoSk0euzv6ZKmgXv3m0zOuFK4NJjnvfaaBt6Gz6vMzKHQZ6d8e6BKA9OR
qz3DQ/WwO//lSL8BA+Hm6dN4QQ9DRkSROywY6Giz9zb/Uw/3RdyMiVzHAJeW
ixo+5eD57xOS4tIZWJmQX5Yl5qCxMJZWFzKgyS1odppPo2A84typWgau+vpN
dKyn0Xr5FkOqlQHho936u+JovBaz/rdUEQM6u4onY6U0ul5zNpszzoDdpNZ+
9xMamyesCzM0DAiWrR3rofXRb4XJUuOPWfBKKEo7xNXHR0e4whxLFo6faw7T
DtC4o15tZ+HEQkqL+/nT5TSKFW9qi71ZeH6ct5bl0zh1vKupMpqFw/nr5KIF
NC5MzOq5Vc+Cx6ikwzKIg5dbzgR73WeBbG/dFmbFwS+p+KG2IRYcbALFv37Q
Q/eUEEm3lgW5y0DDqww9DD2/eHrMTwsHLCoz3TopLM4uW0KPaGHWldDNxetJ
DHy6k+c0oYXw4MM1O+eTSFgY4h5SB3BR5GgoITCs5Nie29Y6MKiRekefJnBR
tV9p/EEdGGelmz5L1kHW3TfLpDodmHmJSgUnGLjDz877NpPAdR58S4f9SjDN
+VByIo/AB0Nf8Q24Sjh08+uqzCsEjr4a6JCWKcCS0TU1XycwUYgbil7IISF5
34j5UwL9qx3WmEdMgUe6u2W/FYmGud2mviGTUFf87PcN9SQWVRDld9JeQPve
Ar/mWyTeF3MmmT4JDNmHv3VvI7GO+sfEaIkEiEaxI09Eotb1nvRq7XMI6B1v
MlORGNBic0y/agR+Cjgr+oKgcJlPe5T/pmEQWiz4qIBL4dygi0cUw09hzqVR
f+F8CoVkVPDf6kEQvJn04SyisNU5TxEmHoCamrrxBCsKqwrzfIcPiKCVH5eu
tqXQvK++/qGsHwZXu/LinCiMX/ne72d+H7ha/+Je4UHhN93JNp879oJz8IXR
0o0USnz6JucKukE9WHg5cBOF7+UXKCjqAputaxrDtlIotVxyMEvwF/wLoZoR
Uw==
     "]], LineBox[CompressedData["
1:eJwV13dYzW0YB/DS7ozf6XRGdVQaUokSSsL5ZoWMJPKijBQNJSlKikJTiKRF
SykipaGMKFGZ7b1EJKQhEt7HX12f6+qM33Pu+37ur9oudyuHSSIiIrGiIiL/
/trUczfqWouhu7Bj8/drjcKg9Xfc520Tw873i3M7JpqEF/ne7LzdYvj9gTZ9
w44W4WEP/yeSbmL4Nmsksae3Vfgg9afNNS8xbH58cKuSWrvwjVPJuLq/GMKL
h+43+ncIf4wugsIZMUyxcIx9F9cljNZas+lzDXn/vtpJqt/eCfs1e7mqbWKw
2JIY3ZPxXrhI40i95TsxrBHL0dSw6xN+UM20vjMmhpimJ3u1Kz8IFyhKbDgy
WRz58mZLg2M/CXtp99fJOIpj8dJZOruiBoVzvumtnPpTHFV7FrnHDY8KQ7+W
SdtMksCHVDPTSvPvwo7PW56F0CQQQXWH3o//LgzpDzEfUJbAULvV0dHFY8K2
t73L8hZLQKhFm4iN/CE80ZCw2CxCAsOur1OclX4Ja0voC2xVJfHJ/evkGhER
9NrRLg5NkwR3q5qRg6YIRkVlB4MNJOHPyH/dbC4C/gqptFwzSRxuVOhzjBTB
1jpRuvRuSWj0B6vRlUTxduB7a+41SRx7c27EbvokDCt3H5E2lIKGrPVTybni
EH/UWZ84XwoJdgdyfa3Fwd3doT97iRSkzHRFqz3FYZzV+tbWmljdYJpIrjiO
GDVY5HlLwe+mrk6RngTE1lUL7EqkkNeWVW8qkIT8sfySvKXSUAuRXuXXKoWi
1OhW5TXS6BK3s8wclcK2p16/gjdKw2T5r523KGmkMY1MtzlKY4QXq7B8iTTm
JBYUi4dIw3HN8ZHYa9LYVFx4d2O1NK7ohNTec5HBeHtM88NaaaiGVik5B8ng
sujhnzpt0hBI7DX7EieD9yvmmfwZkEZ60vJ030oZHGosKkpnykB3R4JOkqYs
Lo3cLRxbL4Pz6n9cRWtlsUAhrnHnFhn0q1UaMz7IosvUd6x6lwy8rSqaP0/I
QidovnGSpwy8Qn5pzdCioViupGBFtAzOTskLTfKmoXXmvfzYJhm4NgRMBUXH
MauEerFuGTTG02aFq9Gh6e03uu+jDH6PVhlnzqbD9f6CuYvHZRD/razC1oaO
CYv7d/oFshiSO/PuagIdKk4P8ky3yyJz9sr8OBUGxJ94Dm7bK4uVurr2m/QZ
+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
IDf5ddM7BViXGOt+M65C+D8HrcYs
     "]], LineBox[CompressedData["
1:eJwVjn0w23ccx7Mkv2LmaTdV/B7osmIep6vrOvr9aNUiwV23eqxsnsJVO3qY
aaRtzEmHiVG2XiMjWI24tXNaTURPlc1uww2J54de63qe0g6LSYjZH+973evu
9cfbNTnrYz6dRqOh/f3PBFkzwefgoOkft0seGkGSmMOO7Egc1jQ1XIXXGBq3
4zbOZONAK+TlKmMWUIa4thNT41A/KbLT1awiu8v2Bzk9ODhYlos+CF9DD+Mk
uZI+HHo5Lsoiug6ZeYvecxjEwZCeWuGQ9RI1jaYo3OdwsNdeffwO62805+JZ
x6URMDYXgJXubqCzXUpxZQgBiyvxVjfvbaN/m/wXNWwCbNH0BZWlAdVLFKed
IgiovuOfMJ9mQLokGa0xigD9/CbmShhRqXmhoCONAFauTYywZAf1RbEzx78m
QD5rT49N2kPHX2mjiEEC1BFOwqliOtDyVKe6/yLAeqN9ZvABHQaMMl+eloCX
oQVy1Qs6xJrxLWTzBLh/+pr0ehgD8skNNb5OgDdXxGp/gwnQpG1R6wnIvnnl
6sUgJpi/q/ouwbj/J8PmMZ7JhFvHCi/XMkkwmdjctGEmJHal8gItSIgIqj5q
2mOCezCbM2NFgvLEYFi5Hwad4TYs3IGENEn96W8rMbg2sm6rdibh/Ur8d0Yv
BqGx2t3zLiT0XuP2fL6OgfWcctnIIuHRkTfzZ50PgDZFNi71IGEVhJqCFQx+
WBL1fehDgpFKFNp2YZCWlfrLtD8JnMUOqbQUA73As8w5kITDW717NR4YPKLZ
5HcBCWUBsgZsmwli8Xrq+TMkBF1yF1waYMLBKuVJaSQJ+cRSkUs6EwJaPlp3
SiJhsvusp1sTA0w+nvMqPgmOmQ9qo3IY8GuH9Z/xGSRUzMerhacYEN2j+fF2
DgmNbX5P7i/Q4YvxlDgnMQlvybMdJnA6dGCiHkcFCXclBVsHqmlwNPmh5NA/
JLCln7XITQYU8tM3cw3bJAxNFIoUMgOK1iX6eJtIsHQN9WgPNCCBwGIo2IwC
v7zXXToF26inKt7qoiMF+Zu7rc36LRT+ZKesO4iCYxs3fuPpNlEqK7gkWbzf
z2Ru1ajXUF6G/eRqKQV8XVBsnWEV3bi35P5lBQUMTP/8zvFV1BpYNVB2iwLM
qzZF0bGMXp17Zna/lYLbkXReTNsLJCwuFpsNU5Du6bbm+/1TJPkjTls5SkGO
vH+tYXQB1dn5HMEnKIi5ouJ02yygXpm23+8pBb4GwfAJq1k09qzVvmtx391A
yf9qGi16XOefWaZg5efmqUP6SRTsX57gqqPAy9I/YqJxAmlLomFog4KT7c1t
RXe1yGnHeO75FgVhnKkRaYgG8TLlFwxGCt5u/8R8QTuK/gP25sCT
     "]], LineBox[CompressedData["
1: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
O7e9JfCNrhu/c1eqAa/aR5l2Av8PVthoeg==
     "]], 
    LineBox[{{7.047868600590143, 0.14357180398750397`}, {7.049654744786457, 
     0.1556837063124815}, {7.0538968372526965`, 0.1831283219502628}, {
     7.057178877213416, 0.20346495394869418`}}], 
    LineBox[{{2.3837617244845166`, 0.1895745029808062}, {2.387736277284661, 
     0.21333005161833987`}, {2.3910484046181155`, 0.2325781220101802}, {
     2.392497460326504, 0.24087459637949737`}}], LineBox[CompressedData["
1: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
0vH/APYOREQ=
     "]], LineBox[CompressedData["
1:eJwVkn8803kcx/f9VrPNtM1XrmiSLD9DP8hSPm9i9lDnIS1UrlDnd7/EjjI/
6riKcuhmIT3GDnG58lCPhm5dUY+7pC5O8qMfK7rRD7qabTY798fz8frv+c/r
uTz2UNi3OIlE2jrH/6s1dOdOU9XornxqkVcNATSxe71osRr9eBJ78baEAGa8
8FOZkxoZk5dNNmcTYOl9a1PjBjU647yJk5xMgFvWQNK8HDVyC6vMmGQTEDWf
0XXdZBolHkisxPPMoc0iK9NqiQY5Ia6mEbHg9uidTg9nDVLGDfUGuLDg3g0q
M8hHg3jk8HN/W7LgSWR53dFvNEgwdvj50HsmqKpaerulGjTvZpZMVMmExRzV
qhxnLRIPpBwPGmdAume48rWPDk1k5aoGAsxgVhgUnxCiQwqrh24plmZQcNP7
3btoHUphKJ5+eEsHiY+1+ku+DtXXt8+7e4YObX4vqZTHOuQf2Xi+6ZEpkEKS
Vrvun0EBTalZsnAanC7efeOqcAZN2Ef85u9AA/O/tvp4np5BaHjbqt5pKqwQ
uAf6Ns+gGI88/gMJFXi7PkeGambQgyF5KnuQAj2VoyN9ND2SHC+zDmukQMRI
f+xOth552jzce+wYBRKi5Smx/nokmFh5tM6KAoVx2blpRXr0ysf36ZFdJmDR
cGiBtlqPyJXBKXxnE6hSRZ8RXdOjIw1cpoWODByXMAbeqUdoUfdU3x9kaE7Z
fL6gX49EsU9Q4QUyeDWvW2KqmvN7ujqtTySD4iOnunhGj/xk94cHvMnAX/3V
CouFBhTou+2WtxcZHqdSGiS2BlR8001cHkeGna1aV/ZaA3JhDvq8E5NB+WX8
mjTQgOKT9+d43SfDvxkP2xuTDEgsqrVvcjABy5zSRx2tBvScY/2A8Y8JXLp9
UuB334BWdl7xpy+mgCOe/qzrmQHtUY4p9UEU4OZHvO6ZNaDttZQ38noKRBUu
nX7Jn0W3yXXDF+OoIC2vs1kwMos+YKho9BUNQgd3ua/9OIv0dKl6DXPuLzYD
YjAjOhx1aH2qrynsqfku5hbHiOi5haVdFaZgdYUvSz9oRGyOktEeRofSO+NO
Y0YjynG0LehQmMHvwvKKfSUk+OlgKF3Em+tLMlVzrIIE69r6aBeimHBYvqWp
pJYEjwMYCU2pTLDVG9sV10mQb7SeaqlmQnZewoj1IAkyy9LstqiZsKGIa9tn
h8EF4vuY4loWlF4pc5xwwUAkOxFJkbNA1fPeA/fEYDBuKEfYwwIJq8bPIwgD
5fI0yzVaFqjFtH1FyRgktW+Mtw8xhxbp0M8BrRiM/DD8efSLOdyLv8hXdGDQ
5iCVBVAJeLZq7wS3CwOBYZlaspQAUpvSw70fA5veP3l2mwmwyJX1Xn6OQfr8
KOeIcAIceHFC+7cYuE4eychLJCDkiap9iQaDxoZq9o1iAo6HnOp3IOHAL1S9
6ZYS0MBeRL9IwUGuK+QubCXAVPxiawOBg1HUce+AjICq8UnefCscqrb/aiOq
JODq1RZVth0OkrTukpo5X6cwrUjrjENMRfypoZMEDGz0ck9bi4P5/stLHTMI
8OKc417egIPB6pfcwIMErBOcfSELxiE5WlFTFEmAdqD6UujXOJzNt+V9EhCw
csemtj07cMjcXSC2DSbgPzBSF0Q=
     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1:eJwVlHs0lAkAxacH30wyj+/Tg74HrdMmh8oiZ6OuEEvl9PKsLTNo6Rg90aSa
1poaakLpgantpULpMa1o2majh9CDjCzLVqti1YpS25R29o977rl/3N/97zpI
kxfFDefxeIvN+t+XaU8xccE0Cuv1aqv1FDThE22DFtAoO18wqN9CQaaN3N23
kEZMtVdq+w4Kb+o+d+ZG0Ei2ay2LKqCQoH1T/yWaRp8bKRk6TuFDXXkos5KG
VWX30SPlFJK16tGieBouum4v+igF/2cGZUUCjSzv9JhzOea9jxZksJxGjtqx
2TadQosk5Hj7OhoF7hdb01ZRsHfKcU9OpVEqdVfWLaJwWzd+vnc6jSLNV7P5
PhQuhduF71PSUJqq3oc4UfgkX/FyUiaN+J8C/t5kY+7Xr3dZe4BGz2WFvNJA
IlFVVGGhp3G6VL3OYhwJyZoxY4MNZl5Pnu2oESSuRGo2aGpofCnaNsziHwkI
F+X0cQ00NpPkgz9uSXCiSVY6uYNGkr5YxKRI0GHvfCSEx+D6br+MzkYxFl6t
VOX6M5iqW62vsRLhwwm3ruYgBpGbT20peCLEz5pSP7v5DBKbjl9eWSHE6xgt
7/hSBrq3rqLrUiGy+NsVungGQw3PydtXrFGzNEjespMBl1380UE6Gl59xqVM
A4PpJQ2n35YIwEupmnPtIYOXvEx7+WYB7pi0U5cbGbhds1n7e4gAEUScQNvJ
IMxv0+JdvXyksQN6up+BVh7sEOXCB04Yz+gHGfhU2ciSPxPgT6nav8zEQEkt
f5XWQOCgx/Y1RSNZbO+4si8hicDKq7HLvQUsyr87JlzoQ2Cyb1BwuzWLr9W6
LBdrAhXzRI70OBbb7lX53SqzxNbGfrF+AguiWdDxY7ol5kYYP0fbs/CN9PTw
mGcJYUdlj8mRhUPzjI8NEy1hlGlbCp1Y7G99H+i42BKHu5U1M11ZWEvPKdZk
WCI+OfZCmxuLrIPZsouXLDGocM6e4M0i4pffisbaEPiVJ0q7ChZdRM0eL38C
KlV/bHQACw83362hGwiMzaucVbiAxUDqxb3Rjwh4ngnst4th0V2p1rzYy8eQ
q3NnVRyLmw6jQsqq+bilE9ZHJbL4c8q7nNgBPsIMzScL1rPYsWrbsPJFAmxs
kUXaqVjox6/aWCweBZ2F0mBbyiLj0Ol379VW+EZ6RTP+HYuRUaskr9YI4X96
V8exf1lsDVhc/k4rRNjrla4uQyw2ye73994VQqEQ3PMlOJBka22xowiGvCjr
1bYcHq/QRPm1iDCv+lP2NR8OZy6EGLYWifG94GFb4BwO7hca+uUXxUgOPenc
OJeDJ3/4rKV3xMhrm1/3PJQD8fbbxhFvxXg8cHiUWMqhNt/Q+TxYglhHX7VU
xaG63n2GblCClMQxrb1ZHF7Jzk3+bEVix/nuyal7OExprRDMdCBR4p13J/sg
h7vE2UX5IST6ljwjLpdwSMg/Zn3jCInhhRXhs8s55MkKd57XkaCeZJ+qvcRh
zA8pcXtrSXgmuQd26DlE5SZ88RggkZ6ZqSLucxC7nW3sDTD/QV2kMbeJQ9O4
Q4r0KApHJK6T6McckhT5pi9yCufDh6cUt3OQWj/1T82gcENrvDntCYe2+40B
Tw9QePSsZMzVLg4Zjg9eoYxCl9O2uIAeDpYm8ck95uzrtnuZw2szr6YvsNT8
R0Z1GO4NcDDOfvmiOpeC3SfTkr/ecxjsDZ0Yr6KwXH404aOJw7QlhTl2myn8
B6JILs4=
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{7.047868600590143, 4.79573604730211}, {7.049654744786457, 
     4.800444932666215}, {7.0538968372526965`, 4.811686235447435}, {
     7.057178877213416, 4.82043898084391}}], 
    LineBox[{{2.3837617244845166`, 4.595435510144728}, {2.387736277284661, 
     4.586546289342157}, {2.3910484046181155`, 4.579197429386802}, {
     2.392497460326504, 4.575999149739551}}], LineBox[CompressedData["
1:eJwVynk41Akcx/GZKZSOdZRrzPx+SSFHSaLY+X4b1SYZoTaVo52lNikVZUPO
jZV2HjzJka4dsxItw+aMcTVEeihDS+41NI5W43zS7s7+8Xnez+t5Phu4gW5+
NAqF4qbY/1UnZ8UFN1NY816t0RIbEuOU6JVmtEsgTymrbVc4K6RSoEKLhnBB
WbRY4SsBHyYXYhIg9llDbbHCOYWr6LPUZChYbI3OUHhdnoHoPDsVrtWIakMU
jhLs+l4akwF6QZHRHIUnHhxW8am/ByrpEzUMhc1aiyXj1EcQ2jkQObKTRO5B
kZGxAR/Wft5aLVA4vbH5mi9bAOylnDBvhV/v7Wx5yM0BB4p62VcKK9UNMnpj
cqGaax5Ubk2iPUwG6vLzgHhenn9S4cvPF2qP1j8F/liA79wOEgN7VKxGqUI4
UKjsvF5h1cw1nkoaRQB81vUMKxJ/89C8sdGgGFaZ4RYthd9LmF0+7GcQ76q0
uGBJYshtQ0qEWwmc6J3U9VFYw32LSRa3FHbOfnhWtY3EA23WYe9iyiHPydTL
dyuJwzy77LmUCtid4n8m34LECOc9rev4lXA/WSibMCfxj+ZDhGt9FeS/Uz9x
zIzEpCHh4F/UWjgvIFvajUnsq90xJ0+oBaZL461eIxJNH5WqLtOogwH+ubrB
zSSKfaqsNhjUQ8Cm13FvDUlcet90w4v9Am7Gj3l7kiQefO6UGdD8AtQdEvNM
CRLT7r7+PcxNDK4NS35yBonbT3R0ZXAbYX2TlAygk3i2q9+kM+YlaLvtuUPT
IrGkhMsaUW0Gm5YB29R1JC6/M+I2k9IMwVmb2aQmiQ+PjIdp8FsgPbX9J0KN
xM72uVZOfSvs/9umoG4liRukyuXD1HY4NiT7wXqewA7tTybZTu0QrEQb0JQT
GOfYm+mb2g4s0XX3gSkCZfnF4SPGbyCnLsrQQUpgUdApHHV5C7yKjeS2DgL3
UisaZfckcKC+cJkgn8C57QLbvFEJyDdNTn2XQ+Bj36Tcc5adYJd4PHf1rwSu
bjqdONHQCfSxuCjTNAIlPE2XqfEucDYGf14Ugaf1z3dO7+oG2oWQl1IXAnU4
Ht8UxXbDW4sZ70hHApsjHcout3ZDflZlupIDgRbDupnyUz0QYO/+sduawPlc
sdds/HsYWVE68liPwJ9tyJEFSR9Yiv+ktA0w8Wjuh8V/ywYh8ZJOxdc+TGRK
vty90DMIb5KNXOjHmDhG0WD1fhmE/XbMojEOE0M9dsdUsIfAsN6t343FxPsq
iapXXg2Ba+FEk6++4u9nRpf1D0OIh31mhISB4QaB9h3KUjg+IYxKtGPgPk5s
H9tECqJ9g2KuJQPXhqZFCZ2kEDqfNGJixMBH7aIGXpIUnng5F8VrMFAcpebs
qDcK2+w9S6LH9FGtX+hVbT4GF0ufql1K1sfsuzMRj4/IgNV07iini44VL3m2
/ldlcJu6aQu3hY5t88afTNNlsDJ4sum0iI5L7l5+BT0yMM/ODGLn0NF9tdip
hDsOXSITmcNVOtKup+k0XJyArW26tCB1Op7y3l3Uf2sK7PiaGnx7PeSp1VxO
5E5DhfKi7PYZHdRPt0noDp6G5LyZ3KJvdfAJUfDAJH4aQnI+H67Zp4MvLO6/
asybBkGpRWzeRh1cOhS+efnsNCx+nBXW9Wmjf4Jtd3j8J1gR+YvnP67auJ8m
3HMhXw5nXU4C1VwLOxKMPaqq5dBq42pjpaeFHJojh9cihx9ZRiLKGi38D3l8
V48=
     "]], LineBox[CompressedData["
1:eJwVkms4VHkcgM85IXRRzjkzc7Ral6aJiVG6uGz7/+li7CbrmWUrSS67kdqm
za2Wiq2k6EJuT6QlNGkTwgrFqqm2ZVYpD7XkUsmlsmQMM2dm2w/v8355P76W
wVLJDwSGYZ6f+N9TbHP8pJES8bm333Y0kGCcKbpyiKdEUdW/8d0ekTAvNHrs
vI0Smd4oDEptJ4HjdHtNiYsSNe0af/SxjwT7uI7wGUeUaKkTNo5oCvz1TORV
MycRi72t3niIgloq7qAZo0Ilse1zAvxoaHzddM/BVoVqyrs33Qqj4X610Tyx
qwqly+/qLYqh4cmWrOKI7SpUPiD5RpBOw2BuRVtzvgpNNlO5vQoaePxBuyO2
U8hOuFhrIOZA1Mrv+vpdp1HrwZx+SzcuaKPFoWFe00jGCu0SJFxIrHEaGQmc
RhWOosR3IVzIdl2gnDg+je7II6pGErlQ69ZjZNg6jZ7PTXaMb+EC5hW+bOn3
agS2EfbP/Hlw8uy26rJoNcJvej8c3csD08eeritPqpGNSexNTgIPrH1EG74s
VaMwq6LW+CIeuPt93OKtUqPYoGfSP9/zQJHzuuupsQYZKWZ3LccZ2NzVHrzV
XIOOjz9eV0QyEBZ4a0/wWg2SL8R9Cp0YSN55OD4yRYN2hcu7DY4yQMmk+lN5
GrT/clLMzQwGcgcDTx0q16C4Y7/WhMoY4AslJsQ9Dbq7PfSAdR0DpXvWpSe2
a9DTHN/Tb1oYWFW6gpk1qEFhfEJR1sNAwwd+3lm1BkmrrOb/Ms6AxzKuNTWX
ResHXC6f+MhA635DWbYFi0pth3VVvQxsrZxaau7IosC2J/7DCgb6JobK8zew
qDjGpV9Qz8D4gZa6knAW7fmwwfT3TAY4R9L+rq9kkRaMk5Z7MnCp8aiP2wMW
uUe23SlyZmAJEdUp72SRQX72j5YCBpyPb+5XaFnk0BTxz3KCAf/kzyZ7PLRI
8rmiuKmGB/lZxQv1u7RoxbfLYusEPPB+7idy/KBFc938hsw5PMDMTSAI16Gj
B2izZD0eBBTEBN3m65B6YigwsZcLZtc9CqP26tDY9jlc/VwupDUN2bzRfepf
P7wiJrnwR3TWhZBUDAoySnQGsznAy/634OcLGJSPJceZamjYd2vjtdTLGFx/
IJ2wG6HBQqOra6jCwKC4OiGjmYbDCWFdC55j0OQefFp4hgaXFGeLp1Y4EBcG
dmdRNKRdP79kWIjDTv47dZX+p58V7xyIlTicMzjGGVBSkD2/wM1BjEOE2a5T
CZ0UKDONQ1J24zAmpepzLlFQkf+iaH0lDvZiT/KEiIL7oRc9GupxuOa8uu6R
FQWddjuGneU4fGW2NsuCQwFW2+cgasdho+Ru4AyWBCq+sO1qNw4hA8Kkc6Mk
CNx3Ri8awOGnGxmbHV6R4PVksI5R4eBtWrRD9hcJsV5J7QKMgOnugNEFjSTI
zOnZFw0JeNu7pLaxkoRZmS89ZSQB+xxFbdIWEnKHRt31zAiwFCTMz3tBQllZ
xeBhKwIaGyWKuPck3IuOTJmyJcCwzeqUN05BxxerRJGOBFR6PVjNUBSs4p9x
vupCwH13266ZiyhY4XP6ZeHXBAh3C0gQUzDVkXfJexMBr2Lm9SzcRMFi3zW1
Ab4E2AuStzUHUPAfbUYZoA==
     "]], LineBox[CompressedData["
1:eJwV13k4VN8fB3CyMyMmc2fMMHNnpkIbqUhRby0olRIRSYiUIl9L1iItlFRK
EqksKRIiSwoVStooS3bSQopCUdLv/v6a5/Wc55w759xzP4vA2cvSdYqYmJin
uJjY/39tGpjWs6wkMJjZffRkAIGITQVei7dJQHGkZrgxksAFlj8jf6cEYhbW
Hv6eQCDA+2CVtKcEUjGklX+LQFnquM0NPwm8K65YLnafQN3u0t/CgxIYqzts
O/KcwNjoMrBPSyAtm3x29xuBuJnrt3ytp8bXpEvn+bDQP72XyW+TQErKbHv/
oywsEwU3bPwgAYnf18XmxLPwmX/TquCXBLYMn6K732PBUFVqc7CaJKK2mHcI
xNjoVXhgIecmiYlHhrNjI9lY+H3Omhnjkpg9b3KX6ilVRA0+lrWZIoU9xVe5
b5JU0fHV7mmkghTYf8Nqg2+pIrI/0nRAXQpehw5OJNSqou197+r8FVLIqVLO
k5Xj4Ehj0grjaCnIuZ6ccyOMgzelNEMHvjQun9riUOrMRe92hQs/NKSh3uSa
7+jFxai4/NBxHWkc01i1dySYC5aZTNodY2l8v1Ez8u08F/ZvxWmyO6WxQF++
X6Oai/cDP1vv3JDGrc/iP9JnqGFYvTtYVlcG31MZSqXNapB82NlweYkM+vPD
S3a+VwNzZ4f2gpUyKGAkO05+VYN+Zut7BysZ0N6vuyQuoY5gvUbzfH8ZDNOy
LprOUYeERS13e6kM3JXqvV4Hq2Na2N3S/FWyGEsI6XupyENxalyr+npZ7D6j
sncti4dtT/z+HLeWBUPqrnchn4c0Rb2l29xkoblHVmaHDg8LLxfek4yUxUv/
xy7jG3nYcq+oxLpWFjkzv2xffZqH3+3x78rfyMLwQsramgs8JIsHjGu1ycK8
ZvZjo2QePpotNpgckEVY/IvtY7d4ONBUXHxdUQ5r7XY5FtTwcHGkpOjXJjkE
ye+7aibGhyH7UpOTnRwS0rr7GqT56Foa9KvWWQ6hLK2GzXQ+tCKW6F/1kQN7
8+14AYePe8qlhWZxcmAO3f4juYCP1nn37yY0y4EfvOTVgBMfYZZJDRLdcqg2
spI5uouP6f4ho/v65DCpuX6Svo+PvQ8MF634LQfj1Pc6Pw7wMWH+oKCfK49l
ukXdEqf44O0uy1/qKI/h6w6rNxTwIVnlM7TNXR4zHMuqbEr46CO15h70lqfe
S3SARRkfBc3nrldEyCOmKyhM7ikf5ma7E1bfkMeBqH63Gy186KTxGt3y5DF3
058nok4+CLG3jMh78pA8ctz71Hs+eoqWRT97Lg8GX/Lm7AE+AjRUDll8l4eP
e9LouQk+tkfUlO7/LY/sko3DECOxsvPg2FkJBRh5t3G0p5BQjO/zfstUgLnD
xokhKRJp0uU7ty5RQPyLtjkKdBInnH2vBa1UwI/T/Q9LFUl4lWl1JK5TwNlu
gzMuSiSW+J+36diugBURwe0Xp5Go+7B7rUuEAqo3VdpfUiVRaMw/fiRaAd82
6rRJckkkXX77OD1OAVJROlfc1Ei4Wy83+pyhgOesFd+n8klsyBsJlMtTwE9D
78M2JIkF9MzCWfcUcHPYy+6CgMRkpYrOvucKeDO/o2dcRKKXfLY3pkEBbYrG
cbwZJGpCDt3M6VBAVt/W2CUzSZxf2C/8MaQAmZXW+201ScxKK2ceYNLwzLnw
zew5JJTE/Cwv8mjY8GfhiPxcEqP2s06XaNBwrYHt1k25Ylqc7IQBDYdyvsJX
m8R1r7Wr1VfScGafYZaODono2n/hy9bRsLosa3cvZZuIPX/CttMwtMD+w3xd
Eoad/MUpu2jYPf1hai1l4dIG38f7aTBRPVe8bQEJ2fgTeb2BNJi/3zT9A+Vv
P5Z/k4qgIXrc/9POhSTebhidpRFNQ8xu3yltlEsyM3eZxdEwr6bAb+0iEsnS
O9J2J9PQoZlonEv5iDOz+0QGDdoyEW50PRIzXXSLp+bS8DAj9PA2yk9cLE6f
L6ahYNpRIo2y+869bqoPaaiJrxP2UpZ3jTJKrqHhZXpchpo+iVuu11VE9TTU
vfybtp7yBrfHXzJaqP9TpsM9QHnIrevRnPc01OpZyCdQPrvrb0LeFxrkab7/
5VPWded4643Q4C4s2FxN+a27vlnpBA06HrzbdZT9d1vxIUVHyPvS8AbK7D3e
PyvpdMS56ii1Ur63J+bFGoIOsYorX75QtvfISnvJoyM/7uU02cUkJjyeBm/W
oGPOfaVIbcrJez9YNmvTsUTSz9SZMvZNmeWwmI5oi6qNVyl37+OL94CO5VnH
UvooH/Y0bHZbQ4e+9/iSZQYkpnttzfmyiY5sT1V2MuVqL/9j++3oCFZO1pdb
Qp3X/nMOo850rL70+8IhyvLeuQuDPOjQtd6+QHwpiSzvFwr/fOhY2FwgF0N5
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
HzWEhQQ=
     "]], LineBox[CompressedData["
1:eJwVlGk0lQkAhu8UR5op6fvudT99i9Q0JIylmmbUvFTIkpI1TPYRskyFUDQH
JXVFHaPlaqGIU5bMCDfnEiZjOzfcq4gKNaqRZbQgxvx4zvvjeX8/K33DHQMW
8Hi8PfP8v57ifCbAhkbZvbdBTjQJkas2Zb2ThmdSwFOtL0n4id3PjO6msU5W
q3g1RWCs+XN/hhuNOo2gjJCnBPaLx1rmPGi8q02p02oj8LG52IHxpuH1+tzZ
+9UEwsWpX6kF0jjYVHritJTAtgFpYsV+Gk92hGarNhMQTSkvtwmjEeK2vnVT
NwGFum1u7y80Gk+J3icMEdDSPWsaHk1DyXLdWM84gT/LhfZm8TQyIwp/nOKR
uOuq6Xo+kUZW+p7mziUkZsL2/b0mmUZn8QXfyBUktFoO6kf+RmNzWknnH44k
glMuVyhLaGiM3DIUNpBQj+ALbKQ0XI5nRNQ9InHPXXRIVE/jYe/yX48+I6Gi
n2ik0Uoj6Wrs+a9nSOR1+BXp9NGY63Xs22TKR5+W3hVbHoM7E0m9zvl87K6u
TMnYxsCRc4o+kC3AxzzjoS5rBjlN0tzRfAGuioq2atozeDlq7p1YIcCIj5iX
68zg40nn2Xq5AKcWHY8tD2QQ8jKe18/XQL2zdZjiJIOTFk2lG7M08N2o3Jlp
ZbDKPbw2NUcIXlSVxX0ZAytlXe2GEiEeTosNveQMfAs+GS9+IISbSoCquJ9B
Wk1uZckrIWLYCQk9zsDQdbA02IgC8uS3JO8Z/GsWPzyylcKitVVZntMM9tVb
HY1zoZC9/njEZSUWVYFJ6rfjKHhX+3uZqbL4RmFes1tEQcfc2qZ3CYvvg1u4
2asUKuzUVtMaLCL7tD0ONFI49mh8mWQFi4qiNS8MH1OwdJN/9tBiYaUfFPPp
DYWlfZWvp1ezIEMLfAQzFOR+YsUlXRZChd4zy2EKOcOJ9T8YsNjBVNock1MI
DPcv7TFm0aET+pfkAYX3sXppK8xYqBjY33HIoVDDU4upxvx/yDYgL41CSsq4
v8d2Fj9rqyt4RygIMiu3XNrJIqRGniHbQ2HDLatxTR8Wa/UHp+SqFGYN9Pqr
AljMnOlhwj4I0Vi+tGVvMIvb5y3slg4J4SLtunHxIAtz9bLDwVIhDiv83DVT
WHyRWVuQFS1EuXKilCpiUSNXsh58pQET33si4SQLfYlkLlkmwLaC033XP7Fw
PmpX9FwqgMuIt4H+LIu44YFdtiUCxMaqtpmrcLB0lxntSBdAmrl3SQjFwbkp
o3/CXgC7BzNp9zdzoFZ5xum28fGTqqzHyoLDu9MXvGNq+Ah3uKH3yJLDZp/J
J4o7fGT22De/dOCQrtRg0pTOR/dEzuJlvhwWdieMHXHkw3+1eapvCgcjXqlw
Yw+JqGD+47enOGxYaO17vYXEiZJhneh0DodjWhu0akgUmmU+TMvmsM/BNsr1
GolRpwGV3ws50Os/lJUEkVhwqcL1x2IOnUNGCyv3kiCep+U33eUw2T6X02VH
YsMBU6s+CYdEp4v2dkYk4pOTU1TaOVwvcEw2mZ7vQbO7PKODw9qyUOMX/xC4
om6whu7mcKIYdjefEShxXRB1s5eDblfmZEIHgTqxvOHb5xy2+8l2hTcS6Bwo
5FcPceAclyceqiQwpJsQsP31vB92WXduvj/mxmc8V45wiIxZadkuIyBPdUHb
BId2mJpovCGgOTPtNPiBQ9HtTc1bPhPwCru2f2qaQ3N6vpanGon/AA2tOSM=

     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{7.047868600590143, 5.136464247388111}, {7.049654744786457, 
     5.128674666873581}, {7.0538968372526965`, 5.11014197862069}, {
     7.057178877213416, 5.095772311634825}}], 
    LineBox[{{2.3837617244845166`, 5.485256105055082}, {2.387736277284661, 
     5.5016950735668555`}, {2.3910484046181155`, 5.515360914543133}, {
     2.392497460326504, 5.521330177012092}}], LineBox[CompressedData["
1:eJwV0ms01HkYB3Dk0uqyQqcUlTHzyxQ60YWa9TymKxNl6KxyPYpdEku3LVZM
IalZaUV0c5BEyWVdk4RxL8qM3G8hY9IOBq2p9r8vnvM9n3O+L74vHn3PAK6X
koKCApe6/3PZOpkg52qcZeLGKMtt3wlGqqwuM1IKBBPOflVTynfOlaWrKYWD
Sk+7K4PyGb+xT3O8aDB49tMeDcoZzxatlinegL11kc8nvxHUzqJVnGTHg5Nb
TVUT5bB0i2MjvNuwoV/D+R5lyf1Dau5Vd0FVGsH7hbJRc75wXDEFHHz37jCk
7GlTsd6QlgqJzud5/V8JJtY2nD/OTgfeIo5zLOXXu0WNDzwzYN2cpHo7ZZVX
A3o9vEx41h5fIZITZMGnAJ3ULDC/Hc45STno+Vzl4aon0O0l/XV+nmBAl5rZ
qGIuqIqDj3z7l6B60hIXFc08uK5rZnyK8kMnrQgDWj44cjNu9n0h2C1c0+7O
/hsO+Visuj9H8NxfdIVQbiFwy/V2Ts4S1HTYwLzjWQSdcs4/LMr7W7YGv+eV
QNtCW50SGcEh/s60mbhSWHlCgy+eJhhqa9WsnVoG7NFviVqUCxoOrLWvKocf
Lv9+6sAkwdjB3IEPipWA7wU2RyYI9lZumZmKrgSPhIdh+z4R3JhSpL5A8xWw
uEH2xhKCAvdyM31aFZy9dVPQN0ZQ3l0X4cqugWOcm1r9HwjaPOck+TXUgDxw
19aYIYIJya+fBnMFUG8/O2s8SND0aFv7bc9aEMi6jx3tI+jT3scU8ephOmp6
wq6DYGGhp+WwegMs3CndXNROUPnWMHc6rgFM3L30VogIPnAcD9ZMbQT5SZG0
/C1BUetMs11VMzzQUM7JaCSoP6JaMqTYCvafTUMlZQTbVkwy0zit0FGpJ0sp
of7NuifpeHwr1DzOLbAtIijOzg8ZNnwLa2Vi7St5BPNOeeDowXcQMPb92pVH
BHcrltaK7wphfZ7RstI4gjOm6eZZo0IoLvg22/YnwUfHYzNPbBYB92LYvpFr
BBfXecdIqkWQ7lXIlEQSFPK1Dk6Mt0O4bikr4gJBb11quEUnmKtk1064E1xp
57Qv71InPKkD10AXgg0XdxUHNXdCvt/kJbETQZMhnaQpjy6YslaKfWlPcDZT
4CqL6oZzRz9MzbMJXtm+bnhO2As+pqwbeQYED2eOfflePABix0jLbb0MXCP8
muzfNQD+Vt1m/R0M/KigadnzdQC2xbyz5QkZeMFpB6+UPQgZWvnyp00MvKcW
o36maRDi/C1TH5dSfS+j1eK+IZDZ2Cw3iWdgCC2A1aY6Asmr6KyLuxm4x+5S
L5s5At6BTtlbgIFLLySE5XJGoOV0QfGgBQNTWiuq+bEjIGfNFxpuYqAgTMPW
etUoNChbV7noMFCjL9f1hfFHqCv2XeAjoWNa8nToI0cxGL/jbzG7TsfSer65
71kxXA1/s4keRceWWcPJjYlicFhhlLY0nI5yB1evnC4xRDvHLG45TUeHxQJO
oec4LA1S91NxoaPSHwkrq3+TQKfuGmVg0tHDbUde37UJkEjN3bQrDJCv8TIo
xlMKd49cNr3TQUPdxO3RnaelsH9YceJMKw0fr825z4ySwuRygzfW9TSsMbnX
VJslhR/DfjbsL6ah/EAIUZZJ4bOCcFddAg19o807Q6ImIVQ5uJjvSMO9SrlW
/tlTMM+0d2M16GNbtKFT+YspYNSCjX+lPtopWdvxG6dgiXdusVWZPv4HDFl0
XA==
     "]], LineBox[CompressedData["
1:eJwVmHk4VG8bx1V2YxtmhjGLmDmFyhLtma/6WVJJolSWJLKlJCpUimxJJVJZ
2qTSLiQKSQuhktBChIpUIvvS+7x/uT6Xc53nnOe57+/9OTN183Y7j8liYmJl
k8TE/v93eLwqfFBmQCSpNXPKyQxNyJ7Sv7JPbUDE1LWymJ2iCea8R4uzFwyI
VE2vGdUe1sSssEafKQcGRLcdX9r0btaEk7ji0zypQdFJ6fmrnnI0Uagatpet
PiRyn3CslOfxUdpRVm6gOyT6sdZnYhGNj2f5MkqWC4dEb+wn3nqP8FDrmJIV
6DwkUlExf/6wnofOtJy3VReGRJt6Fhy1PsaDmrBz5gHdYZHE9KQODTEegkzW
fmlbOCISZxQ9XNnKwUSw5VYvmxFRf8pBj7ZqDqIK5nV3bxoRpUx1mRFSyMHp
hRoD/YdHRK2XlmReP8lBoVmLjPTrEdHxjXOMtSw4ELPxMZyxZVSU971OZv91
DcQe25h/J3hU1Him9tGc0xqgv1mx0CR2VMTVRUtvpAa07fXNTW+Niqi8/TLB
Lhqw2PDX0XZoVCS3uktwQ1kDNakdTXWyY6LDcysPRU6wsa6pfvN67pgotLMl
0u0HG16bHvhtXjIm+jbbWEX3KRtHPPeH74ofEw3WHbk1vIcN1avbJYYzxkTe
O8wjRj3YSOvcFLfv7pjIfnLegilr2BDq2SlOLh8T0TYvGVcCG7f8liZF1Y+J
sl2C+wQz2Zhzy1hdrnNMtCxkxFzEZqPktzDj2OiYqP7iae4mKTasDFnaqgrj
In2j+JkbJNl4vVP66mnNcVGX2OyReepsrM8dnsGdPS7yXatnw5vBxpf+rrsX
zMdFdyKvicmK2OjbU12U7TMuMph0vblvCxvMA4mvHuaOi8ZuaKrK32XjXGmE
vdnzcZFCVnmPZjkb0ycHvX/6flx0u8Ska34DG/MPr2urmRgX1WyjkkPG2XA6
whlssZoQJVr57Tey1sCFlCyeRNOEiNefeH1DuwZsP2zQn/17QqR+bqhmzaAG
xLiKcJv0T7RROujoKlkOXC7udnsk/CfqESyzsTHggH3TKjPI/5/IZ+yvtEcY
B4llXTpf//0TpTWF8t+rcvE4OOWs+wkxlGmavOwx5yHnwsfL/+VOwuEGXf9R
W00kUyvX/qydgnmSk4vPbtFCl6Cdwf80Bb1qz9RVt2nBVDv0nW3HFLRZPZaI
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
CVAzJTi4oYaOW+46vXIcAfINUhxntdIRYr7v7jYjASLj3nM+SajAP2CRdy7x
Wy1Tl8tzV6mgK6JVvC9XAKfYr87Va1SIH85dNr9QgFN1/kx3RxVYXDv/PLRE
AFnfA9EJbioYqFy9tL9CgD8p5707AlWgeMvmV0GzAKV/vsw8eVoFK9oM5PZK
CeF8eWv+r1YVnG3af/KYgxB/y7QXzfmqgrdxiczB9ULEt3x+vK9LBbnnPLU2
uAjxUMOxmtangj2Ho3PpW4XgJFq164qrQlGv7euKPUJ82K9D30qpouvH5Jrm
M0I4Ov7Y9tlHFd0OpUHm74XoCbrSR21XxdCOt4mKTULEnHTf6x+oisHS86vr
Wkj913yMHA9Vhcnw7bMrvwvBMq9K1TiqCrVy7WsTA0LUG96sWHdbFWwJWzsH
FQr2ctuFr/tUca2rmHnDkgLtafL8wCFyvfX+lWLLSR7vf7iSOa4KbZ1PLitt
SJ70ygQ7STKgkm809MaezMv3mc++qzEwovpvXaQbhaasD1snmTJQo3EpOWYv
hVObJoVlLmHgw6UDF7aGkf5nTz9uackA/aWWrugAyY+jQQVHbRkoUfBPa4ik
cHGXkgzbnYE71U6BN4+RfF1ikW0Uw8CevrFj3y8Rvx3zK34Xz0DRXheZlVkU
GvJO1u45wUDxO+e7165SsNJpHSk+ywCPWxW6/CbxLaWw5ctvMjBftj3CgOTj
l4qLrr/uMtDz5r9RB5KfqREVgSfyGViQPSk8kOQrbZCZ1lDCwHkp1YuniL/+
brrb7V7LgJPDmc9hzyhcTWkUk2og/z/k57j5BYVNq/+pZn9k4NI348cikte1
5SsW97QzcPkPw+FLNfHr69+Ohg0y0D4Srfusjvi7h8JF/hgDARuln/uQeSDk
m+SXiTFx4PLP+VJkXpxKPNQsLctEVZZZyrSPZD7s5eonc5jorWptlSDzJ6TP
OEtrKhMyuewDm79QCNu2gntHyMQ5gYnO/f/PK7dQuZezmDA69u6sFfHV2GXv
v4mZMdEetjJfjsy/+Cc9LgnmTLwPKQibTuZjwmLpeg1rJmSvTBYtJn6aaDi3
fM4aJoY6Sm7b/KZwVj35vJ8HE5XDT5SUyTxOO3mDNeLNxI2D1yN/Es6QL0+I
9mci6e3g18fEVy9N6gu7uJuJQ8flA+zIvM8Klf2rH8aEKHHqKQXiA1f7p/o+
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
8ahsh6jpuSac/S94j4zyMRI3u4H9WhP/A6b8I+E=
     "]], LineBox[CompressedData["
1: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

     "]], 
    LineBox[{{8.012145206502371, 8.471076091963718}, {8.014472987081795, 
     8.480407069500824}, {8.018685161463624, 8.497273264174021}, {
     8.019571935017684, 8.50082099303787}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    TagBox[
     InsetBox["X", {0.05, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.499592559330068, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.493987661723263`, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["X", {10.321975511965977`, 0.08}], "InsetString"]},
  Frame->True,
  FrameLabel->{None, None},
  GridLines->NCache[{{{(2 3^Rational[-1, 2]) Pi, 
       Dashing[{Small, Small}]}, {
      Rational[2, 3] Pi + (2 3^Rational[-1, 2]) Pi, 
       Dashing[{Small, Small}]}, {
      Rational[2, 3] Pi + (4 3^Rational[-1, 2]) Pi, 
       Dashing[{Small, Small}]}, {
      Rational[4, 3] Pi + (4 3^Rational[-1, 2]) Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi + (4 3^Rational[-1, 2]) Pi}, {0, 13}}, {{
     0, 13.53838276411646}, {0, 13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.719159278222302*^9, 3.7191594349749727`*^9, 
  3.7191596604471765`*^9, 3.7191597410524316`*^9, 3.7191600146219683`*^9, 
  3.7191607640900145`*^9, 3.719161159915029*^9, 3.719164495196309*^9, 
  3.7191652801161985`*^9, 3.7191671913458347`*^9, 3.719167235831078*^9, 
  3.719249920142062*^9, 3.719249951393591*^9, 3.719250983438299*^9, 
  3.7201958636880074`*^9, 3.7201959178082542`*^9, 3.7201959541721845`*^9, 
  3.720196131305456*^9, 3.72019617350751*^9, 3.7201966237121263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"EE", "[", 
    RowBox[{"x", ",", "Pi"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
vMgp
     "]], LineBox[CompressedData["
1:eJwt2Xk4Vd/XAHBxh3O511xK0qzEV5JSUntXSjJUhhJFlCEqDYYiGRJCIkPI
TKZMhch0DiljIpSEUMiQebrnGn67533/us/nn3PWWmfvtdd99kYzWx1zbi4u
Lu8VXFz/fk+q8x/lbGQQbMUVTmVdbHAg//44Jskg5HgJhXJk2Y3D0avEGcTf
xdoLNcjrnpzX2LKKQWS1rJ3/iszPrprfJcwgamRSKUPIy1f2JgN+BtF019SD
+ycbjDcm6WrxMgg33j23NiB3q4isMKIxiAKM2XQUuSnVPcuKm0FQ7eriryFX
iI4bOSxhxKtter8ikd+4GTM8SYzgb/MIbUBOHKl/GzSLEe9F5Qvp3WwQYnDg
SuwkRgSpyWscR35UmSaUOYoR2W91tX2RHeRX40VDGJHy0KK8GdkAm1nztRcj
3AUcZh162EDd7nLVry6MELwyW9CIrNzdZDfRjhEqqtf/7OxlA4nCrM/MZoyo
slkduoTM2rLORfwzRlirZQve+MUGS0/9dmyvw4in31eQvcjdllaPjr7HiDN8
t0U7f6P8mr8qnMEx4s6FJlWzPpQfONZtXIwRv2tse0aQk8Q2HXDKxYgBbeKi
8AAbWFb9GM9JxIiCd9vOxgyieHefjCmLxQius6Id2kNscCK2UKP+BUYslXnU
UobZYIdjaPJAMEY0S7/rchthg1GpUxckPTEiqs2x5d0YG/x8VsqQdcOIZ3lO
AaHjbNC4JFOw/z5G8KwEGQ4TqL5fMWF9O4ywX39JUH0K1curosrvCop/4Yal
3ByKZ1LePuISRvhFUGX3zKN4jGM3pVzAiMnNMdqH2ahee++7VOhhhIdeevpV
Dhss9u3ZzVbFCHxCOoVcZgPPY2kxFlsxovfG4IgELwkIP6fT6zdiRFKFWW4Y
HwkWmjS42yTQ+0ZyClaxSHDHeNRcXRQjWE+97aQFSWDmuPs/WR6UX+yGiIhV
JABppcUT3XSCn2OplbiFBE5jAdfTO+iEZHfCCTcpErzdc2n95TY68euFvvXl
7SSQq+B+2PKZTuSERYuryJJA4ofayYIyOvEhnMalpEgCkvml7X4UnVgvvP78
mWMk2Kub6LsnnE4s814efapGgtsRdiqjwXRiKqbvSYs6CQa3isWZ+NEJo6HZ
X7baJGg7dMHyiBOdKNR8mD96Dr3/Zv8M3YBOpPe/k+a7RoJbLaRwsAidaOjz
188JJ0GYzinDEAE60Rc5eOHeCxKUNCbGh/LRCZe6PzZqMSSgfdKUD+ehE44S
A+GTiSSI+hCjFT1FIzrmZmY9s0lQ/faIT0ozjXBvkOc8ryKBZITvYnEwjWCo
WV604pBAVeynaulTGrHf6ItuwxIJrobu9i/zoxE2mrWs/dwckBfUIV7+kEYk
nzryXoLBAeq+cvs+3qERN50Z0xJiHGDn/OV2oy6NcJAXubK0mwNqL4r/+S1C
I96m6rUo3uKAU7EqgBSgEcb7otLF7Tmgpds4TIBJIyxbH9dR7nFA5+VEVWUK
jeAbG/zV58YB41dl459OUwnqDwfZH4EcIOZwyFC5lUp88rSmBb7mgCsBZvVP
w6gE1ntjVGiWAxbL0nOU11AJ5aVWzrDvAqhv38nkiFKJbTuwlwcCF0DUbJ5l
sSCV2CIK456GLgAVOVxSBaMSRH+Oq2rcAnCKbvY/OEchDr5ieffkL4BZ5wUr
2EohUkSOt/f1LIDxfdobjwdRCP+ItS+4Di6CX28mgs4wKIQo12ni49Ii2BtP
a3nCx0NY6t541+a/DFQ2fZHzm19BKNUONHbnckEJZ34X/yEu4kl0ruflzBWw
MWqXgUXnMi4199ABxnHDz1a5A3uKF3Fde8m9qlk8MFm6ad/pUg7uFuMoyMmg
QPnIxpu3a9j4y+HTPaLJVLhR/mD7qldz+PevXoJuOTQ4VHSMSns9g3/Zv7ox
OYEO19oUmzr6T+Hzm2vsWLEYXKoVfjl+awJXWrnOK+IxA94BTL2rc6N4b1bh
iRZ9Xli4+xMxkz+ET+5JCA3ewAezhT7miJX249vYfvGeNXxQx1joZPerftxp
XWLrrno+OJt+4VdqZD/+IqXKqrOBD6qoTq1UvtuPJ9+WTNvZwgerHTY4X9jd
j6+U071PdPHB7h9Ox+LT+nC8agJ/NsUHhZJ3tu8I+41XCP8wnl7LhHeUI3gO
2fbia4Su1rpbMmFIyNqOs8a9eInQY523V5kwbzQ6z1arFyf5fMQHbZhwNiHB
PF6mF290uW6pfpMJ7/JlVFH+9OBX1kz0TN9lwgcdZX51l3rw3Z9z388+ZkKf
B79Fzut0444evRHx6UyY2mYxcutwN35l41xzVAYT1igMVvrKd+N/szr2hWUx
Ie/AX/sS/m58RCXQ7eEbJhSPHc0GYT/xD9T+GbUiJtx6WHTfJ+8u/Nkge9ix
hgmVH5mc+GPdgetT7Qpt+9Hz5l1eGmt04Eb15GahP0xocC2Ku1WmA1fWlO/P
GWRCe93vJeUjP3DJ1oprwyNMmLNRd9eLGz9wF73z9ppTTLit7Li49u12PGJG
mFm2zISic/+N5N5rwyWDz228IMaCidaa6jsM2/BS728PqlazoEKXdXKcchv+
TSt0yy5xFjz9IeXSE843XOr4KrVlCRb0C97YauHyDbcqM+jw2sSC3PIry9a4
f8U9k0OHjvzHgmNWC09dfVpwg0PSFTaHWbAla5egtkULflEgSO7dERYsmrYI
lFBtwZ0Txr0oqizo6dYU+G65Gd9/JpcdcpwFxcOTg6YcmnFD6q72KA0WVK06
HWxp/gW/6+qz4YQ+C0qzvET2Hv2CLwquXml3lgX5dYuDKRu/4JBzYTT6HAt+
79oaEt/RhK9v0dIaPs+CN2bJkB+6TTiP+K+ca8YsGL71ZdipI4347dHe1wxL
FnSxaV8luaERVwz3xUWsWPCD2Xq575zPeFyh3qu1V1nQ0GlaTuTOZzw0vHLt
VhsWfJQWI+9t2oBfO3ZVX9KWBdvpU7ttD9XjaXK/29IcWPBh5QtlMF+Fa9kP
5WzyZME/DfuDzQur8Miu9oZ2ZO3v34b97lbhow+v04MeoXxHRaLb5j/id3W8
qua8WDBHzH/5FvsDHuW8wiXrMQt2Wt+vTCLf41La875EAAsesRdfV1f0Hu8w
alAyfMqCqa6F9hNO7/FjjgRnAtkuZFrqEKcCj2yUrV4bxIK8Zdcef+OU45FF
edcNglE9NhVFiZI43k5QKuyfs+B+pVktUyccd1deqhlHpmgqLGeSZXjmOdn+
q+Es+MI+3VSNU4pfLvcwPBvBgtXVkVJOC8W4zlS53OoXLBjc+fXbx/vFuFcB
teUhsvGk8GORxSK844Sa/1/kmbV+wxmL7/B3EYp7iqNYcJOtc87PpQJ8xn3i
Cohhwb8PC0xlXQvwuVKDmBfIheFTwveW3+JiG3IGZ5BPVdjYC3O9xVc35+Un
xbLg/ZUXlI+tyMP/NnSvH45jQbUd4cNB7rl4tN/TPqV4FhQGLVFdK3LxOoOT
JR7IaVaay47cb3B+zwdRwgks+LVYpTKdJwf3vHVo69pEFpS4Z9Y1yczGbWgn
Dp9D9nfSUAwUzsKf5Q65BSHbuKzrrl2XgTudyrbmSkLf+wFtr9XmV3g1kSG6
B/mk25gfVToddzxF9lgi73hYrgQVU3Eb16P9VciRnulPOven4HWe69fNIPN6
Bf9yAsn4oi3TccNLFhzyMX+afzIJl7rXHXwL2dBXu0/ndCLe+TPj7HPkWj+l
A+P6CbhfqZ5KMXJaAGNgh2kc/ksGu7mIrLCh717gpxh8eHixdG0yyn9zwda6
tii81z1Rbh/y5NbHTdTfkfj8k7FyHeSm7UYucCwcj9b67miDnCPzn7QzGYan
vjA47YEcKLfckk8NxTvHzDWeI9/c1eQ2LhiMe5qQVunIpxUTZWUkgnDuaIG0
YmSTG0M5ddoBuPp8LF8dsqRdAHbY3BcPMk4ObEPuuqdw6a2zF55oKLnvN3K0
69cCmWceuI8ohXsUuZB3RvLIGRe86Yze6Ayy0qqDDbIP7PEoe+YiB9nmKC9H
7qwN7uG2Q44rhQUb8xRzsUvn8EDBTHdu5Ba7jEMKrwG4ZBo898/RjscGT0dd
BqRG59MVyKdzDD8cjL8F5NX8Ti79yz9JeJWu3T2wYBGzjY2cpmm+Oy/RDUhc
XL1tEnnoePmPQ088QdVdzolB5B2H13nWOPgA7+STT7r+xXPgnqzeJX8QeZMx
3YT8NdLaemxLIIhZOuDyHnn2eXhZ3ppnIHDlwPZc5FWhH4Wd+ENAqZjgXNy/
/J5NWwCeMLCZWjrgj2zwdFMxZf45+OA0TTog3/U/LVA7EgHEc0vlTf7Vxyuj
QO9rNFhptZWyA7ntYTufeF0syLNpjWci34eUnLGfcWAlVDb7i9ZD9EEFSn5L
ApCS1tRIQ5ZTUc8S+5wIXDMF7DyRy5QvGTjVJAHvnjz8InKXUkAGKEsGl2a+
4bzIN/a+PJtQmAKMZW7ZdaH1uqRYwkXNTQXSpZs0c5AlFYb0alPSQYQh01wb
2UT2+KJeUBawd6k5ZIf2i0p4csBsXDY4L686uRuZ6cEjqGmQA1yTJO0n0P4b
/Hs5/q/la0ALMRw0R074sKVS3jsXTNKmAxTRfg3ktPivEMgDvjrXiF60vx/s
eqT/JSwPRBDSFQHIRtF9/XeS84F34uzebtQPRO2TGQUfCsCe+IhBK9QvuF+d
/eKtVQhOHJ6NoyKPd9NeGLQWgoSJN9Jx0Sz4SdNSlvz9DkRWDWY3oH7ktWX7
qYOUEpD+oDpYCPWrhUG9WtONBHD+r+2nHOqHU5RMuZPmBIhadb48NQytj/XU
YIU0Apil8DtuQG7Tzzfi2VUOMtwHTRihLJhfvvJvEqwAdZlq/5U/Q/WM+Crw
x6QSXDEO+1P9hAXN8+TsGhMrgahR/LYNyBc+e7UVDlSCRwceHbL3Z0ENqlL8
Y9sPYCywY3q1Hwtuv/VcQcb1I7g9KOZ33IcFe04Y6N+IqQbvzN9HKnuw4KG+
+6afOquB9bWX4i7uqN+4x1+XXVcD1Hd6lZa6saBO0dCjoRc14OEfcH2/KwtW
yLi8tYioBdK64c7i91H9+RPETELqQe2VzicP7VE/GZoZ2XasEQy2KTlMWbDg
pX3YnW9XGsH035x20pwFA7zE2V6ejSD8t7gNF/LQJkDtf98IJHQpQrTL6HlG
PuuSjjQBw2pJJw46b0U+iWtvgF/A9rP5vE/ReT2dDbJXH2gBUkcv+xqh879e
5oDwzYstAFPN0BY4iuaRlL32Va4twLRgJ0mg+UEn9r8DDpUtwOJoMyYJWPB1
wNqqZq1WIPlYThjfj+p7fa4r4NJXoG1jrBotx4IDO7L5qV5twMedID6tQus9
Of3WhVRk3iOWYCULhm1KbsmtbQM7V0RSs0VY8Lh4dKSZwHcwnY7J+giyYBLD
T4oI/w7OBsTt3MSL8v9jccj5VTtIKPYOmllgwvaXkjcmGjvAFmZO+7oeJnxL
y9BJnewAt/k6BQx+MmGw5X4lE9FOkKHWYxrYyYSa0npcn851gmFqnTHnOxOW
ZTx+ltrVCa5MltQXfWHC+NzptyYjXcCoVHP553s0n17qW+5/2A3IypO06iQm
dL5RfEI/theUGciLKpgy4REwc4U/uxeI9lz4IGmC5kvBne5VZb3gOyNihnGR
CcNfJ7zb39ULDu6wa/1hgOKbfrxDct0v4PhdNuH6aSacdDJgDkT+Ajt7mCPq
gAmtvWc+3w37DdJmu+QG0fxsELfzXNSTfqDWdO1GbyMftPCu4f7ZOAQa+qUb
mtfywfeeMjL+daNgD+QJvmzMC42F+ipEz08A6TdWygIhDDilXHWox2EKuB/b
L12UisFsWxbb7OYMsL0qOLhE0CHFtd/dLGQOiHGfzvEspkH3iM3qYiFscNPI
Q/IRQYUaFFfpyscc0BPVHlv2kQKz1K+3jaYtAt6YJkb3Wx64LxL/0PByGUQN
b3l0v5gbZpl9gav6uSBqyGYxr1dAiw16MoenV0B96lJpUQEXfPOLnn98nBtS
Yq51SxYtg5OiVCm/FRQ4n+5grcm7BDY3HUvwplIgRSM1zYyyBBaeeEl6Miiw
9o7tkjP6P5ZJx8RchCiQvuf2VMHkIhDk8GK2GymQ20jzrP6PRdDaIzikc5gC
R8WLDbZnLoJL2RJZ4u4UeGK84L8juovA4aTi3nQuKrSJD8vrSFsAY0dTEp5R
qND69wB1IGkBWB0UF3DGqFA+SmN6OnYBGMlz/dEQpEIK8+6btWELAK6qj/i7
ngr1C4M5IR4LgK/38qI8oMLRkzvZ+y4sgLh7wZUFLlRY52qqbSC8ANbcoe2K
c6fCJZGW7T9YC+DZtXvRPo+osFxhbtyUsQAemZg4nH9ChUECKnrOXAvA+pjM
dk4UFc0lghmdoxygKPTe71AJeh9WXG1WzwE1qZM6H0gqPKVYX+nqy0GjLXcx
9zIVJq0mSuS8OEBqQHgz5KFBIlEmp9edAzy27p4q4qPBR+G3Qs+j/+MqCXeC
cyRoMFzHL/OhFQfkvJhufnGIBqlU/Yw6NQ4ID5jVu+1Bg3dIpQOAlwM+ZtJK
s71osHkh4nQwjQNm6ldt/etLg7r5NaUj3Bygw6c0YxlMg9eYbunZHBIwfRxD
LybRYHaywhqHvyRwc59vPfGRBtfHjMTTv5DAyo48u56XDms79tw9FUuCTCNv
aVF+OvQRFPH0iiLB5BHRBUyYDuM/8j6oiCCBs5Bc/OQaOjTiGz6qHkKCgCzT
4Q/SdLhf5rDms8ckyP9T7XpNnQ5Z+TUjIvYkID/r65hq0SFH/PG7yNskOFTQ
u+XsGTps25QSJHWTBNWPFmrAeTocKx221rIhQccmeVGRq+h5NKuJb6Yk4L74
PPWdDx3+tH1d0XOKBGqqW5yz/Omw+lM9f5EWCfxlXmslBtJhHwxze65BgpVk
7aR/OB0OtRr8MFUjwfbnSyqXUunw8dPh54qABNpN5k20ajpUd2y1a95JguDC
yUROHR1+EzL8tPQfCdpiXR3GP9NhRFms2U5ZEpjeiFjb/o0OL5sVn4jbTgI7
vk/mmQN0aMLju618IwleHFMkdekYrPz84DjXShKkZ557XsaHwdsepum6IiQo
XOmsKC2IQe6e4MxMIRJ87Su/sbQag4MDXOH2/CQQ9Dr1K3UHBiUELKX0MRKs
H73tJrITg7kmhlmdNBLInQ1b92A3Bt3+KvVco5JAQ6rznK4KBj8P8GvFcpPA
66N1/aIWBgvBVVO9RTYIlQu4aqWDoXNd1Fx4gQ2Swl7Tms9ikL+7et03kg3K
LeZhqgkGj870vbGbZ4MFmle+zi0McqR7fLmm2YDPNk2n1B6DNvP9+tOTbCD+
rX5smxMGLx570jU6wQZKKSI7Fj0wmFAXJDs/xga31eJjUkIwaOnKbjEaYQP3
7MoDwhEYPPMmM/nRMBsEiv1pux+NwTht5sG3Q2yQOSAnopOMwSfzrUUyg2xQ
ckonpyQdg00VBYk3/7BBbYG91rZsDKZY79IrGWCDP94l3gsFGJQqD+a36meD
ubGfWyxLMBgiR6yp7mMDmgFPRROBQeVJvjE55M3bTy4k16B8XY+Qgr/ZQCHw
eoRQAwbtiw7u8v/FBnA+cO/9LxiMlrmnyI9sXP3t5pkfGLxZ7Bsv1csG1+U5
rJKfGOwqOcgs7WGD++GSr6R+Y1Dh7ZCqIbIv15ETQX8wuPB3TGOpmw0irMz7
OCMYHJZ/uTENObXRx8NiAoMjn40+GiK/3ZexvmkGfd9YY2UR5A9xn0sOkBhc
nJ5w+fKTDVqwqfPJSyieVN2gcORfN1fNCfIw4CehYjtz5Mm2/SHOdAZcpJ3f
vh+Z6/DFXf18DGjTeS5DBFkgza3htCADHrP6wTXTxQaSQkk2xaIM+G6OS6rz
3/3AvSpMag0DHj7/c239v/uDnqGXgesY8OJXr95/9wf/f78A+fb83/3C/wB+
T8ge
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwt2Xc0V/8bAHDxGZfKjtKHT7SsVAgh991QEZGEVIiMBiIjKyojM3vLTCij
srLuzdYyEhKSIqmvlRDi9zjn95fzOs7nue/73Pd6ziNqbq9nycrCwhK3hoVl
9a+mBufhRVF2MrYlX2XjLSZSKfGcxETYSYsto4Krlhb9mSIgxE76xic8EQQL
h549sU2Andx/oPavAJjzb9P8Xl520lzUfGUDeOWSQjbOyU4GmLpV84Mn27JO
a3Owkw82YfJ84EFVvjXnaOzkZjdOCx5we87tAhtWiFcYoskFruWfPOeyjJG3
Zu6MrQM/8zFh913ASNXAqUMc4Mxfb0ojZjFye0nPaTo42kjlUuo0RoY0KQlT
wH71uTz54xh5RJA3lQXssmcjUTGGkSSr5cclLyYywv5s6hrCyEAtN9cZsIaT
RdPXAYx0DlX5NAFWHmx3murFSIPdbnNjYEZ5Qeu69xgZVWBzdhC8fpuwl1Ar
RlIfb07tBS/fD5YUf42RkUe1UjrBg9Y2fofrMLL8l3hdE7j9fZfsKQIjM/S6
xkhwLa4+aFKJkT84Ka9fgLMExVTcn2NkbfTX4jywddOnyaJMjPxY3yITuDpe
Oc0HNakYORkXLuQDPp5afuJNEkZmJw7UuIAlXWOyv0dh5HEp/r0W4PEdOudF
fDHSF2OrUgJ/jqxml/bBSPtnW67tArctS5Xt98TIdxrvOkXBz7ow3jNOkN/d
A63sYBf/2qbgSxgpT/tzrcsTxjO9xznBDCM1BUq/NIONTFLFHp3HyMRSHq5K
sLKCp1et/ur3eRD1APxveJ/c3yMYKXli/xFzsK967gOr7Rg51TZ0pM+Dichg
d12mKEY6nBStbgYvtZ9g7WFgpK1o7Jdi8A2TcUsNfoysKJPeHQI2d5XbJc0G
+fA9068AxnOrK6cG6WTE7rkAT3cmcp8Is83ro5O3F3rrLcCl+8yYFj100jhD
tEATLFPLerezlU6KCH/zEwQzPh3TLKuhkx8E4zXz3ZhoYV1Hj2cynTxY/lSq
5SYTKZzODNoXTycr7uvteQx2THBSHY+ik3pmoV9CwD+2C6aZBtNJPvFBDR1w
j9p560PudDLxkLVsmys8//rIH7oRnZzc7W9V68JEDp0LvFF8dNJHJdTNxomJ
YvV0jKO56ORvCaGWQ+Cqtsz0mLV0MrLoWhsDTHurtSeejU5uOXaD1naDiZIb
Hmin/KaRxrle3HLg5tJD9x69p5F5ncZpPx2YSCQh6F9lFI0UWuvfusOeiY4I
fj5SfZ9GfjH23jJvx0SXY+RCaoJpZBhnp0QLuDiiT+jlXRq5LzDL8gpYI0hG
qfEGjTSbd76Ta8tETh4djm2naWR1bdwZoWtM9OqC0Og3PhqZseIe2GjDRDqp
qvgCF43sVPTBwsGdgyaxXOtopKDt2cNnwf0WmUeUKTTSzif115g1rP/L0un3
Z6ik+ZAo51qwoIuasfIHKtnnYhCpZslEl8LM39yPpcL87X3teBHy2+q79WEk
lQz7Zt8uB7bjeeReEUYlD13OjpoxYyLX6J/iw/5U8mgwz0lncFCik5+yK5Xc
u5CZdMOUiYqy/dWGDamkRfJ0qsUFmI81eUXKm6hkTnWhD89ZJnrTu3vdIj+V
PJ2gs6neCPI7W2xdyU0lo96TFi5gVRlCRBWjkl3ciLPXEOZXyvuQA3MUMnuh
rSLFgIlmPZZs0AcKyY9f8BDQh/dTOil6NIJC2g2FDb89yURfn01FnGKnwPde
GDQ4DPFpC3eMqRSSU0m9YukQExkYszpZrKGQl+aWT2WAm9fwGTj/ZSN5En9U
/TrIRAW68kIJP9jI8rstt28hJro57pIx2MJGOk4ebo85wETrJJee2QexkbWJ
KR+iFGG+ptM6Q9eykRtvfKS3ScL4xTpkgufXkIX5zIiOtTDfPTi9QsZYyHTJ
kIh9P0RQW/JeI6v+FcLxkkW4W4MIarV5/n1f5T+ii8fXxChJBGVLtCvpVi8S
VwVbxJGDCNqT2HbdseUvIa1/9nmXuggS3XOgV+DxHHEz+eOTUX4RNFahTqU9
/UNo538w2TkijDZfrbzoGvKb2Cvn3s71XBgtv+J9OOkwRTyNGjU1vy2MbuDr
9C/PjROu0i8sTfSFUbncW/JPyRghGMB/i75DGBXyNBYJVo8QBamzOluXGUjP
hEdz8PEI8Vnj8Ubvfww0m3f+a07iCLHtwM+9n5YYSPXI7w3KN0cIByV9w+hF
Bmp22eJxXm6EEBiqdOH4y0CDn9zV03OHCSfCUIc2w0A82bt7JWO/EWprK9LV
xhjohnICm5r9EDFm3elY181A0dGb+wxMhojsMHN7JXDxeEqxvfYQ4XJ26k1+
Fzw/I8MyXWqICNuk9CThAwPdXPukiTL6hQiKdGVzec9At/pqgl+bfSGULnTq
H2xloHu3vvGd1RskaGErXtuaGCinx+qXw8FBwsAwd2d2IwO1yP6oD9ozSIw1
G6mIgzm+/+dcxTlIFKz7kr6rgYGEUscL8djPxK1tyjcO1DHQ9oP8Sm8DBggx
xwILB4KBlP1Mj49e6SN6D2QYSZdDvHmvhyYn+ohEtslTdWUMZHQtmfWDVB8h
4f65wBjsfPpj1ctfn4in6S7RQaUMVCR6em+S3SdCUOoI/0QxA+2sOSp00rGX
oF/t5nv9lIH453b9eu7WQ2yMn3Zpe8xAmVe0NCSNe4jxlpVjTmDZgSvZaco9
xI7GlTsbwboNj8xCF7uJJw/jFM3zGCg4SvSDlVc3kbfHOG0hh4FY92yo2XS7
i6iyl03Asxlowmbpvve9TiL5Ot16czoDdRbs5T5p1UlQNjQqNKYxUMWMVTjj
SCcx7FAa6AD29WkPf7HynrivxlrRkgr5ic+O+O3ynohl5db0ecBAR5p0o6wt
OwiROasztGQGkljvz6dwuIPgXKq+/iKJgThPV0ZRRDuIK4+8eG3BHwe2R6f3
tRMhYQs/PiQykN3sQvSn0+2ErorceH4CA8Vvfxirc6iN2KX53ck1joG8rvYK
iGxpIzLiNqyXAzeYM2U+LrYS5Jc4mYlYBjJ2n5Hhu9FKfLc9znkZ7Jf7YE/A
xXeEbZ6gukUMA/XSf8vZq70hJmb1ShyiGOhufZIyPt9E+JlsLZ27z0Cj7/ZH
WZY3Ecel7bc1g09+7P4ZfLOJCPAs5EwAC43zpfTMNxJNuLuhKrhIMGTF4W8D
UZouWn0vjIH6r3jWZy3UEdJXt0wohTLQIWch4dcVdcQDo0FxHnCOd7nzlDv4
787BHyEM5BQ9s0NtsZb4HpfblAzmqLkW2L34kuiLHPbEwHZiFcn8CwRhw9se
ORfEQPsVZ7UvuhPE+VjJwm4wRUt2JX+hhuj3NtIsByc55108tlhN7O1y/+cO
bm5O3OG+VEmkfX5lRANH9Xd1N3pWEk8/VdiOBTKQyTRvIN+/CiLclYO1Ffxn
c/DPJ/9eEAMVWG4CWMzeo+jzchmReEt2Wh78392yi9LeZYRecAebMLg8/jev
20op4c55IoYK1qm96szLUkpomS8p9txjIM8N55XV1xQT08ZtXnfBxyTjf0bc
fk54H8i+bw/mxTuTB9Y8J952VYieB+faaK24sj4jqom3jQrgrkrV+jy2IiJr
tnnDdAADMdzMB6bXFRI/joS5DYFD3E/Ih/MWEHEJw0bvwVe9hAdfCT8hau2v
BZWCe2/RFGy2PibsdJ705YA1fSaCqRJ5RPzUg7wksOTdl4pIPofYolTx4g44
0TcvtH//I8KXY2rBBczhH/XVHc8mzBdny66Cx+5Z3i/RzCK4IgIfGoCNg04O
6+lmEkqyYl1a4FfBiiqTZzKIhrH0O4fBuWHs3yUvphG1MVd1ZMGyW4bdwt8+
IJpPEfaSYN6tZdtf9yQTkeXr120FT28PbKd+SyTml423McDt4ue80EQ8sZHv
cfkGcJHULgmPhViiMnlNCxc4XGals4QaQ3D8u3iGA3x9b7vPJHcUkXWy9QIV
rCufKS3FiCDCLbWGWMCmdmNFr0+GEeKtn4aW/BlIxCkMO2gZRKh3eJv+BQ+4
yZqVevgT3PbKRrPgFO+uMqnIOwSL6fq3v8HlHH9EDp3yImb5F6qnwIoCB95J
33ImFKvXSE2Crx7mWJQxuEqIHNjOPwFuK5Z/jpkZEvFylm7j4E6nJ2qyT3H8
2fxL41WnuKr/0E22wEdSVMpXrVtk3HAg3QHHxtsjVn/fnsUrcNrJDRex9f2+
Gj9Xy1KuONMHv2Wk92IaPHb05Se1UF98OVuZ/gcseVDYt8XlHh6JqbbPrY5H
xU1a3ywEzxjRF1wEdyVeuTKxLRwfsrj7cRk8GxdfU7wpEjc53yDIBvkRiGnk
deeMxlMtN3bQwYqRM1Y4Wyx+6Z0bth5sdF+skjIfh69JHangBd8M0eV69SsB
50g492MjuNz/SZl+Vwp+o1CnYge4527vWqHXqbjZeON5GbAnohRNfE7DxZIV
PBTAKQdkKSWdGTh255fUcbCMqkaBYGsmLpIrXnMKXKNsZuTekoUzhDXenAMP
KIY9wWuy8fg65nkHsJ3CQ4OM8ke437OWfk/wsnwVC/V5Ds5qjX+6BxaRHdN/
9SgPvxXjqJGx+v2lj/7TjyjAr33dOd0LVo3PDptNK8SDxRezfoLX3WHj1jIq
wjffVvixBP7xn0X6f9ZPcbOh0u2isB4zGrbV7wl4jjsG3LW9Dg5f7AxZw1WM
L+3C8/zAt/b6nemILcabOZZck8DnUoZHbmSX4Ae61RqbwfzO2exlDWW4waf9
0pKwX7A+NugI0C7Hf83oTRwGTw7Skow+lOMu18cPmYDfallLL3x7gX/ksUqK
BvtvE9c5QKnCO0fPcGGwny390H91UZTENTmmp9iDGeg3JV9G05LE572liqXB
Y0xqlGwuiWfXZlB1wT1nSs6x7X2J72v6dSYeXPJyw39ZUBUaamrk7l7dbxO6
uEZN63Gta68pbrBfWxbLOLVl1uMmfmKFWeDzrf495d/r8S+nBb63gU9QFdMD
7RtwlWumK5Kw/4s7xMlKeTfixX5y74bBX44bnbF70IxTudNbnMMZSG3Y8+Lb
/mb8y8X+F9ngxNvpttLCLbi/ZcnWHrBexZjfWFILnsPebKEawUC1Ul6lVgmv
8Fxtg0iOSMg/Z4agafQbvJupdL8azi/ZsT+/dqq34bG3JKS94Dw0U8JudF9q
w01ECvmrwWH+Qn/9fdvwa1qdjv/AY2I4daSuDU9tt73vHQ/xzt0TzjrUjteI
flMPhPOW763QyS2oA69o1g94BufzTCFeuFGlE7e6bKF1Ds7/N1IqvNcvdOIh
nc3yReDMRwrOTd6d+MKFiHQq3B/0UnepuNR34u6lDvRn4Kdhm5vea3/Aiy9f
XubOhPzazg2EmXXhYsVMm+8PGei7ZCEn1b8H1x2Xjp6B+0tNdp7D+ZwefMX2
aOLZJwwUK5bd+fxVD27V7CBMgI8KpSSac33EA4+yJQbnM1AWe/AOMv4jfplP
wlKyEN5/1ErN43Evzrngvdb7Gez/D0Xsptr68JkLbG/vvGCgUtoTvZzpPvxZ
+8vuGXCU9X5FU/5+HEVsOm1dwUBaEvosbw378WyvsETtShjPk8DInIF+/IGh
oSWzmoHSn8+Umv4awNO4thd1k3A/NRteGbk7iBs1e6KEZgbysKs8fiZ1CG9v
saSe+gj7Rdpuw+TQEbzPOGiXKdyXrQJaWD+3jeFfVJlqYjuFUZ2vlFTI63F8
wS1ti6OeMDLhGa7lPzuFv3mmcU3EWxj9Vm5S++LyG/fK+rCO8yncz+3X/zW/
/gfv6hSt2joojCjeI7fNo+dwhRG6cievCLqdsFVDMPovvnD/z+VNB0XQCYq3
RH3gIm4dlabSf00EFWjY9ozn/sNtziTX/kkQQUqJRMO7hyu4/k6R/YYv4f/m
HUhghAW5Zl5+kjgqgqy26EsdnFmD5o6XD2tDPfPsK73k6CQr6nk+HDa5E+rV
nteNwTOs6Pa7GIdL4kyk+PZ+T9s8KzqPLa7tAVeVCi4Zr2FDS1oZ1jUSTNQQ
uPOwPS8bKtWNKQ+Qgvp997H2OHk2NORU/2zdbiZa9vD/b/QmG6pV6Ij/vI+J
NPmpO4LXUJCQ26m+h1CvbW1XzwigUlDASFQ1C9R3S6H+Ir7sFLQxO/z8OXA+
HRP04qEg6deh77mOMBH3IgdmL0pBVxIuZzmrM9GHL9xjegcpKPe0SbP8cSYy
K2QUCN2G+Pk/23y0mWj/tQuSgn4UdEdQ7sx7MK/Eg2y+QApyj/0Vsx3qy7oM
Zuq6CAo6oH5fqwW8I1YsfDmNgnQjA0LX6zLRT09xxyGSgvR62AwC9ZjIRVNe
IY+Fiv6mc73Uhnp24vCjjEgKFb3S69aOBdscEOLywKgomTMpfgB8bg/L6Alu
Kmp8NGttB/UwEniT8B+Tilj3bfkvCOrntUMW//bgVLTuoVVQ2TkmSnOLqi/z
oiLtzpefBqD+3nSDtjftNhVFBezcxIT6PPKaW8o9PypSxRL4TMF+pqYuZ0Op
iDfsLj4AvqIuJb6YTEXdCiWOH6Hel+epC1aroiLZdwmozoKJWnKm9RoWqEjj
3V2tS9ZMNN/EWsm6QkV1j1Q/poF3fOfdithoKM5ij0A/+M52ud8Va2kogC0v
Td8G6uGMG1FFDBpSe887h19moqKkmfdJajQk1KOeSb/KRPFhs/qOd2ionqOu
ydiOiRrzadWF/jTUNv9ZOxT8543A9v+CaKjc3eguAdZbq/jHOoqGqpiHl8Ts
oR6/5xpzIYuGbgad2j4C9rk9/+F4Iw0xEjh0LjhAfp0WDJgcdDR9qauH0wnm
x7kACX5OOsJGpkPlwdOH+JcwXjpaqFJeOgv24JFJn95ERyInVClZ4LCCiz8b
JOhI/UXcS3lnJioZbfa+pkFHfhq648ddmGih9YzeRW06ko47KX8FrFY2tM3g
FB2pHleRCwY3+y214GfpKPZx+7k34D6xPfx8l+no+voIwxOuTMR6IS7nxT06
ksyymVW5yUTHjmzzKAiB8YUUtxiBQ6SeameG05FdzYszzuANC6+mQ+Lp6Oq7
r3H5YPG4ZVWzHDo612deL+TGRCfbLdtpzeAj9yq/g6PKpzMXX8P7EBybWNxh
vaV6u0y20tGMwqbdG8EX7RI293bTUcHHVt9jYKe1by3zv9ORZd2Frgxwkrr8
wmk6hoKVv3FpeTBRXr5hXM1aDFEMnyJzcPkGD3kJbgztlFXfeBPcNfzSbnkj
hqZiSiozwNz+Ol9zJDHE23jl/W8wc9zRh283ht4qMZXpnkwkYxArfEsOQ713
fI8JgU/s6Dc8rYohyRBDAxzs33jlzT9tDP1I+HTYDxwjE3bZRg9D4okdn2PA
WbFPae8NMLTN31osG/zSah7lmGLIPcw8qQG8RPMv0XPAkNJvi/MsXrB+7HP1
qp0xpBrJvYsTLNT9ZmKnO4xX6kTWZrDiIz7Jf3cwNKFk4b8P7Hgs/cGjaAxx
lUxstATfLqxX4U3A0PGOPuHr4HDB0R7PFIg3rdniDs7/LsOnl40h/9Qsvvvg
Kh29oqo8DN3xCn0WD35V5qy9sxBDbCtTc+ng0YCqgKUyDIVxS7g8B89NfN5m
XYWheZ2/BZVgmhFbbTuJoZEIFFYH3iquuZTdgqHC5d2oAywbbpvA8w5DtYpd
vB/BaD5cwbMDQyzhE8GfwSbN3ddPfcKQ9IGbDj/BtnsW11d9xpDyynD/JNgz
XuTxjm8YKqqom/wDDmI5dDxiFEPjddx5C+AEG8vhxV8YWnJ/w74Czmm7d8dq
Cp53YpaL7RYTlSo9Ybb/wdB0fmgVDdyQ1lqlsoChw9sjuVb7BZ3Y77PZyxiS
PcjGvh789brAHDcbO5pNHsxZ7TdM9+yP9qCzo5rPEhOr/QiWgxf2jqxlR/5V
A59W+xVcuT7vdLnZ0f7pZbvV/oYIT9bVSn525HsiKGe1/yHt1oTt2ATxHvjc
W+2PqHwZexguzI5+vPvCudo/+X9/BUX/v7/yP9jYdBM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {0, 13}}, {{-3.141592653589793, 3.141592653589793}, {0, 
     13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7221863570463486`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 110, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[692, 25, 147, 1, 86, "Section"],
Cell[842, 28, 26, 0, 31, "Input"],
Cell[871, 30, 2098, 45, 192, "Input"],
Cell[2972, 77, 957, 25, 31, "Input"],
Cell[3932, 104, 1048, 29, 72, "Input"],
Cell[CellGroupData[{
Cell[5005, 137, 1649, 45, 92, "Input"],
Cell[6657, 184, 239518, 3942, 212, 186734, 3075, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246224, 4132, 109, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[246358, 4137, 141, 3, 39, "Subsubsection"],
Cell[246502, 4142, 1775, 55, 92, "Input"],
Cell[248280, 4199, 1145, 39, 92, "Input"],
Cell[CellGroupData[{
Cell[249450, 4242, 269, 7, 31, "Input"],
Cell[249722, 4251, 125, 3, 31, "Output"]
}, Open  ]],
Cell[249862, 4257, 619, 17, 52, "Input"],
Cell[250484, 4276, 758, 20, 31, "Input"],
Cell[251245, 4298, 212, 5, 52, "Input"],
Cell[251460, 4305, 798, 22, 58, "Input"],
Cell[252261, 4329, 2541, 69, 160, "Input"],
Cell[254805, 4400, 481, 14, 31, "Input"],
Cell[255289, 4416, 1599, 42, 31, "Input"],
Cell[256891, 4460, 1381, 36, 52, "Input"],
Cell[CellGroupData[{
Cell[258297, 4500, 12687, 332, 175, "Input"],
Cell[270987, 4834, 12077, 330, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283101, 5169, 650, 18, 31, "Input"],
Cell[283754, 5189, 21777, 522, 100, "Output"]
}, Open  ]],
Cell[305546, 5714, 147, 2, 31, "Input"],
Cell[305696, 5718, 1943, 50, 76, "Input"],
Cell[307642, 5770, 782, 22, 33, "Input"],
Cell[308427, 5794, 844, 25, 33, "Input"],
Cell[CellGroupData[{
Cell[309296, 5823, 683, 16, 31, "Input"],
Cell[309982, 5841, 23394, 624, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333413, 6470, 279, 6, 31, "Input"],
Cell[333695, 6478, 1179, 28, 140, "Output"]
}, Open  ]],
Cell[334889, 6509, 34379, 859, 212, "Input"],
Cell[369271, 7370, 467, 11, 31, "Input"],
Cell[369741, 7383, 405, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[370171, 7397, 10342, 301, 192, "Input"],
Cell[380516, 7700, 95288, 1592, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475841, 9297, 454, 15, 31, "Input"],
Cell[476298, 9314, 32897, 549, 285, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
