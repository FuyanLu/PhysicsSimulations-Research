(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    369598,       7888]
NotebookOptionsPosition[    366542,       7791]
NotebookOutlinePosition[    366885,       7806]
CellTagsIndexPosition[    366842,       7803]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.718468907989884*^9, 3.71846892002048*^9}}],

Cell[CellGroupData[{

Cell["\<\
The classical ground state of zigzag phase for alpha-RuCl3\
\>", "Section",
 CellChangeTimes->{{3.7184690463734055`*^9, 3.7184691134872336`*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pKxy", "=", 
   RowBox[{"-", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pKz", "=", 
   RowBox[{"\[Minus]", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]xy", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]z", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Theta]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}], " ", 
       RowBox[{"p\[CapitalGamma]xy", "/", 
        RowBox[{"(", 
         RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
      "]"}], "/", "2"}], "+", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Phi]", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pJ", "=", "1.5"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7184691584073267`*^9, 3.718469258030373*^9}, {
   3.7184695899519725`*^9, 3.718469618540905*^9}, {3.7184696528151197`*^9, 
   3.7184696730717106`*^9}, {3.7191546113337407`*^9, 
   3.7191546182649717`*^9}, {3.7191546762775073`*^9, 
   3.7191547193248825`*^9}, {3.719160719698928*^9, 3.7191607410597105`*^9}, {
   3.7191611031210318`*^9, 3.719161137950824*^9}, {3.7191644283817387`*^9, 
   3.7191644488077307`*^9}, {3.719165232406958*^9, 3.719165248924226*^9}, {
   3.7191668367508135`*^9, 3.719166851010581*^9}, {3.719238494026471*^9, 
   3.719238505979059*^9}, {3.7192388187457867`*^9, 3.71923882556927*^9}, 
   3.719240919754949*^9, {3.719249773649143*^9, 3.7192498108255973`*^9}, {
   3.7192509180108213`*^9, 3.7192509388796463`*^9}, {3.7201957889000826`*^9, 
   3.720195804047458*^9}, 3.720195835541623*^9, {3.7201958884707603`*^9, 
   3.720195894040225*^9}, {3.7201959324401255`*^9, 3.7201959349547577`*^9}, {
   3.720196149263216*^9, 3.720196151078658*^9}, {3.720196601779607*^9, 
   3.720196602620137*^9}, {3.7221810868620634`*^9, 3.72218109003495*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pKxy", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
   RowBox[{"pKz", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
   RowBox[{"p\[CapitalGamma]xy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ")"}]}], "-", 
   RowBox[{"p\[CapitalGamma]z", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7184691238978567`*^9, 3.718469156353512*^9}, {
   3.7184693153927474`*^9, 3.7184694834033313`*^9}, 3.7184696822956715`*^9, {
   3.719154627968582*^9, 3.719154642304252*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]1", "=", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Sqrt", "[", "2", "]"}], " ", 
        RowBox[{"p\[CapitalGamma]xy", "/", 
         RowBox[{"(", 
          RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
       "]"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7184696971819024`*^9, 3.7184698150533776`*^9}, {
  3.719154647542511*^9, 3.7191546745578895`*^9}, {3.719154739847042*^9, 
  3.7191547523615503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]1", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]2", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]2", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot", ",", "p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7184698200367126`*^9, 3.7184698622465916`*^9}, {
  3.718469922676993*^9, 3.718470028638232*^9}, {3.718470243415079*^9, 
  3.718470273416379*^9}, {3.718470373692477*^9, 3.718470382470674*^9}, {
  3.7184704335938005`*^9, 3.718470562412529*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
84lQI+a3sMd+odJHv6L7BymO9usdOzaydtBP2Ced1p8WOVuKw95u18Bi1n/w
gOfWTQ8zEe47wPW7fbnB4g/6iXa8S3WcWD9R3wC+7Jf/debnaF+8PrS4ThZ9
E9h+DRz1lp0T1xxdc9Oa9insXyt/2hb2UbMgHHWSt23tc/ermpMfYn8JLY0y
WsnHbfgJnbutDfjF9nesU+jDJffUZrC8DzjsL+qG3Y1q1KR5xH7klu3vsXyQ
Pq0X4AnLJtyY5KlFOHSLVeCz9rmHtKXrSILHv/3eMzhKqgOBe16/v/0Qr5+x
v4jjpSF34WhI+qQ8Q1rXwNfEPn5unWJJ+ybaOftljhfL15QUne8PSv5G9qVx
B3yZHkB8A36n6czWsDumFMeAtwnZ0WWUlinFbeBu9zwG3fiqTeeVqLc88Kxv
we6roH6COvaH4tMR7L1m1KNgv9p8vzWry6G+gTpzg+O0f+y9JPRfPA9/RLUu
1UGs/6hvwN5E1/EBez8I/UF9u2VZ3WjfK7rUH9iXDxvmxN5nR39gvyvQbUfX
IdJ7KbDvlePYR9NYnur2sO+jF72zyK2RvjsB+/Bkl9Wzwv6QfoB9YbXG3CbB
exaIk0uqFswKFZyf0ncebl7dys5PUS9Cncp9aWtT9r4b/A15t3Wfz+XMD9FP
tHPnYtJZjS4qdL8X7XyNEr9fhvlFO51r7ewWfNGl8wXEW7chvjWXnTPp/Atx
e1Sk+H1AtIO4HTr5ntI7een3MVCHT5u7q/jSNiU6j0AdPjRVO4W9D4X5hf29
iKv5wvdGgY/wnhLPzh/RPurbha0r7dj5EdpHve6Iyo8gdk6EfQf2+zfrtGbn
U1jviP9NB7KUWybbkj3u2zzeci2H3R+GPeLtojsb6lurSOv5qDO/f1C1mL13
Dz4R98KVup1k97LgJ8Cjz/9dw8534FeoGzvXBvVk929hj3iYtMziCLt3B7+F
Pj+edIj7NUx6fwbxrThwns9GwftEwDdPiDPst0j6vifa+bRQ/F4n5hfxc+4c
U2M2v6jTQm/bK3XyZOcy4B/4kmuezux+L9qH3o70F7+fi/YRV12+tunD/FCc
58hx0D/dJq9KUM+wpvWIeHLpTak7ez8IeRDslc/Y3Uu4ZZyCc3D4f+5s8bgQ
b+H/W0d6174VjIvyQSWnqex9K5xrYF3H/zg+OeOoLO2P0FcjjoX0Y3ku4j/w
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
Xh0ciR/Pu+YZn/e04nVsZvclV6V1gGOihgst7NW44K+dYn/z+ynWO861b8br
nm01PZfqSzi/rv5SWLOTk+Z30MObo6cUsPM18IPn2vgmhDJdQfpTUp9Z1017
hLAO2UUyrs1mOrZsfwSO+wMhTznFzvy+AD6b/+5nczxTgoMftNNvW+Eytu8Q
z5L6Rl65/cR2+Q7EG+Zr0KdV/dj+Bd4qPEse756pyb2cGb10sKZ0f0f/VQ/3
GLdkrDX5D+o5XNHm/52HYr3gfD+vae/CTX+0aF+Dnn8YMWOFFp9H0/mLRM+/
/bpWlXPTp/Hintsuye94Nse3SnCMC/yMr/ogz86d0U/wY/V0hnqbNtL+g5+N
YXXLqp2lOPpj83Nng6evNN9BnaeX+2MHowpLaR1PkndwJW+f6vH5PsaLfq5J
+ReqEC09FwNe9ndfMjsXaz6u7ZJxYR7Rn0l91qbrFloTjv7UNFQk/etrQfEE
PNd3d9+zur/0+ySoO7nf50Yrh0njDM4vYgpmx5W6ahJvyF+25XsPPG4jrZ+g
7mR/UWZ7io4J+T/a6bAvdiyLG+AH9xI3VPRMOSw4xwQ+Pi71ZRj7/kOz3820
l/xuZnO8aqcYBw/o5z3FxDEnN0jPcdDP9i3zc+ICPlEeh/OUWdd6LdeJlO4v
aD/61zrOid9nsZ8in9o1yv+AvLs88QD7xxuuL5jwzJR4AO5Sttab7S/A8dwO
2weprHWR1h9wr/Li48jJbJ+Cn+C5jidz0vyP6xA/sN8o+f3K5ni4BAcP9Ds7
zz/c7RCiSfbNf9eyOR4jwdEOzn2SUjsPf9Naj/QV2h9+8Hk025fBJ/B/itcS
Hfh9HLwBX+0xNLB7f2Xax4Eb7opvsUGgN4D3it+fyHQF6RNJfvpso5PIu0xa
j0K++XtP/9GtLxdQ/oj+dz/cKDrK+yF4Rj7bL0hlA6u3wE/AQ+R+H/PFFxVp
vMA9YnPy/grOAen7IXsXuDnz+zv8B+1Xj6ttMXS3dH0Bn/Tpn4bKlWqqsyGP
PjvdSK+3kSLtR3huhLXcAdUdWVRXxLnYtz+vx/L6lvwKed+YsIonQh3e/Hsd
wHGvrPFYV/nkLdI8Avdn8jeWWq/ZbUL7BeyT941VaiG4HwI8w3jJPR0rO+IB
uEzBjDs6a2yJB+CLW580WNShNeF47qFh0R3H20jfz8U9mV21jyewvA/9BC73
9FpPli+jHeBm9r/aszwU9riXkpOxdVNreWk9CvlC9eeNhRkvzWlcwD13vTDj
8xeKM9DDeYedjxdvkH7vEbr6M7cvcteLKtLn9D35j4OP2vPrEfMLXZpYllbB
8gWMF3pscH3PV51G6lL/gQeZii6UuErr1fSdK+v4JJZnYV3jHsJzye8Gon3o
nJ8Z07LYfR7adyT2h3cbxW+w7ETPhf2sGfss5fh5Rzt0j2J2nhm73wX/hH2A
zM+lF1ItqD+4b1Ak+Z0+PBd4uJfsinfajrQ/4tz/quT38jC/wJXjlROE952w
n7o2nTB+ZSf1H+BJawy7fOPnEbwBX136KYvxhvaxr7k9Xb+R3TtC3ECct1G/
cnrEynxR831Kfdf/vU8Br9Qz1x9gUpWMdYf4NrHkeQPH5y9oB/GqpeR37tBP
4NXxDq+3KErPJREfSp7PTmL3puCH9Duz+YGXHXj/gR8CP9Z0PmvYKF3iE3hy
RdnPe5aypNPgz8ndTePZ/YHm5xEJkvMItA88yeLP4d78eNE+/L/iyYE37N4U
6S6J/4zNPhvM7j0Chz94DeQqmM4ED8C/7BhQx+7pYX7B81pzjxsH+HUHvwXe
7UZOvnJMAekx8D/uyNT09nx/mu+n+J1o8Al8+o37qcaCe1zAjx9RdFgT8490
BfjkdlTe+snup+G8tdnv1gFXbYYjnuP8pf+C0o42gvM74O/P+7tfcblO5+A4
78h7MfDc1qfa0vgvOU/5jt+ha4Z/leAYF9p5d+/sihQ5bcJxzr5HpcidnSuh
P9BdZo0rbYXn6ag/r/eyPic89wc++9mF2pgi6Xmi+N5uoyh98qfv50tNqR3U
Nx4HaCTKjDah+Tonqc/ESepFmHecQ1Ufex3NzkOB0/2BdvJqmr+l90V7SJ47
/vbs83cvtiJ8uuS5JgZcgUu9GvUn96a3dhR7n88npmbFen3CcQ51cIzz+mc+
ulL9ILE/pf7IVr+HtD+w3zPvZnSInsB/JPYTxipVbRDgsB9+6MBy1g76+Uli
/3KoYRJ7LukEib1eYkOXlXw/6X6sZB6nf+o6h/kV8EbJvLcKu22uz88XxoXz
Dpn18Tfu8PwAhw5vEW1fxPH8ND9nKZWcs2C8OKc+kh19/WCRtN4F/7k5+WFt
q/7Xad/Ec+uyn+xn5w5UT5bgSW36u1wolerw1ZL+5JktsJAdLc1TlCXP7btf
cQobF/AUyXNbjFp9iPGAcY2x6b536EM9zmryOI7xCRz6vI3BwEQ274jzOE/f
tPJqzkor6byjHc7bZ1AwP4/A0Y7GivJcPX4eMb+wNzTxS9YX4LCXsZk0fCPf
DvrvJrE3Upm8SDi/ByX2X13+NAj9wU7Sz9Lv5X/YPRngXyTr8b3cGrsIPm6g
nzh/eZ/39YnSemm9Djq29zR1s7NvikT/VceGPfSSxZm0a8J8AfWu1dnut1uu
l+ZlOA9Nfj67+BjfPvYFnOull7rfYuehaB95VlWFtmGPBdL4DD7ldBZ2CP6n
+v/ssy0k+yz6b93snIjic7PfwwKu+R/45mbnR3RfRXKesmGA5c1tSrakP3Hv
65NP8IOfozsSjnOl4sDDI9eWd5Le55S0YzVk29JK9Q6E416czBSLc6z+Axzn
TZopPXezehHax322yiv6c9j9NOC4D+bYoJ8ZyD8XOM4jet5R+1vE9xPt49wn
6l9mMqvXAcd51sCvsvFCHOcvg/sZtGR1v/861wCe1ux3ozCP0BWWkt9vao7r
S3CsU+DTB+1ZvkKwX2O/G7336Ua2X6CfiEtTXrbYzvY74IhjScNHZQn3R/jh
tBXhoSUsL/iP38f5L7y5fypI/BO6BXniuEE13sz/geM89G/KujLDCkvqD+zD
7h64lT3TkPgfJrF3cMz1bM9J8yac+yj5HDvO7kWjfeRB3gouc1jdGP0Ejvs2
sK+T3KvZN8RFntXNgJtK7sOsWOcbwvqP/qCdAqfJOnz71B/gL6YvnbFD8J4I
cN2RcyrkomtJZ+K8xrvFIe8HvI5FfIP9lE8dfv4cKkt6Evbf7587I8/n1xhX
89+7gc6Evp0SsaZ8Q7Aa6VXYxx9p7ObcX5niEvI7T2/vdHmB/qTfi9EdnPeQ
72fzeyMLmt0bAR48olP6lntS/Qy8StHHW5inIP+ymB5bv5DPr5vf9yiT3PfA
ugA+dEBarjafpwNH3bh+XP6vIUrSOjzyr8a/VXtYPgg+gYeYD6kW1s+RZ+Vq
bzvJ6hKwR5417/oHC3ZOARy6vcO4kiH2fF6M8WJ9eX24Ocnur/R+BfC675Y9
+/P5FOyR7y//c8J3oaDOgHPMT/1UleWyjSlPhD+4v8kJWiSo/wBf9Xn3k9+s
/tPsXpNNs3tN9B3vnMul3Xh/aB6XTCVxCfbQb12iutpmZevQc3FP9f2U1m1y
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
zLvB9X+FbywX4mqsC4Pnlj7uZ1ttQ8/Dr111lOcnEV9BD0vGTU9SjK/Azd01
27A4H/IBL3Lp6/Lhlug3YZfafF66/sQ5E5ID4oTsuZuLmBzwPLjzZv/vLF+E
eAB6pfKq6tBx4T2QA3jJz7ktw11NJXXrb415/S2+S3XO1i8+vxfkVnc9cQ5f
T6xbr1vC63UxX4M+ePaRz9fQTvSv68Ln7Vj7Ecfi+e8ffjxn8fN77tfAS69P
6MX82mY+fsEzV/RbHJSiTPE5+Ov3+7ecFPQEcSy+u+BMm35nhfk17BWe37LI
MnqP4N/Rfjz/sqq2ltWHQA7Qw2233j5g8sTz4DcuyetJIH/w7mkH7gUJ4yWQ
21Xwy5V7tg66UuiMvDTVc04aePxW9DtnjBdwq89OPTcJ4/E8tzPgxRIztz/n
F0phZ8C9TDrnKn8rlWL+C34h6Pp8Zv+Rb6H83uteT9m6qnzfmli36bmxttmE
aBNalwdf0CliNotPECeAb81WN+spxCeQD+WXzsvlA32APtvO3Hjni6APkBue
n6T9InCMIDdwqo8qedqL2RPoD9Xd5U5bIrFTproF8Oidg96HCvqDfgdXtfuh
6REg9iPlZ37+t98xjpR6uayPEdqDeRnihAt+3ZYnX9Un+wA+Z/O5GmYf6lu3
Uq8nTq4vrqhvHQrfxfj99PWJNvvuRB6vgkdYL//S/Hybeten6otP6nu+vvik
7jrXFL7OtYzHV7Q/oktB4lwhvkLeBvzgrc2WrF4F8TPV1Ty1NPmQZkf5HPBJ
369cit7TTjaTx/kY12rtbiSzeBL6Bh7vVPTpmDAfRz0SeIR9WZsTQnxoztcT
ad7BzyF5zOMB8OdjbWfaCfEA6pfou+/aZ6uOec7PHxHr/zs/G5byxj1NCj8L
O9P1Q9abgYIfhBwwjmwaxeuzeAbrCOAZibufsXgGcgZ3/xAdHna5hQT1POCn
rdJcPwrfxXo05TEKhhWev51HdXrwg09mdF17TtBnjBfwEVpfz7G6OMR14JlG
qyayfDL8MvxdjM/cscwvX+D2Crxsm2Gkn34bWSX3v+Ajp3htYv4XdQLgITe1
vFhdE+whxu8o50f3IgR7iDwtno/b3yzy0np7qoMCH3b40HOmV5AP3hNw3T+1
SJAP+pHWx9utvPXEJVuK8Uh1sHHr764W4l7oP7i67lRvj2B9CfQT3PuvEceY
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
W3BXmdbjwMe7NHf9GFjmjO/CX4S2SoubqK9C52rSfsZPM/WdLCqkaA/4/fmx
OoVOprRvDuM64PsNzW+Pzf5vP1oU349Wd3+ZId9fRvew8PFrrJ5UcW9gGd2D
AO7yJL7QZo8h/RftI5sfurD1C/Ece8jZo+v6fgWDRb0Cz7a5OYndZ0H3uXOu
tEYzKleQD56H/O/yukGdOnkMa57HwPMYL519C1LMQ8Rza8EXZ3l0m2mhTBx6
/rmJw2+5kTw5D16wzkfx/ibouU64QaYtkwMfj7Q+VXJ1SWmhJv0v+v3YtW7L
cu+K9/fRfoHuQ5eydvrU8acjuD/Fd/H8Rv1Np1n7m9TJMzvwPDOdw8x5yEVp
G2YP0V/gB9pFrGnzQrwPi/aR1bmnFXwyv6cVHPLf6t/l0zh98Z532JOZMYay
L4J+4nnY5555nwbv/CTaB8h5zqqjLor+C3L4PPvut94K9g162/Pa3RJFe0v1
Tnz/GvSfxi+vI0X/Qh8u7NO+PMNCvK8Q/NuK9T9Zv0DOGHdPfEOfOw3HeShi
/WcOr//E+9FfhqOeShTfD770oI2jhYJ+1p2/kH7y/90bKtdD8lOcF82W+y+0
E/1VNDbsELt3FRxykF3ePov1C+QGORfwuuW6+zHX8/2YkD/ej/uqFtWZd0gq
5PMOOl+UyzOA14nheXAn2c39YwW/AA75+Dx6+64gXuTQq1Ael+L94Nq8rgb6
hn6ZGluw64Bgz/EeqgPpWHrU9+M8sm+Qfxrfd4zxiHaG3mq2RZKoRv2L/33E
6wrQHtoPzte1wfFf//J1YfRL3XVD2EOMlx/nnj1ldtWnTvxsxOPnFXXiZ2ce
P+P9+N/jb5uasH6nOJCPu29bY/wUz1OFHWtUWml5qKt4fjL6vQs/n5biBK6H
DhUmv98Djv+6Yhijy96zos484iyfR8yvZx5H54Tz7+bx+8v+B5Pk/3c=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnQXYFsXXxvfZDrsxUBQxwe4WBbFFsRVBUGzFbsVAEQMDW8JAMLADRQUT
sbFbMRCwu7/7997j9f+ui5eZZ3Z2dnZ3duac+9znTIe+R/Q8PI6iqHsTRYnS
VcsoWrkVRe3yKPq+iKJY+f2UPq3yzVSxvyq19Lel8u+rfqx8N+U/UP7NNIoe
1u+rdM5COqenyr9VO2P1e4LKb1U6RuWnq+4rSg/VXzuV1apzvf6eUv5SpQ/p
Whvp3B/qKFpMdd5Q+Q0q319t9NXfYvp9gNK3lC4e2n5Ef5er3Zt1H5OyKNpA
6Z1qY7D+XlKd8WrzKh2/Tfnp6ucLqv8q96Z0X/0tovy9qnsx96L8DrHbpc2H
lN6sftyoNhdVnz7VsReUHqs2t1H+VuUvUH47ytX2A6o/WX/X6dzjqij6TelA
HTu/dvl5Sger/s4cV/lJqvOP8icp/5CuPZFnpd+36Pejyt+gshnK36f8aOW/
VP7+kL83cX648jNV/qDyN7XcZ97D+2p7bOE+3aT0dl07UR876V4eabn8unAt
niHvanpohzZP0Pl/hH5+o/zujAG18Zvy5ypfKT9UbX2oZ76Qyi5Q/n3lF1D+
QR2/XH+fqJ091N7u+ptX+WGq87zqzKn8Z+rLLqrzmvIHq3/zKE31ru/T8xmp
686l3xfo951KByl9UH8zlL9T6ee69meq87bamqnrTVd+TqX36twRkdufqToX
6hqlrnmt0mdUNp/+7lK9r5S2dLyP/g5U365R+oXKu6o/w5Wfov6UKu+l9Cre
O2NP7Tys3x/p3FvVhw/1N0X5K5V2UPsb6Nz3lL9d6TmMBx27TOeUKltXbV+q
fKH82sp/r/RdHb8x97f1jvLPqN/3q//3RX4Wv6re2TpW6vo3qd4SKptT6SCV
7cQ7UX5uHXtB+UOUTtfxDvp7Qec3ei67qE9z6/enSsepziTl51W9l5Q/TOn1
Kn9OZfPr71219ajSi3M/uzsjP8s5lL9D+XuU/0jHntfvq3O/m/GR39WDuq9a
z+UYtXu8+vx75PxQHds9jO1DdM7lOudA1TtD1z5T5Q+qj9dwLT3bgfq9hfpz
m/JHKH8Gz0b5v7gXld+h/KnKn6t27texldX2xyp/SuW36PdBKr+UuUHtn0Lf
VH6U6v+r/lzHWNQ179I5V6rsAR2/RX1+JnN+QbVzt+pfoGNfKf++8p1Uvr3q
HK92T1Z6ps4/h3Gl/N1q5/bIz+sftX+t2q91/JDM99FRxxdQO3epnUtU55DE
bb6uY9/o94fKv6n8cqrzsfJvKH+1zn9F6Qc6dxX9faHySbqXCWp7RuL5+U5d
61Odv7TqPq5j73Mf6t8vfEuq8KPSROmX+vtE9SeozvPMYUo3L31d6l+h819V
+Ycqe1TH3lP5XSpvaJd5RykX/CBxfyeqzuyW61ypY8/q8Os69xX9fcmzV72/
dd67SqeFdml/4fC9vq3yj/X7LJ17jdLJek7Xq83Dld9XdRZNPZcx57xQek4Y
rr/FVO9xlV+reo+UXlN+VBvLlS4/Ued+HeZJ5q4XVd5Lv+/W3xdhzmTM3alr
XUSfla6l8sdCm/M1zp+jNvdKPPfervpDK4+pdVX+kOrMpfNO1Xknq/zfyPn7
Vf6J+reJ0jt0/EnOVXqC+nSjzu2kvqyov0kqv03l5yi/U1gLFtb9PqHyofo9
Ldz7hcqfpuv1VXqF6r6k8rEqP06/2+k6Nyufqt3nSq9RX+j4lNJz0UVqc47G
dU5WG0vo9y3K99e5S6vOOOV/VRsPlv7ef9F9XKR6L7L2MR+XnqeHxf7O+d6b
ltezm1RnN/0+s+U2T1d6ic4fz7yhc9snbv9Y1RmnNmOds6zKv4987q5K83Av
Z+ucx0uvvb+rjSeUn6Z8ofMeLT1fDql9nTGh/2+o33qk0QZKL1a7/2TuG/28
IfL81JXrqfx0pQNYt1jbw7Mmz7NvW2tbXntXUd3X1ae5VH8z+q7yvSKv1Scq
34f5S8dHJD6nj+rvrbLvlPZWO8epbB/9HqS2tlfaWffyN7+Z35RO0T1swtxa
e+6jnLlwFV3vg9TPbT+Vn6ryfuH5ZPrrEPsZLsbaoTZ/0bHjW752d96t8uep
ndEaT6NanpvaqX575BzVP0y/j1Tdg9XPO1TeUeWvqLyb2t5Sf5fpnOv4FpT2
zz3GPladC/X7icwy0imZ5ZxOrMuVZaYxkWWo4frbHzmqtkyyCuud6rxYeH4e
UfhbuEvnnMVLU1ufxb6v+3XOykrfVv3Ndd2PwnX3VL0BrHc679rS+d90XlfV
+SR2X3k2F3O/zK26ThfmGrVzoM49RWUvIx+q7KyWz2fsMIYYs+er3tWMzdLz
PfdyltKl1eZS+ttQ562nvt3HOqn0DeRd5kOlCza+l2Fq42mdM4rvQOmTmWWM
0zPLdePDN3Gr2toxdlu1jn2n/Dr6O1v9u0z1ZyvdWdf8JvY5c6eW53jWq+tv
DOtv5DkDmWdc5PX7Hv2NVv4yXeNu5ZsqrGGR17SPkcnU37cbH79U5Sfr+k9l
lqPOUNoz9VzJPImsNyHMmX1jPye+63vD+sU6trmOH6OyM9X+67reFcpHSk+q
Xfe0yvLk4jr/ReXv0zlHq8qhSl9MvXazhj+fepyfr3YuKf3d7FB7zkdmXVV/
a8aed3lPyO+kpyq9sPI3vk7t/iKXz1bZczo2VuXnKF0j9hhl7C6h34tnnluf
zSxHn630XJ1/B89W556Zew16K7cew7qJLjOH+larzt+q/67qD1LZCObXxOsm
6yBr9Rax18JxOn9p3iFrIuuN8rflnl+YM45V2bl6J8sxT+aeg5iL3qK89Dxz
tPK7oeso/17k8fahnstCSm9qPM42VPpObnn9QqWj9XuiytdrvF6hM/DsOhVe
i29XnXv0twJyjdJd1f6KyHdq/279Xl75BXLfN/ePzMDzYR1kPTwE2Vh1F6k8
vzHXdU38/niPW7Huqv4NSusg+2+g+rsoPVJ9nwf5Q78PV34O5T9XfoXa6TyV
9YP1ld9Z6SU6f0rmOXxepfu0LNNvhizO+qz6RzBPJ/79iO5xJdVZRP2fnVr3
/JnnUvrbPzm2nHVIkN+QSWYpXbZlueB1pS+pnV5qfyfkSaWn1F43WT931fW6
M4dzfV3jV+UfUDqU8d7yt3G/+nkS96e0Kj0vHaA68xbuwx7MSWHO3x1ZgDUo
rD3X6xqbq+xwXWcUzzH2nL4Nwp3SgyPPW6zffGNTw3fEc79U1+qt49uqjS9V
/ntsfeAFtXc+613uOZ48a8DglvX3QyPL1Oe1LFfPzL1WfZtZzkDeGKv7HaLj
F7QsM5+rtKW/Q5Tvo/tKlP9J9fvkXht7q+zF3Of0Vfqezj9L5aupbyeqzUOY
q1X2be1ndb3KVtU9n8waqrL+Or9SnT/V5o36/Qc6NnKL0kzlx6jetWprPbXd
V+ftr/p5yzIMcgTrRj8d66djO9NX1b249Dr5EzqT/s5AtlJ6lNo9j3Yb398p
4R5PUP2DlO+u48cpfyDfhfJ76pxtlD+8tty1iP52TKxXoF8crOtWes7LsLYq
f25lXQad5mXVWZZ1M4zP6YmxkU8Szx2zwxzC729bXpdZk2kHWQSZFtmE8u6p
39cWIc/1PixcxrvmPN437/pZ9f9hpatmnuOY6/5rh/qcd4PO/wo5XcfmKi3v
Mn8+oTpDlN+O8cq3pPzGrDuVv0X0bMYP/eD+L1VbOyndRH34SfmTVf6z0klK
h6reJjpn78rtLa9z/01cjn4+OXX7nM89bRH6d01puWkR1d9BZdvr78XaKb/B
Mo5hbCmfqO1l1caOqdfKE1X+lvKVyvspf43uabraO17519SvhXTsBJ6tykvV
WV75VPmMdablazBWkFN6pJa3twG3QR5rLB8hiyCH7KvyP5VfGrkxtRzDWFxK
v38N9Z+vfS/c0yfhXNoEV9kqNf61ApiArr+i0r10/kXhmRfoi/rbFB2gcP4d
1Ruq/EbMY3rme6idSxPP0azLyyOz1647LJz7qK5zrvJbM171d43yX0f+Lq7U
7zeU/pS4znIq30ttXJ/4u+2gY9+obFbtb7ZU2Rq15yrmrD917CKVj1P5h5Xl
0lFBNuVbQJ9/kzU6yM9gAawTrBdLq/zryjISmBPy+bWJ+7hR4jpbRJbZRqrs
I6WPqZ3BKl9H5cvr9w9KV1Z/Nsu9XiR6Nstk/sbXpW/6fTZzhNL7de5ZjEnm
MubGUOcYnT9T6aJgFYnH/wr6fXTtd0H5pUHWQuY6Tv1ft/SYWUK/Z6vuV+ih
lfWclZSft/rfWjd/5fWKdWx/5Xuqned4lrH7syjPXL+35Z3yjYAtqPwIcB5d
Y20d30npDpX7/pTSDRPfF23tlvt5d+NbDN8I3wLy1HapZaoLKusa6Bw8G+5/
3dBv+j8dOV/HZqXGtXLVOVT59ZBTY8uLyIezdI0dlX6FfFm7zlvhO+Xaq6nu
c8hxys+JLKi/dZXvpXMmqd4ByCG19Z0NU8uL2+j3trrOMP1eU/04iG9Kv99E
Fk89hyyg/qyvfDt0DPVvtOqto3RybZ3pytKyFHXQq4/V/f4c2kRW6RVZ9mwa
Y0jkBynfW89uu8Zj81iVLZJ4fUbfY40ert8DU68HV4T8jpHrU4f1EnkEuaSH
8nOGPO/7SGS61GN0wcR58C/kIOShrZT/ojBes6PSPdTnR1QeN8bV+yv/E99P
7WfyRm0850Dl/0A20u8B1NH9/aP8g2Eu+rzwerK90q/111f5XZU+y/PXNa8G
Mygsj/+t+3+6tm59lcoP1fmj9Gx/VP4Jla+lNh9XerjKb1T5zyo/SvkHlP9T
+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
PMxd4M/sg3tW5P3m/g9G51Eh
          "]], Polygon3DBox[CompressedData["
1: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
MW2/di7h/Gdr+/ZiX/ost3W95h6O5tn8qx2IvjHHJ6f9xbTZ0fUVfTz04X5r
6BuhT+bci74D+lroTvvn8mcI+qNc09ic6xGuY3v0B9Ar9AfRt0afjTIubRdw
/ujEPn+R632a6z2hGxtdW/1ZbTZtD9qPaGfOd+4/mfbna+ugH4N+UJW59jL0
/bS9af+K8yXj7FtmDXUtHU79vt2srzvUssa71h9Bud/5wzWZsXbxmPYb+pPo
+6Nf3oiNfhZjDXN+0v/QXqliU2pbPqY9qG3Vje26GdfwirZUN7aWc7Zz9whK
w++BNmcy3vbdfOvaLNou01S51kX1KdCvptRpf5zfB+3Pq/JsFuL6PkSehHJi
I3PWUG199HN8dvT5qps5yblJH0dfZzPq/2nEh7nSuZkx5yhy7Ar08yhfNLJm
17uxX13btGm1be91fuR+H6fPWei3VrGF9UnORh/KeIsVuaY90C+h/NLIGrtS
lfnxS+Rfub4pubbnKee2c817dTNfb1eLzaPtc2+V9dJ1c0HK0d389q/Sf0z6
3k39t42MeT51F1Ga9cyZzp2uGa4dPsNrXGs4//hc/1BtVv5/SPkKeZxG5uDP
9DGK+ECboN9extf5FH0O+k5Uxpb9k3In8pmtrB0z12JPTMyxWZH/otyFfCnl
f64lXNOcjNctY//O6pqMfgp9ntHWrMWfOZT662t532fmfGOiT1OLDTYm+uhl
5qZ3KVPQf1u/Q/rXtI+Rf6Y0kNdpZP0dt4zvtRP6WPTfkfrdi/gP+pubUX8M
8mCez7u0X7gV2+NDyqv6T9QfTf2IRuyHbTi2vfMNx27SxqL+XuSNtUn8HZ0b
9ZWamU9/0v5rxkfSV/oL/Rb0hWp5H37U3kW/mvo7nXsot/tuoA9m/H+7eT8v
QX6L33si6q/Rv6P/+Mh/a0+jL46+KuP9R7ueviDlZH1H2pxL/Z7aQ+i/+40g
n+/vxnincuyRWtZofZiz0J+sxefR35+A/lfQfyz6zOu6Q/1Y1D9KOa3MejQL
xy+lzdjOZ663zZzDc33Ynz8XoM2WnO8LfyP0Pei/Bv2X5hxv1eNz7of8HfX/
FMEMSvruT5sraTs3bfahbk/0i9BnQ99bG6MTbOAR5CMY/yr0s9FHoh+OPoz2
19J+Htof5JqMfh76zOi7ox+MPgJ9IPqB6AdWsf+0fQ+m/7RlbNWFKcdyffOV
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
OvLFtP+HMTav5/v1O9an07czpjlGO3jIEPGHfrxDTFNsc1fqS449pS1Rzxh/
a3twbC3GWruZ+KyYptjmqVz3Mb4rVWKL35WJN/7rM60HjxSXvIzyVi2Ypvjl
fK5P6N+WiW+u47rZSMz3G6+X0m4kpmG8/KMq8Yg5kI+i/QRV8FhtHG2d5T1f
LTEf8WFtSG1JbRJtk7Wo36uWGIrxg2Vo8w7yRdqLZWwObY//tRLfHK/Ku6xN
pG00Ff9Ppv1rtLnKdZrnN5TxKo5fRP0WtF+jFptA20D8+ORG7mHNdp6Tz+ul
WuKzXpfXNy76s8iXid/qr3Hs6nb025Hvof74Mhij/v+ZZbDHy6m/k/rJ/L6Q
r6U83Mh8vi3yEa3Y6vrYT7Tix+lb/FYkHuV1er2HN/J++74rL6K9iHwsbTZA
Hoc2z7Sia59vpb1Jfa+MvIT4pOuw35hYDO13L/NN+W35DMTPNxcjqCVGd30r
dpL20q/1xJdeL8OdkEOhDztfO7GFZekzP/Li1G9QS4zlVPQHytjm2ujGqxZp
J1a2pv6M74sYhnM7ZQX0e9D/qcVmmhv9yHb8PzH0cai7Cf1J5Ptpc1Qrfrb+
9i214OE7cOyGRjC7W/p4x3FF7O+L+3j2mciP8ntMLZbnOalfQ3unnXfMd23v
er5RMR+xn2s4dj76dJ3gX9qL0yP/1kqd/s+W7Txjn/WRzcRHNmvHtzFG8oPP
t6/rv+jHLNiLbaJNqW15FfV3Ufca7ffj2ML6GLX4KPoqHc65dxF/oELeuh1f
0hjddrQ5zN+futspjznnUj8tddc1Ep9+RBuFusk5fiXjzYj+hrYV5QDqb+D4
I7R9H/0w9Der4AX3MtbN2nbaBto3zvnUL9KL76yPpK90DfUj6T+hNqR+Ff0v
o/4Kjl9K/SV9X8gx9nLub+e330L7Gvm1Ktj4nYx/k7Y1bV6rJYY4bTt420ju
/2WOXYB8uLGXWjCox1t5J3w35Bg82Qp+5ft6t/iTWCTHHqiFE/KUc6JYtHMz
5elWMDltBW0G7Qj5Ls6l62iTI09CeUhskzaTtoN/nSP2aB/kicVomvER9RVP
YMw3auHsPI/8PcfXRD6KNn87N7TD5XiPNnch/9CvlzN0CfL0HHuR+s+on8Fv
kd/rI/EF5KsZ/2TG/LiWmPkLreBE4kWn1BL/ubCd3157XLvc71f8SYz4EOTV
W4lVGLO4DHl/7Q9jF74LjP+Qtjz6YNrP7r22s3bWGO8J9J3FtKl/HPl6fUXG
6KIvIUbIsZ2onxD9MeTresGLd+F+puTYM8gPU0ZDXsY1p0zcx/jPKrXEo7do
x/cXcx/UyTfmtybm8CvHFm/HlhyofY48Wie+g5jt38aU2rGttbF/bieOZDxp
UC38ra369cac/6T9J645xi78RtuJ7xor/aEW/ojx0zeK4C03lcGrjf3p7+v3
i//qWy+qjVYmPu/c+Rtl+XY4UHKhrqPuFt+VKvjlBZz71l7w8BH0X5D2/ysT
XzC+q430OfoJZbgLC6C/6RpO/Ze12NDyObbg2K5F/Ff92FU4Z8G9DOH+P0Fe
rZ172xr9U/1ebQaxZvrfUQbvq4Tn6+FD3UspkOcRM0SeuwzWNrKe+V5OhtyM
czj3iF5sWm1bMRGxkZrH0OdjmCG0XZR2uzSCGcpPEB8e2sga4Vph/HaFIjaq
NsOKZbhU2mzabsdT/0s9NstzrawnTyLPyXjLo4/Vzfvge/EA5x5I/+cduxmO
z/R+3/VwWI5vx2Z2vXLd0pbWx9EW0K7R9zE+u1wRH0dO1bTUv8BY3Vrer0Mp
lxfB9I3nG58Wb9Kn0CYRd9NW14a5EfmUdnzHaZGX6sRHkn8hD0PfyXfEd+Wm
vg01Gsee5XzDGP8A2m5i3KEejs2IVjglcku0/+UTijEa7xmjDPZovOhB/Y1G
OFNybPQPlkLfo514j7F71yTXJn0e4wlLteML/dGv9xvxW9InNL7wbSu+ohwK
uRTa//IdvmxlbG04bbmN++/v4EYwfH0E7T/tQH0HfRLjZZ+24qsYz5CLIydn
z3ZsHG0d43vG+Tal3WLI39PmWuSvWhnb9nJ51msl9rkW57iqlXiLXA45F3Iv
puGZP8/zPLGW9XwcMXyxEPQjuZYvuuEaLNn39xpiRs3wq+QffNINFiQmNCb1
M9D/v2YwDPEX+ZVfof9SSzxzwl7W0iu0D40lMMYX+vO12DsTUP+eWDP6+I7F
sWOa8beNqXc7iR8YozNWJz5yOPJQ5KG0r6Mfhr7H/8cfOOdJtG/2/RH5FQei
H6mNhvxPO2vP40XisH91wu3cpR+fkN+h7fJYkbj0gE5ipbf37d2JaPNRMzF3
4+vT2KeZGJuxtgb6CtQt4rqL3Orl21unFryki/54MzF04+kl+kj0lcVgxM6r
cBv259z7UjdTJ7aJ92xMZCoxVfTVa7Evp9a/9nk652kf9WLbbUP9l4xfR7+3
mWtaX6xBn6cZH9p47ryd+LoT6APpy1D/SDOY6WS0n4v6H1xL6D8X9QPRf2kG
750HfVzxl2Y4BXIL5qb+J/TZa7FftfG19Y0pyinTXnbulJO2WCv+4jKNYFzG
Ja7gHt9Ffo/yAPrd6J8j313P+e+jvNPInC6/1fn9u1o4r3Jf7WNffXpxHnFG
sUBtyiudr7WxipxDPsiOtJmgGRtxm7498moj/BZ5Lsar3y/iz+vXi+kZG3m6
Haxve/3CWjDFZ9rxufS9HEN7Rs6A/LdH2+ESOP/KrZRzJPfoxjKxIu/Je3O+
lo8pB0kukvbLdPVwLOVaaoNpi8nJnrAdzMvYy9vtYGFvtoOdOMfLZ3JNcG0Q
MxKnPaoMV1ROp9zOD8pgLzfXE183BmW8/rYysalB9NmLa1lM+6vMuub6dl89
v7/86ouL+Nz63tq/xgflTMqdlE8td0eOqlzVsctgKfo8+j5iKuoftcMF0UfU
V9QGv975lLJdMxwm+dza1NrW/mbGILV5tH1c4+Rr/dLK89Bm0nZ6qUzsT47m
8+38Xv5++gz6DvIRffflvMt9X7wXvEXcxXiBPEv5lmIyYjPiBuIHh/X9Jf0n
5esosyNvWcb3knM3q8+KcnE9HMou8ry9Pt/ad7kXDuzUPL8L64kHi8dI4LeP
fcehDKvHp9G3Ga0d38w10LWwg75bPZiP2I+cUrmlHtPnlxMuN/ygevAX/QXj
Y3LoxmuHT/cEfc/QjusFr7HtERzboMz7cg36hzyzWTvh/IqHe0w+sPfsvYs5
TNkOv+L4ejAUsRQ5rHJZT6vHZh9eJtZ3bD3+w9Tt1GnTaNtoU2tb66PKt5Ij
OqgoRhHWnJ/koMpFdc4QX9IfcSx9JH0lcwLMDTiuHh9vsnZkfRx9ncnKvLvG
Q42LTlJmbtHn1vc+v4ztIUddrrr8E78NfRJ9E+P3/lbygeQFGWOVb2rs19ir
HE+5nufU46/ovyh/wbEbfBdpM7V+DfewYSeY1CjMxW+oF59S37LVSsxdn2Hh
MvajvsRAfq8ri/h8ZyLfWcVW/boRfqM2s7az8/GJzp2d5Gp0OHa/8znliiLv
0xnIi1XhDpvTcC7yRr3MN/pKzm+9Kty6m/0NxaM74Uvf5PpTpV5ZTp78u+va
wXjkEJ9C3YfdcNHFPI1Piek6PzlPyUcyZqntuwhtVq7C+ZT7KQdJPtIXnfDl
9Fnkwmljy3OQ76DtLd7qc/X5yo9/nvaf1mIDyhd9TpsF+RXKlehLV8kF0Ge8
oYoP6Tt4XxHfUvxaLMUYzWTIn+i/FfEB7qD9D53wOfXR5Op918lvqY84Ev37
TtZifboHq/go+ipiZuJjW1Xh2upzPoX8Wyf6eL6jYgWc8y99MW0Q9FPK+Pn6
+8afHu/k25ITZT6B8eg3a8FcHhWr515OL+PPz12FjyK36WC/MeSfq8hHcuwk
2t/eC44qnvqTsa0q3Hc5GN9ViYcfXg+mcDbyLFXaisEOrTJntMrMJ84lL1MG
IJ8lHlUlvmbsy3fKeJsxA2MHzsXG/4w/ykORj/JqFcxDXo38GrEQnbFhRWJ6
8uv1yT9pJWajr27MX1/UHBnzM0ZyLW3k0Yr+ekX9OvXkzJj/If9UDO166u/T
luoEy5BTJt9ZTMg54/YiWJHxkkeKYBjGZ8Q07mgHjxPruKLKu+V88Wwn+TCr
18PhurjK7+Ec7jd7u7GWKrGDFShf+tt1wqeXVz9Bmec/BP0lfv/Re8nJcv5z
TfqxSnxVLr/vpPwP+TL6YkP6v5cYxOAyMSqxidc78d3NKTJfxpi4sXHP6bnf
o/xRS45J0U3OiRyj8fXpe+GkLtQKh0iuqhwsOUXjom+GPAXlx2Zsvtuq/Gb+
docU4Xd+VoXrJKdrmSr8QucqOYdyD433ywuTHza4Ckd2uVbim3Jn5Uiv2oq/
YbzznTLYghiDeLSc28/biYkan/Yd8l3ynfH9+6LKs/ab2rQK3iA3am/0Zatw
dFdshXMtd9cYjbEa55zNe+HcDihj/zj/TIp8Oee6jDIu7cfrRJZTLX9NvuAl
zWC2YrdHUV4vckz+oPjlGc1g0GLRcn/MRbuoGX6i9orfhxiGfCX5i9Y5h11T
xh/akbqzONZDHs49f9UIx1Oup/xJf0r5E/Io5F9+i7wsBz917G5il0dRNqzC
rTBXyWsSTxWPv7oIp3CMTvg65iaIqcnnkbO8QitzoFzmjxljUD2YpPOr/KgZ
qJ9e7L4TH19fX87y4p3Y9+aCycmWm708ZaZWOObGw+STy32UQy6XXI6pXFPH
lG+1bCtc9nFa4bctI4bQCode/05+z5H1YJznVMFgBraDp4vNvNMJ1mMOnvk4
8t9/Qh+sTdUJH1ffVQzsrU74JHJM5civ2Qv/2viPcaB3e+Foz1QGT3M9kH/n
tWmzftFO/ou5jn9rw3bCGV+tEz6eXHJj1MaqzYGSf/lwldyDgxrJvzLGa6xX
H2/FKvmES9WDicrPf9DrKPIby681Zqk/p1/3Ti85jK7fcuTlz5u/ZS7XGGJH
ndhDc9bi0+nbaQ/pu+nz6fvJl5NLL6d+Pq+/jG2iLtfeHCE5o/JTzR0yX0Gs
YCzt8E5sDm0PY7qu7+aAmAsyRT38idM6wULlHMo9NKa5aBl/2ljnwZ3EHuX8
mU+6XZXY6KLo23TCvxEr9X0010L+gb60mJJ8A/EtsSFjtsZu9cn1zdemTbOX
+P8utWC+rifiM2I5ckDkguzIsc1qiUFtWYVDY6zVmOouVeLFG9WC6cgXkR+w
RS2YsPPv8L4PIad7aB+TEJsYXCR2umuVXAcxYu27r9p5b3x/5Kvs2s23er8+
fRUOlLGPy2nfou7SPn5hjOLoKhyuY4twXI+pwp8Qe5HjJ99C/re5bDfUwv93
fdU/cs127ZbfLrZgjFk+uxwf53I5r0dV4dDLpTcn5iDvl3JMI5wQuSHaN2JP
PjOfnfwzY8liXObzGoPUZ1m5SGzyP/rfRd+F+E1O4nhZJTa3j/fQSczEGOKJ
RWIpE1X57fXHdqjCiZEbs0WR6zG/znjnRkXid8Zr5K9eXEu8pV0lHib39+Z+
vMn4jJwX8YFdysRfjHHJ9TanbUAR31muU60KN0wbRVvl607mo2X7+LXfr/79
Yu3gr9pI2korFuErmg9pPNv7Nz5vTtVSRbA9ufxP02bbWmLzz/WC/6pvRpsh
tP+gk7V3vj7e7BzkXOQ7t0cVG11bXZ9c+1yun7Gws9APoM9GZbiFriHy3Tcs
YwuKr8lHX7mXc5n7Jh9Yf/b4/vO4pY+vmwslp1Zu7Uq94NNem3xh42dief5e
+u/mw+pLbleE73hkJ3wDfeE7eonrGd87hmN7tYJ3aXteVUs8buNesN93+vjG
CZ3wEeQG3NlLfFw+wZZF8GXz9eTai8kYDxQPaCKfzjvS7iRnxPvRN5cP+g3X
tGGRmO+33fhD5hJu0kg+pfa/3F45t3Jv10SfrZYcBe0Vc3DFlcWX5evqX5jL
oM2p7am/pS2+HvXrd+Nz6HsYt9Le058zdv1YLfah/oOxht+awfP0D4wNHdBI
ft6vncSi9DnkA+p/yAWfoO9PyoeUF+6xNav4m8YtHHP5KvxYY/n6/ObPyfc0
ruWYa1X5Jvw25Mcb+5SvNrnPzncPvexm7t62yPwjP09sVU6e/D3tEXPpzOG7
oBvOnty9VzjHHmU4hcZm5JzLPTfO5ty7dhE8W86osSQ5BOanGiP6sMyaZ+zI
b8xvTRtOW05+qbx8+fnvVYnDOffqH5g/pn3+QBEbRVvFOJxzrfOv+PjbndhG
YtbuB/BEFV9Mn8z5Xp7NKL5NET7OkG5sx5tpv4b2dyexviUpq+tvac/T9oci
+xlMVwWrlyPjfO/6IZdzwTL8C3MozaWUY7VMny9mX3NgD+hkfwG5aX7f8k3M
6ZWX45wqn9d8Bb8dv6ET6Xs8+qG1xCjcf0Afz+/b7/z7Vvw/50ZzFPQH5eCI
Ka1VhJtjPtjBtXBqju2EfysO5DdsPrv5Vtomt3L/61Xh8xrn9BmsVoV/JXfD
+MehneRXfVlkzjOfyf0O5Ga5Zsp30p/Wdpqsb0/K3zMXxT0mRvb9f23vG9H/
7AbPECvQx7uvCj/WuKnfyNrop3aSq2sOj/sPyJExbmX8Su7MHp3MxZ9TJuyv
J184n1K/VDd4zK1lbEK5Q+bjf1gE4xHr0X/7qEjMTP7XG63wZoyZfdoNf/eT
IjaifF/zX8b23eH6J+yEm721c3Mz+Sly4sRGzK2UK3dFJ/GM1/UXeokHKMtR
GLuXnC3jEcYlzM8TYxFrebeZ+Ml4vchTivv2wonWl3NOcG4wH/OJIjF6/Vfz
91wbjQEZC5Jzre+gTzc58vfd+BrmVLj/xcFV5lJz+ozHHYBuLtNpzcyfzqfK
K4rPd/OO+K7IUTQf13zAIUViesb2Luhk7THGY66I+XkP1RJjmaiPJ8nDMIZk
LMn8PPcWeEx/pZd8P3PtjakYW/moFV6LMRBjIdonxl6MsRhrcb8AYyPGOIx1
uOeBcVFjNK3+8zM31JiUsSltLm2v+5qxF81vXK4Wm0XbxfiLc7U5GNrn+uz6
7jc2sn/App3kYpmT9U838WC5P8ZkjM1o/4nt3Y1e9BI/8lyTcB+z95LTIidq
VEwQ+dtOuO76yPrKctKXLJIj/Hk3/uukHLuhGe6h+wO4lplD8XTfX5FjMDN9
lu/FH1m9b8Ns0cv+HmJN/gbnV8nBMe50OPXL9OJvG5czPrdpLzlL5i4ti76i
304neKLcklN62b9CbO6lohiFL3zUfx/FFMQWzHEy18kc1CWQb+kEm5G7cnIv
OVTmUplzslQvOQtiKXJ7zGUwXu21GDP0+zNH6Pm+zzK4lxxJcyX1kV2PzJcT
PxBHKMvsP+FeDubAmQv3p/MLfddqJf/aHFBzQd1Twv0s9ur7N8ZEja992X/W
YxTJZ3C/Cm0Bc+IuqPL7mEuxZBn+pWuGa4d7YLi/hfl9cq/kGM5fJd/NXLhW
EbzF/ISLm8kZMndo0W5ipx4zX2HdTrATc+x+62Y/Brlo5giaK2iOlTw1+Wqr
9ILHmiswAH3BbvjQK7XDIXd/liH991EuzEl9TFtsWxtouSo2qRwY86G1Vc0J
cW+Zh1vhPy3aS67Ivq3k04lnujeQOWniL9q457XDN9X2NX56RzM5cZv4PLSv
imAyYjOb9993bRRtFXMYp+ikj/HWX/rPV4xIrMicROdZ51vzB3/sBNsRsxC7
EE/V79X/nbUXH1lf2fjCCsgL6BOi7txKPpj+j/dzXyv8tFHvdJmcQd9192sw
V9Scpz/776x7vPhMfJfNlzVXTBtU/o7747g2yX0zl0dOqdxSMUOxwxd72TPJ
/En3jpGjaszJd8T8zyV7sS/kqMs/0N+Tf/VgK/y4hfy9tGdbyV8UL9XG0gaZ
vko8QRtIH23rKvxb7eu/i/Bn3c/A3Dlznn7ox6iMVRljMNbg/ConQI6AXAHX
P2P2cgLkBugjLdzOOzjKd2pnDxoxSLFIvxG/FW0GbYc/OtlPY81W9ke4t5c9
M+R7vdBJPqi/pRiF+KH5bO4hI6Yotmj+gN+6uXy/tMNZkbviGj1GFZtY23iq
fuxFzoXcC22SSatwXuS+6PNuXsVnkzsjBqMvJydFbooYw8ZV7D/3ppGzJH7o
ngHiHOId7iVgzNDYofsxmHskH3/idjBmsWb3k3ItlYvl9br/hra9a8q6VWx6
bXttGm0b/X+xCmPC4nXiA+7RJKYptmm+hPtGmBPxdjd4frsdzETsRJtC28Ic
jfe7eef2bydf1nfxnl44w/LvnuwEzzcWqE8yTxUfzT1g5HPru+lzueeUfG59
MfPNDmyHj2YunPizNriYxm5VrmGFIjEGr82cUDmrchxW7QVflZNmjGq5XjjT
xuDkH8ulNl/eGLl7Arg3gPkSYvHyCs2f1ObX9vcbEO+QQ31xmZiI3OpHW9nb
x5iVsStjXsa+jKkaH/Eb8VvRhtaWlhMkh8f9W5am/22t5Gxro2iruB790EpM
xdiKc5xz3SlFcom1h/Ql5RFrb5uzK0dHm9h8BNe7b1r53sz1dY5xrtmvSC7q
/3OW3V9kg27y6Y5shRNnPMGcWzkL7rdkLq45uWJy8h3N1TV/zetxzhKvMad2
v/71mc8mp2T//vPQvny3Su6y+YD6Dxt3k4tuzrnr0TtVcqdPKpI/ZIzQWKHc
A/PHzLGUvy1W7Hqqn6e/J0dXfvVZVXLJ3cPL/byMIRlLksPs/lpitGK17mFk
fqd7Mrg3g3uMaX/og+qLimmJb93QzV4+5lSZW6U/KhZmTpa5We5b4f4VcnDd
r8n9AN5qhv96XJm9MK4ucsz9AWahvN1MDr7xUnmr2sbGsN0fQA6yXGQ57HJ4
jYEbC3ePOPfbMnfOWNeLzfChJ+fY1c3ECMyvN4dJ/pHfqN/qZ93Yas4Zzh1i
gfKV5GzJ3TJ/Xd9gZeNDjDVfL2u7a5prm3zhb2rhUMmluqcV7pIYoFig/Gyv
RQ64XHDjFfITzfk39989OYw9uueP8405WuZqieHJP9Le/LGV+d/cVzEgsaDN
i/jrYjxiPZsVwWvdT8i9fuQkyU1yvwC5ZXIE5QpqU8v3O7kdW3ulMra7HAfz
TeSPu3eRnDS5afP3Yiu7xrvWT0f765rhSJo/7/4GUxVZ/20jbqgtLgdSPr22
pPnzYrruHyW/U77p+/Q5qxWOslzlq4rwpc3/cK8k47/P9edw5/KPi/Db5uol
lmFO3lvd+FT6VnKe3D9G/pNYqnvKuLfMSRybtJU9UeTT3de3Z41JuB+TNr22
vZxQ+VjuaefedsZY3f9qjV72ChPzEPtw/y9j3eZMuZ+INoGxX7nR2grO2fL3
5V44l2vDGV+R+6Rt52YU8qXdI0N+tGvqQ0W45K61xu/kcumj6u+Jvx5VJKYy
t3NVJ7G4gf14hfupiLXKIZNL5n4sYm9yAOUCuh+PXAD36TmiDGYkdmROmPF0
cyzNtayayYfU/hpUBg8wdmF+n7mExoQG9hIDNxYuh8r9Jc0pM7ds4f74xiPH
6dvM2s5er7EV45XGD8VHlykTfzJ2o82n7eeectrnxjtfa8XH19eftpdYjZw+
7VFtHvM7zmvFFlq7l3idcTv5UdrQ2tJiZO63pw2jLWNOsPEI/ZG/WrEPzY3X
BpCPKbde28D5zGdhzqu5r3Ia5TaKAfi+ud+l+QqPFuHP64/900rM19ivPoq+
ijaUe0fJYdylv57oT7veHlgGT3VvBueLvfrrneuNv7G/tXE08Tn9hb3LYALu
1WC+rb6sObrm6roeul5pIw/vZH11X82L+uufHEy5mGLk5ouu1st867xrPpDc
hFFYZ5F8A3MSzTe4tUj+v/xMc5tdv80PMF7tu2sMzlic/O1fa8Fn5KebY22u
tXuUub+fOaLyDc0xkm/qHkDOrc6x01axybTN3DNQfqO2zigstEj+kPxyc5lc
b113zZlw7fAezE86rq+bU2H+gDEIYxFyxCau4g+vUmb+MZ/U/QDF/sTX5Cv/
H/X74ac=
          "]], Polygon3DBox[CompressedData["
1:eJwl1X1MllUcxvFbEhEkl4g1M2VO8GVmTUASFQUFRQRFkHxJUFy62RbUzF5l
ZrbVellYTmeWpqW9b7UyrWFppjlzrX+spshihqCZKRYZZutz9vxx7TnX91y/
8zvPuc9zP0OX1VfUxUVRtITiqSAxim7tEUXbekXRwIQo6uan9ImiVpMd2Czh
Tqw7KYo+6hlFt/WOokFUK3MZ24Il89flp2MXsHi+TO0f1h+mth/+s9xIvAGf
w+fgCcbr9Ky+gdR10VtyqXIptFQuRe6ktR+Qy5YrkJmPT+NXUyG2XraLsvUr
l73TuvPU/YYNwQqx0Vg5tljtd+qOU7JeP2B76IpxpnwWfrfMP8a71JXQ7da4
lz+h90q58zIdtERuQzgPe1jKd8oWYsnW26XmKf4q/ou6Lylb7Sl+lL3MlFsp
d4dcqVwedh8/Dt/KTw57lm9Sl44XyS3E2iiDz8TT9F1uvWtYkboKrEbucewJ
quTL8CXWPk5pnuUr9luNNZtPMN6ox1rrVRmLRCes9WPoL5NPZ43bab65BpkP
ZEe4LynCe62xSGYqXZQ5j5Xp8bxcK23B+veOPdPwbEer/TM8I7kEtVf4GWr7
8u9Rm3W/l79Ar6sdgvWXX8D/RW9ixZSO1fL3qD0c7oXxv3oM48tpk7oWyrOX
feZ66LNPXT22Su12LA77PDwv4wyfY9WVUrVMDdXJvWwuQa7JfI5xT58jZa4Z
f2bcx+dmfS/5blX4HnVnaYa+zeYqsA/DOdFV3+00thBrtOcN1NPzy1BbSr3M
d1mzAV8g0y27m59FY+xlOX/eXkqsPRv7ifqGe4vviI/d8XDXa/iDeLLcIX2H
hrvGL6Nc48OUau4ovz/8Bo0PYCOoWN/xWG/jRtpvT5v5A9RH7mtsDFXyd8nu
jI/d3XCHr/sO3ybG1g49xlIVnyP3WriflCb3t9xePJJrCncy9A096SuZVbTe
9G7f4zIW5zyKZc5hA/nn8MFqj2G/yxZYfyIdDGdHWeZa5Fbo85jzzZSbaI0b
+US5I55XKbYVexg7Yr1KNZewHTRX5gt8uFwrXyqXzp+UK5L7FfsknIHcKWw6
1sZ/Gt452BqsFDvHzw7vTyyX9tvbo5Rp7rT9Nco943wXy1zGp8nU0Bn9+mHD
zeXpm58Ue+/V4+PwarWT5A6pWUvbnMuLWB1N7RV7/4X3YD1/jAboNxebaG4F
fzO18PNoktwtfLsekf3MCedn2MHn6fEN/yRtx943f4Ze5XPjY++K8M7opDf4
qTQYq+Yv0jZ+Ag3AFvGbwu/Nd0r1PeIVZ4c7EM7aOVeE+4E9iA1Piv0upoSz
Db9X7G3sP+yo2vFYLfZOUuy/qZ3Pp5Jwd8N61lpNz1p+pzWelvtY7U61j4Rn
IjOBDsisoc1y78o9JPeS3MbwvsYH6ZElN8p4Zvh/wZtlUvFmrDKcqdoB/E34
ZPMv0Dpr3J8Ue2eFd9ccn+W0zFr/AwHq5M4=
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVVEUgPFlWdoty1HgoCJwEMQVnFhxFcyGtwbmoBdoiA8SUiSKmjmz
Jk00nUSEYNEgKcioBoHc/oEyy7dJvjBCCAl8DPwdhLv3962119pnn33uycaO
y+15ETFonMqPSLx9b0Sa1BVGFIuv4AlswDJsxSq8kIqoUHuRZ3k1v8Ev8Sxv
48/UPsABfIivsB/f4Au8pvaq2mF+kzfyL/ztgYg/zlDvTKPiSflVcc++iO/i
v3yhQL31MfEqrsktyjXxH3Lv+ai+n7yb3+bjvNceE/gEJ7EPp3Bdf7Pe6WR/
/C9e0tfCZ+R+65/FEbklPsf79f7CD/sjNtW3qp0XL1vfEM95z2/icvFXnuNp
nuPv+HDh7t0PYR++xG58jvexTu1TfouX8Mf8Oj/Ku3iW38FKbMY01uNxrHWH
Nc5Q5kxHxP/0pPb4bs58ODkHnjeK+D1r1fwQv8sP4mt9pd4rY4+cvlTyLGtn
xbaOR+6hU+xx0YFV+qUig9riHPrFadMZIz/5/qZjFsvt8dme2mLF9EluW04q
PvKtvN3/4w69zVYd
        "]]}, {
       Line3DBox[{2131, 2373, 1432, 2844, 2845, 2846, 2485, 2902, 2986, 2747, 
        2272, 2715, 2562, 2563, 2486, 2987, 2273, 2806, 2912, 2915, 2274, 
        2132, 2916, 2275, 2133, 2878, 2917, 2276, 2658, 3021, 2376, 2487, 
        2277, 2659, 2378, 2489, 2571, 2748, 2869, 3005, 2488, 2719, 2721, 
        2720, 2490, 2716, 2988, 2278, 2847, 2717, 2718, 2492, 1849, 2749, 
        2279, 2491, 2381, 2494, 2280, 2493, 2888, 2918, 2495, 2281, 2810, 
        2913, 2919, 2282, 2134, 2966, 2384, 2283, 2385}], 
       Line3DBox[CompressedData["
1:eJwVzktKglEYBuCvSXTTcge6h2gJiRj9YFBml4F0VftbTTh3DY3LzDbhBmpQ
loWk5KDHwcP3vh/ncE6hfltJFyIi4WAp4nclYms1YsBEnrK9HPHKeDHiXB/K
Fc7kovnGvfPv7lepy1ds8qEfci0PzRptec+dLp/6EXd2Jf2JLz2vFyjrPda8
dUGGB/t9u0v5jx25Y2Zpsk7VrmG22JWfeXRvQ78hR80uNWckcn9+Ru7O36Dk
fIMX+5E/HdPUv80TWvKPeco/TuAunw==
        "]], Line3DBox[CompressedData["
1:eJwVzr1KgmEchvG/ZlZ2FBmRU2trJ+AShYiVZUo65KudSGu1VkciFK2BGuTo
Eq59g9nP4eK675vned53rZbstlMRUUR1OWKai9hejXjFn5zno5WIda7gGff2
WzzY77jKb5gsRQz0/nxz7hxj+d27x2jrH3yCK3nPnU+5hmt9X3/El950r4WS
/oREnuHSN+p6yvk0yvIWL+AGGZzZOs5WeIPLthEW0dWb9gvO6gdyQR7iBZvo
2Q/tO/K3fzlFYvvhOjryLzfwD9wYLHw=
        "]], 
       Line3DBox[{2151, 2409, 2410, 2972, 2150, 2726, 2400, 2727, 2401, 3008, 
        2578, 2579, 2544, 2317, 2538, 2318, 3012, 2152, 2790, 1496, 2789, 
        2319, 2153, 3033, 2791, 2792, 2154, 2973, 2414, 2415, 2155, 2971, 
        2402, 2504, 2403, 2156, 2405, 2506, 2406, 2989, 2157, 2416, 2816, 
        2417, 2990, 2158, 2418, 2598, 2419, 3038, 2861, 2159, 2623, 2320, 
        2601, 2321, 2160, 2626, 2954, 2322, 2625, 2323, 2161, 2955, 2324, 
        2325, 2162, 2956, 2326, 2327, 2163}], Line3DBox[CompressedData["
1:eJwV0Lkyg3EYhfFXYbJow9gjxBZxDcwYYqJTKrVBClmJ5QaSS6DVqehTqF2B
SmVpcAN+X/HMOed5v3/zFY7rh2cjEXGE23REORPRwAb+8DwWccOX9M1sxLoc
cFX9ml+zy/oLt40rbjV5z63Inn3A91Diutwl92gv60Vc2Pf2t/uSvS8XZZbr
Jm/c27KDAv8lF2TGvaW/yo5vKnoTebddOS/7bnt6233O/tDfRyPS/Kfe4nMy
Zc+6n+JJ38Kv3nR/cK/abyjihJ/ghhhPkptJ/ps+Lc9lw7s7/seeQg2T2HH7
B/ajKKw=
        "]], 
       Line3DBox[{2190, 842, 2427, 637, 3000, 2189, 635, 2426, 634, 2188, 
        2350, 2608, 3015, 2882, 2187, 1228, 2682, 2430, 2186, 2881, 2942, 
        2827, 1226, 2185, 840, 2633, 839, 2184, 2977, 631, 2424, 630, 2183, 
        629, 2423, 628, 2999, 2182, 627, 2422, 626, 2181, 727, 2507, 3022, 
        919, 2180, 1300, 2607, 3014, 2903, 2179, 837, 2941, 2606, 2349, 2178, 
        835}], Line3DBox[{106, 1383, 107, 1384, 108, 796, 1385, 109, 1919}], 
       Line3DBox[CompressedData["
1:eJwV0Esug3EUhvEj0brOMTRgYiDWwLB1KUUkBiyABWh9bS1A69piAy4Da3Bv
XWYGFkEMSAz9OnjynPe85598+YbXN3MbHRGxgrPuiKXeiGWUeyL+UhGndik5
jTe7Ib7uixjkE12Ln5Fpv7NvYtHc0D1yE08oeZvnIhZQ19/zA969WUXipiD3
m7f42M0N3+EWr/orHtVf8pF+rCtiwNyJF/0Fj+jP+VC/zR9IMIG1dMSB/Y7b
irss9uWKXDZnsCePy3PuW/I851Czn5JLmJZnMYOq/WT7+1H07hc/2LX/9g8L
5i93n8jiH9f1M48=
        "]], 
       Line3DBox[{2206, 1461, 2205, 2799, 2929, 2299, 2800, 2352, 2611, 2037, 
        2300, 2610, 2885, 2930, 2511, 2613, 2301, 2612, 2736, 2737, 3028, 
        2908, 2512, 2733, 2302, 2855, 2734, 3027, 2735, 2514, 2586, 2764, 
        2303, 2513, 1998, 2739, 2738, 2516, 2304, 2515, 2436, 2517, 1463, 
        2688, 2438, 2518, 2993, 2305, 2207, 2778, 2931, 2306, 2865, 2779, 
        2932, 2307, 2801, 2886, 2933, 2539, 2543, 2308, 2829, 2689, 2740, 
        2690, 2520, 2741, 2309, 2519, 1651, 2866, 2310, 2208}], 
       Line3DBox[{120, 853, 1918, 119, 545, 1742, 118, 1091, 398, 1637, 117, 
        1146, 116, 1389, 1144, 115, 1388, 114, 1387, 943, 113, 1386, 112, 
        1093, 2014, 111, 939, 1949, 110, 854}], 
       Line3DBox[{2210, 2872, 2947, 2209, 1467, 2211, 2440, 2521, 2994, 2311, 
        2856, 1285, 2934, 2522, 804, 2614, 1046, 2935, 2523, 744, 1235, 947, 
        1050, 746, 2442, 2979, 952, 2524, 1103, 2765, 2437, 2525, 2873, 2978, 
        2212, 2439, 1470, 2213, 2936, 2312, 2214, 2832, 2937, 2313, 2833, 
        2895, 2938, 2540, 954, 955, 678, 2541, 1150, 2781, 3031, 2780, 2867, 
        2314, 2215}], 
       Line3DBox[{2217, 2874, 2948, 2216, 2446, 2526, 2875, 2981, 2218, 2441, 
        2527, 1474, 2691, 2692, 2894, 2939, 2528, 2693, 2834, 2694, 2447, 
        1327, 2830, 1657, 2831, 2696, 2697, 2448, 2835, 2863, 2443, 2864, 
        2836, 2838, 2837, 2449, 1965, 2839, 2444, 2616, 2782, 2783, 2615, 
        2445, 2876, 2980, 2219, 2877, 2949, 2220, 1477, 2221, 2450, 2451, 
        2315, 2857, 2858, 1669, 2859, 2587, 2588, 2529, 2742, 2743, 2452, 
        2617, 2786, 2787, 2785, 3032, 2784, 2316, 2222}], 
       Line3DBox[{2224, 438, 2982, 2223, 427, 1673, 440, 428, 1674, 442}], 
       Line3DBox[{2229, 272, 1898, 808, 451, 1755, 571, 437, 2092, 1250, 449, 
        271, 1108, 2015, 270, 2228, 2961, 269, 2227, 2960, 268, 2226, 267, 
        2959, 2225, 444, 1754, 569, 443, 1753, 568, 430, 1665, 430}], 
       Line3DBox[CompressedData["
1:eJwVzjlOAgEYhuHfBhgtbWztbXDftxMYEgtCwMQD6DFMVEjcxS16BQpkcNfS
xjN4BE3cKh+KN9//vd/MZPpX1wtrXRGxjJdcxGIScYEF/KHdE/HMz7snuyPm
5D634n7iU3nODXA7mYiW/shn5Rn/jlP02Wvcg+1Xr7oTz5+4Z3HPV7hXz83o
dUwj4X7knb2RjdjWp/Tjzv8gp3/LW/umewsT+hHGsed7N7ZPfkwvy1G5y7f5
q863/EfqvnRv2N9sS2hxH3rGXpIj9mvuS6b2YXmIITT5Xv836D5AHkXv/AOm
lTB0
        "]], 
       Line3DBox[{2257, 874, 2472, 664, 3004, 2256, 873, 2620, 872, 2255, 
        2371, 2619, 3016, 2887, 2254, 2471, 2532, 2470, 2253, 689, 2951, 2531,
         1061, 2252, 662, 2469, 661, 2251, 2985, 659, 2468, 658, 2250, 657, 
        2467, 656, 3003, 2249, 654, 2466, 653, 2248, 1254, 1329, 2126, 1328, 
        2247, 2475, 2704, 3025, 977, 2246, 2897, 2950, 2652, 2474, 2245, 
        869}], Line3DBox[CompressedData["
1:eJwVz0suA3AQB+DpRqlNVwRBWxKnYOUERSJdSDgA16iVKOpxAhIUtRIra6GK
erOqE7Dy/Lr4OjO/mfafZucW8vOJiJjmrd1HKiLBQUdEd1vEq2zNXOZdVu2M
yPMi35RtMcu5bIpnea/ax4b82HeeZJPmRZZkVdmjbMJc5Mj8YO7yXkU/zr05
6/aKHPuyP1b1I8mIO/tBfY0Me3a/pPQ/asO+X3/JALuygre26WFFdutmWb2g
RNPNmd2w/oQhbtysq6feHGvNXLfI62rD/Qyj+k8+qNul/Zcdv/fNF4f8A5b7
N+s=
        "]], Line3DBox[{2635, 1169, 2421, 625, 2976, 2177, 834, 2628, 1907}], 
       Line3DBox[{2656, 1183, 2463, 651, 2983, 2244, 868, 2650, 1923}]}, {
       Line3DBox[CompressedData["
1:eJwVzj8vg2EUhvEjUiSdSL+A1WRr12JsgjJaSkSXVtKklejgz2rG3obFSkcS
g8FSHQSLpBaNTZgqwe8drlz3uZ+TJ2d6fbtYHYmIVWRTEYWJiElkMIWNdERO
vygvoWxe5iLexyM+MEBF/8t/eLa/wi98zPmxiFG+stPXDcxvvKa7081zHQvY
RRP3+i87Jfmb93gfQ3mTf7hmp+uvLWST27iR3Cs/yj17DW7xDje9teUn+QBH
OMSM/Qv9g/cT8ytOcZncjJ6+Zf5EG7O6Phf41tuZfCOf85y/ruUO/gHJBTPw

        "]], Line3DBox[CompressedData["
1:eJwVzr1KwlEYgPHXJAsqEN0DF5u6gILGIAoT3HMIMSyxsRpbasndAm1ISL2B
biEwhT4InBr0Qvr9h4fnOee8h3MKp5eVVioiSthZjnhCbS1il3to6AN+QUuX
OVYjZnqPU1hCGnNnBV5wZyXiPRPxyFOzh3pfH3HN+a29E11F134PDV3nc/7g
MX7MfVo/6wku9Bk3+crZl/7VI/7GtS76ww1v8dBeHw/WM7Rxl/yP/5L/Ydtc
CcdYt+5jA5vuvfLAO286l9zlPGfN3ut/vawodg==
        "]], 
       Line3DBox[{1339, 1493, 1494, 2917, 1340, 1580, 2967, 1581, 1730, 1582, 
        2968, 1583, 1360, 1602, 2973, 1603, 1905, 826, 2957, 1885, 922, 923, 
        626, 1621, 1516, 1381, 2946, 1631, 1740, 1632, 2014, 1094, 1744, 1033,
         3027, 1747, 743, 949, 947, 1049, 750, 1310, 2863, 1245, 2091, 1678, 
        1754, 1679, 1921, 1543, 2962, 1774, 642, 1690, 653, 691, 655, 693, 
        2570, 667, 1713, 1556, 1428}], Line3DBox[CompressedData["
1:eJwV0DFLQmEUBuATaEnOCrWoU9EQNjq4NQaBQ2voFEEFLUZrS4sVhEM5SuVg
BS1ltkmjGeL/8B9kj8PDyznvvd93uYXaSeV4ISJ2KScjVlIRq1wuRQzTEbnF
iC/yNM0FOaDInXlLflOiZd6WV95tcMo9I/uW3NElZYINlnnXpeWe7kzW2adq
HlLj0HcdyTEj3Q+/PNHh3P5Rtp31ICe88MqF7ll2OeDPWdeem8kbXYpb81Rm
9Rk2ydG3z8/v0PXkB5+ssc6bfWb+X5z1D15jKgw=
        "]], 
       Line3DBox[{8, 882, 2659, 23, 1271, 2848, 38, 892, 2664, 53, 2156, 352, 
        68, 2169, 363, 83, 2183, 378, 1140, 98, 2197, 395, 113, 551, 2515, 
        128, 1102, 2765, 143, 805, 2615, 158, 2226, 173, 2236, 460, 188, 2250,
         481, 203, 2264, 598, 218}], 
       Line3DBox[{885, 316, 2494, 520, 319, 2500, 528, 333, 2600, 774, 2601, 
        229, 780, 2603, 241, 932, 2682, 383, 385, 2432, 261, 1146, 1145, 2932,
         1396, 1239, 2937, 1403, 433, 2451, 434, 271, 570, 2530, 450, 576, 
        2532, 468, 994, 2712, 501, 995}], Line3DBox[CompressedData["
1:eJwVzj0vg2EchfF/h5akXj4DEtqEWBiUwVcgEbEYKgwSaulQ8WwtiY2ZL2Cy
MGsQJF1Vo+ZKEDYWEr8OV65zzv3cd56hYmlxOxURS5hPR4xmIq4who1sRJ1z
aPdE5HnTdsNTWLBd69NySd7BszcObctyW17hW70jv2JVv9M/5Tf3vjjTG1Gx
P9gT/rat8Q8POzuR133bL4/g197Hf1x2591ZXt/r/isnvGv/4CpmbDWe5QJa
8rk3H7Evj9sOuKlP4EV+4jn7kXyKY2zZ7r07IJ9hsItvqvaG/ULv4BKT9rr9
HwUyMRE=
        "]], 
       Line3DBox[{1345, 1326, 2076, 2075, 2919, 1346, 1440, 2923, 1354, 1445, 
        2927, 1363, 1500, 2955, 1880, 1501, 1883, 831, 2958, 1615, 1512, 1617,
         634, 1624, 636, 1739, 2992, 735, 1636, 937, 1742, 740, 1649, 944, 
        2740, 1042, 749, 956, 678, 1773, 680, 1054, 2743, 1053, 1897, 966, 
        1755, 1057, 1899, 865, 2964, 1900, 1546, 1902, 872, 1707, 663, 1762, 
        2995, 1709, 1719, 1710, 1431}], 
       Line3DBox[{1347, 1578, 2966, 1579, 1348, 1441, 2924, 1355, 1446, 2928, 
        1364, 1502, 2956, 1882, 1503, 1607, 1798, 2998, 1799, 1616, 1513, 
        1618, 1806, 3000, 1807, 1625, 1809, 1808, 1626, 1528, 1638, 2057, 
        2056, 1918, 1650, 1748, 1651, 2118, 2119, 2120, 2039, 3031, 2038, 
        2121, 2122, 2123, 2041, 3032, 2040, 1410, 1539, 1898, 1540, 1683, 
        1816, 3002, 1817, 1694, 1819, 1818, 1695, 1827, 3004, 1828, 1708, 
        1830, 1829, 1711, 1559, 1979, 1560, 1720}], 
       Line3DBox[{1427, 1491, 1925, 1552, 1421, 1487, 1791, 1696, 1821, 2983, 
        1820, 1417, 1483, 1684, 1811, 1810, 1411, 1478, 2982, 1672, 1404, 
        1472, 2948, 1397, 1466, 2947, 1390, 1461, 1383, 1457, 1627, 1520, 
        1377, 1454, 1785, 1619, 1801, 2976, 1800, 1371, 1450, 1783, 1608, 
        1794, 2974, 1793, 1365, 1447, 1598, 2972, 1597, 1356, 1442, 3035, 
        2078, 2077, 1349, 1436, 3034, 2071, 2070, 1333, 1432, 2096, 1561, 
        1721}], Line3DBox[CompressedData["
1:eJwV0L1LglEYhvEn0BKqtd2oySZBhb5GoaGglpwaEloEw01oaIxA0KnFwYyG
QoLKwcmWIGiJhv4Uh6bod4aL+7mv5z2Hw5s/PT9qzkXEAW6yET+YzUesoGf+
RixEPOqrKRcj8rLDf+GP7+OVe8EV94me74K/NL/jXr/Q2+Yp7vSm3jJPcOvs
ei5iDQ19jLr9Bl/Amf6MqvmYX5ZDdyzJE36EX34fWXcM7DKyxj/gg3/ituRh
eg+6zm7qO3Ibe9wAb+k7vWhXkWXs8v30druSPk3/A9fmf8PKKCs=
        "]], 
       Line3DBox[{1125, 769, 1764, 1715, 2952, 1425, 1489, 1778, 662, 1113, 
        1112, 1922, 3019, 863, 1416, 1482, 2961, 1537, 1408, 1476, 2949, 1401,
         1470, 1648, 1394, 2993, 1464, 1647, 1388, 1460, 1916, 1083, 2756, 
        1084, 608, 930, 840, 1375, 1452, 1737, 2991, 1509, 1369, 1449, 1735, 
        2990, 1605, 1362, 1213, 2970, 1596, 717, 1074, 716, 2667, 895, 714, 
        1343, 2988, 1002, 1726, 705, 883}], Line3DBox[CompressedData["
1:eJwVz71LwlEUxvHjkAZBSwRBFPhHZFu0NRUoSZMg2tJSDb1MRUsNNTQ7NDg3
FNFoENKQQnOTY0QoZGKDYNDnN3x5Xs4993Kzlb3Cbioi8lhIR8xORsxhnp+h
tYmI26mIHF3U3dBHeY2umC/rvjIRXfSwoX/HizMFeRMtFLGlb9Mlex3zVbuf
+Nb1UTI/oidmXf6Av6NVnOkGtKz7wQA78gjb/BC/2E/23JnzRoN/sHdMD3V1
8yZ/mtwnX+KVP8e082m5gzf5Chd263IfY7t/uNY36L3uia7jOfk3PvAP9oQy
CQ==
        "]], Line3DBox[CompressedData["
1:eJwVzT0vQ2EYBuBHE1rxA4wimA1dMGjF99JKIwaTdMfQRUQkJiEdMPsLJhbT
SajFKDGQg5KQGGppbCS9Oly53+d+3vec4ep2ZasnIlYZ7Ys4zkaMyIQJ5xsm
eWKKW8bs6nKaZCCiIJ8p0iBvP5SLSO1OzKfMmgss2L3q13QtfljvjdjTley+
uTBvsK9ryXvdH/+8uP+oT2XW937tq91/O8+waZ6Xbd2cvDbX3K/JhB3nXXnH
ARnffHO3yTsfDNKvv5SLLLHMOIfen9u1efD+jCPdlfmTsjsrfNEBSWkxlA==

        "]], Line3DBox[CompressedData["
1:eJwVzi1LQ3EYxuFnYTo8STCJYUaL4DbEJhoEJxYZYlhaWtoQYU0NWlQw+LZP
YDEaBF1xYWowGcQ4mMlm0OCK1wk/7pfnPvtvutbcaGQiYgsPIxFzo8hFTPId
FOSCXKQ3ScQHLaGom3I/4X/oL1ayETPyPP9M3+x76d72ia67L9EXLNg8ui/S
Mzlvc043bZbpBfp812bV5kpuo6rboV+0ov/DEDV53/abVuVbWseY301wx2+7
N2kHLezZXeu6/G76vXyU/nf+EBPeycr3Npf0VXeMA30i99P3+SFO9e92A35c
P0CZn/X2Gv3EPxREMVA=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
OM7qj/vLrlH3l/0/Up7+Qw==
     "]], 
   {RGBColor[1, 0, 0], PointSize[0.05], 
    Point3DBox[
     NCache[{0.42875033932890305`, Rational[1, 4] Pi, 10.413022197970424`}, {
      0.42875033932890305`, 0.7853981633974483, 10.413022197970424`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.05], 
    Point3DBox[
     NCache[{1.9995466661237997`, Rational[1, 4] Pi, -18.01302219797042}, {
      1.9995466661237997`, 0.7853981633974483, -18.01302219797042}]]}},
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{357.412832088235, 196.67673350451355`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, 2 Pi}, {-18.00159804391774, 10.401597788214108`}}, {{
     0, 3.141592653589793}, {0, 6.283185307179586}, {-18.00159804391774, 
     10.401597788214108`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.48769173083864814`, -3.274321092184629, 0.7006983380502945},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.718469868713341*^9, 3.718469928693194*^9, {3.7184702352263203`*^9, 
   3.71847027452195*^9}, 3.718470563473029*^9, 3.719166878839588*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Spin Wave Function", "Section",
 CellChangeTimes->{{3.718732142328045*^9, 3.7187321625067163`*^9}}],

Cell[CellGroupData[{

Cell["Local coordinate for spins in ground state", "Subsubsection",
 CellChangeTimes->{{3.718732171683177*^9, 3.718732214469037*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "4", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718732222979663*^9, 3.718732245544861*^9}, {
  3.718732296369285*^9, 3.7187323861424046`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", "4", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718732373907943*^9, 3.7187324479387903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7192560710846615`*^9, 3.7192560865487347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.719256088277079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "4"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"Y", "[", "i", "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"Z", "[", "i", "]"}], ",", 
        RowBox[{"X", "[", "i", "]"}]}], "]"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7187324507051773`*^9, 3.718732493329486*^9}, {
  3.7187325719667845`*^9, 3.7187326089172707`*^9}, {3.7187326569607725`*^9, 
  3.718732660713532*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"S", "[", "i", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"S0", "[", "i", "]"}], 
      RowBox[{"Z", "[", "i", "]"}]}], "+", 
     RowBox[{
      RowBox[{"SX", "[", "i", "]"}], " ", 
      RowBox[{"X", "[", "i", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"SY", "[", "i", "]"}], " ", 
      RowBox[{"Y", "[", "i", "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718732706571398*^9, 3.718732776011696*^9}, {
  3.719255966968883*^9, 3.7192560361604757`*^9}, {3.719257034445321*^9, 
  3.7192570523931026`*^9}, {3.7192578517250032`*^9, 3.7192578575943522`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7201952622887144`*^9, 3.720195284991826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BJ", "=", 
   RowBox[{"J", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0"},
        {"0", "1", "0"},
        {"0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7201952913076906`*^9, 3.720195301530614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BX", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"Kxy", "0", "0"},
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "\[CapitalGamma]xy", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BY", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "Kxy", "0"},
        {"\[CapitalGamma]xy", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BZ", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "\[CapitalGamma]z", "0"},
        {"\[CapitalGamma]z", "0", "0"},
        {"0", "0", "Kz"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7187328675104713`*^9, 3.7187329200572395`*^9}, {
  3.7187330077931395`*^9, 3.7187330086056814`*^9}, {3.718735101396516*^9, 
  3.718735102193427*^9}, {3.720195316201436*^9, 3.720195327128065*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", " ", "n"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.71873310084011*^9, 3.7187331485621133`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"S0", ",", "SX", ",", "SY"}], "]"}]], "Input",
 CellChangeTimes->{{3.7221830002991314`*^9, 3.7221830264953747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "2", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "I"}], " ", "qa"}], "-", 
        RowBox[{"I", " ", "qb"}]}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BZ", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], ".", "BZ", ".", 
      RowBox[{"S", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "3", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "3", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7187336079394827`*^9, 3.718733658272017*^9}, {
   3.718734416826456*^9, 3.7187344302101526`*^9}, 3.718734581075245*^9, {
   3.718734653416236*^9, 3.7187346775914855`*^9}, {3.7187347489666414`*^9, 
   3.7187348157451925`*^9}, {3.718734861917691*^9, 3.7187348635583997`*^9}, {
   3.7187350812113624`*^9, 3.718735174818839*^9}, {3.7187352323131423`*^9, 
   3.718735241636572*^9}, 3.719257872671686*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"hamiltonian", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SX", "[", "1", "]"}], ",", 
         RowBox[{"SY", "[", "1", "]"}], ",", 
         RowBox[{"SX", "[", "2", "]"}], ",", 
         RowBox[{"SY", "[", "2", "]"}], ",", 
         RowBox[{"SX", "[", "3", "]"}], ",", 
         RowBox[{"SY", "[", "3", "]"}], ",", 
         RowBox[{"SX", "[", "4", "]"}], ",", 
         RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SX", "[", "1", "]"}], ",", 
         RowBox[{"SY", "[", "1", "]"}], ",", 
         RowBox[{"SX", "[", "2", "]"}], ",", 
         RowBox[{"SY", "[", "2", "]"}], ",", 
         RowBox[{"SX", "[", "3", "]"}], ",", 
         RowBox[{"SY", "[", "3", "]"}], ",", 
         RowBox[{"SX", "[", "4", "]"}], ",", 
         RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7187352687029185`*^9, 3.718735461164908*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UPH", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
           RowBox[{"Kxy", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{"J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
        " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
      {"0", "0", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0", 
       "0", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
      {"0", "0", "0", "0", 
       RowBox[{
        RowBox[{"-", "J"}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]z"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
      {"0", "0", "0", "0", "0", "0", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
      {"0", "0", "0", "0", "0", "0", 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.7221831835596743`*^9, 3.7221832124161973`*^9}, {
  3.7221832443262568`*^9, 3.722183251444418*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
         RowBox[{"Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"J", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", "0", ",", 
     "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "J"}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], ",", 
     "0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "J"}], "+", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[CapitalGamma]z"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"\[CapitalGamma]z", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"J", "+", "Kz"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"J", "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
            " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7221832619349065`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"hamiltonian", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"S0", "[", "1", "]"}], ",", 
         RowBox[{"S0", "[", "2", "]"}], ",", 
         RowBox[{"S0", "[", "3", "]"}], ",", 
         RowBox[{"S0", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719145618267482*^9, 3.719145688467393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dia", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"S0", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"S0", "[", "2", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S0", "[", "2", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
              RowBox[{"S0", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", 
                   RowBox[{"\[CapitalGamma]z", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
                 RowBox[{"SX", "[", "4", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"Kz", "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}]},
        {
         RowBox[{
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"S0", "[", "1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"S0", "[", "1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"SX", "[", "1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"SY", "[", "1", "]"}]}], "-", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"SY", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "1", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
              RowBox[{"S0", "[", "1", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"SX", "[", "1", "]"}]}], "+", 
                RowBox[{"Kxy", " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "1", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "1", "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"J", " ", 
                    RowBox[{"S0", "[", "1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
                   RowBox[{"\[CapitalGamma]xy", " ", 
                    RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"S0", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"S0", "[", "3", "]"}]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"S0", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"S0", "[", "4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"S0", "[", "4", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"S0", "[", "4", "]"}]}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SX", "[", "4", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SX", "[", "4", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S0", "[", "4", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                    RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]},
        {
         RowBox[{
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"S0", "[", "3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"S0", "[", "3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"SX", "[", "3", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "J", " ", 
              RowBox[{"S0", "[", "1", "]"}]}], "-", 
             RowBox[{"Kz", " ", 
              RowBox[{"S0", "[", "1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"Kz", "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"S0", "[", "1", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"Kz", "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "+", 
             RowBox[{"Kz", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}], "-", 
             RowBox[{"4", " ", "\[CapitalGamma]z", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"SY", "[", "3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"SY", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"S0", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "3", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
              RowBox[{"S0", "[", "3", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"SX", "[", "3", "]"}]}], "+", 
                RowBox[{"Kxy", " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "3", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "3", "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"J", " ", 
                    RowBox[{"S0", "[", "3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
                   RowBox[{"\[CapitalGamma]xy", " ", 
                    RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7221833443908186`*^9, 3.7221833590563393`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "4"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"S0", "[", "i", "]"}], "=", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{"SX", "[", "i", "]"}], "=", "0"}], ",", 
      RowBox[{
       RowBox[{"SY", "[", "i", "]"}], "=", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.722181581380185*^9, 3.7221816386254663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"qa", "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{"qb", "=", "0"}]}], "Input",
 CellChangeTimes->{{3.722183462166958*^9, 3.722183467949423*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.722183470919118*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.722183470919118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"-", "dia"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.719145901977542*^9, 3.7191459794530745`*^9}, {
  3.7191461088974113`*^9, 3.7191461220617943`*^9}, {3.722181646179257*^9, 
  3.7221816643801446`*^9}, {3.7221833803893976`*^9, 3.7221833864846973`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7221816476949573`*^9, 3.7221816649895406`*^9}, 
   3.7221834163601956`*^9, 3.7221834760164304`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"qa", ",", "qb"}], "]"}]], "Input",
 CellChangeTimes->{{3.722183505666123*^9, 3.7221835148835497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "J"}], "-", "Kz"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"J", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"J", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"J", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"J", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"J", "+", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7191465723831377`*^9, 3.7191465842244053`*^9}, 
   3.722182247670226*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
    RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7221822513645916`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "J"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kz"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"J", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"J", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722182344583778*^9, 3.722182354638626*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
    RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.722182357608081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "J"}], "-", "Kz"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"J", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"J", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"J", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"J", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722182387769373*^9, 3.722182395225386*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
    RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7221823994294977`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "J"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]xy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "J", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"J", "+", 
      FractionBox["Kz", "2"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"Kz", "-", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"Kz", "-", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.722182452252172*^9, 3.722182462098423*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
    RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.722182501754485*^9, 3.72218250183261*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "Kz"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], " ", "+", 
   RowBox[{"\[CapitalGamma]xy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"Kxy", "-", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7191465965626287`*^9, 3.7191466419501476`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Kz"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"\[CapitalGamma]xy", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"Kxy", "-", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], "/", 
  "2"}]], "Input",
 CellChangeTimes->{{3.7191537164180717`*^9, 3.719153745338648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"UPH", "+", 
     RowBox[{"ConjugateTranspose", "[", "UPH", "]"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "qa", ",", "qb", ",", "Kxy", ",", "Kz", ",", "\[CapitalGamma]xy", ",",
          "\[CapitalGamma]z", ",", "\[Theta]", ",", "\[Phi]", ",", "J"}], 
        "}"}], ",", "Reals"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7191540591894045`*^9, 3.7191541202392416`*^9}, {
  3.719154261149852*^9, 3.7191543173511686`*^9}, {3.7201955685801353`*^9, 
  3.720195571140877*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
          RowBox[{"Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"J", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "J"}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
       " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0", 
      "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
          RowBox[{"Kxy", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"J", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       RowBox[{"-", "J"}], "+", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]z"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
      "0", 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"J", "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "J"}], "+", 
       RowBox[{"\[CapitalGamma]z", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
      RowBox[{"\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]z"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"J", "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "J"}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}], 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
       " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
      "0", "0", 
      RowBox[{
       RowBox[{"\[CapitalGamma]xy", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", "\[CapitalGamma]xy", 
           " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
      "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7191543238043857`*^9, 3.720195577960662*^9, 
  3.7221817226939125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", 
    RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.719159524601757*^9, 3.719159629008116*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
     {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
     {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
     {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.719159614143425*^9, 3.7191596294912243`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", 
   RowBox[{
   "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",",
     "\[CapitalGamma]z_", ",", "\[Theta]_", ",", "\[Phi]_", ",", "J_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "J"}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]},
        {"0", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}], "0",
          "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "J"}], "+", "Kxy", "-", 
             RowBox[{"Kxy", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"J", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "0", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "\[CapitalGamma]z"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0"},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{"-", "J"}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "0", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]},
        {"0", "0", 
         RowBox[{
          RowBox[{"-", "\[CapitalGamma]z"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"J", "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "0", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ")"}]}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "J"}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "0", "0", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
             " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}], 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "0"},
        {
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"qa", "+", "qb"}], ")"}]}]]}], " ", "\[CapitalGamma]z", 
          " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
         "0", "0", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
              "\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy", 
              " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "Kxy",
                 " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "qb"}]]}], ")"}], " ", "J", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], "]"}]}], "0", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J"}], "-", "Kxy", "+", "Kz", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Kxy", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", "\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "\[CapitalGamma]z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}]}]], "Input",
 CellChangeTimes->{{3.719153761308741*^9, 3.719153879104764*^9}, {
  3.719154350678459*^9, 3.7191544283882246`*^9}, {3.719159637553063*^9, 
  3.7191596400528793`*^9}, {3.719159681622105*^9, 3.71915972227676*^9}, {
  3.7201956189966183`*^9, 3.720195639904683*^9}, {3.7201956989649115`*^9, 
  3.720195768146266*^9}, {3.720196014437434*^9, 3.7201961020291047`*^9}, {
  3.722181751640892*^9, 3.7221817616485486`*^9}, {3.7221817991703854`*^9, 
  3.722181805312107*^9}, {3.7221818417518444`*^9, 3.7221818496620555`*^9}, {
  3.722181901781203*^9, 3.7221819105019436`*^9}, {3.722181964088851*^9, 
  3.7221819710393095`*^9}, {3.7221825268147745`*^9, 3.722182631510333*^9}, {
  3.722183545946581*^9, 3.7221836223462253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HH", "[", 
   RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
  RowBox[{"H", "[", 
   RowBox[{
   "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", 
    "p\[CapitalGamma]z", ",", "p\[Theta]", ",", "p\[Phi]", ",", "pJ"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.719154512929757*^9, 3.7191545426633015`*^9}, {
  3.7191547861653466`*^9, 3.719154831509534*^9}, {3.720195814110454*^9, 
  3.7201958157410855`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EE", "[", 
   RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"HH", "[", 
     RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7191593282638855`*^9, 3.719159393592677*^9}, {
  3.71916591799345*^9, 3.7191659255521107`*^9}, {3.719167213595196*^9, 
  3.7191672222623262`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EE", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7221820379332633`*^9, 3.7221820411455326`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "7.035230052864342`"}], "+", 
    RowBox[{"2.1092298124790007`*^-15", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "6.046174313312296`*^-16"}], "-", 
    RowBox[{"1.316055738385774`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.2876629906814765`*^-16"}], "+", 
    RowBox[{"0.4638149097541504`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3.0056759010543433`*^-18"}], "+", 
    RowBox[{"3.9254305472013775`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.368643866843214`*^-16", "-", 
    RowBox[{"0.46381490975415013`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.426830625991699`*^-16", "-", 
    RowBox[{"3.9254305472013784`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"8.890631191443586`*^-16", "+", 
    RowBox[{"1.3160557383857743`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"7.035230052864342`", "\[VeryThinSpace]", "+", 
    RowBox[{"2.0541065298653363`*^-15", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.722182041767918*^9, 3.7221826410343685`*^9, 
  3.7221836296925397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], ",", 
          "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"2", "Pi"}], ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], 
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}], "+", 
           RowBox[{"2", "Pi"}]}], ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}], ",", 
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "Pi"}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"2", "Pi"}], "+", 
      RowBox[{"4", 
       RowBox[{"Pi", "/", 
        RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<Y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<M\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.05"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.08"}], "}"}]}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"2", "Pi"}], "+", 
         RowBox[{"4", 
          RowBox[{"Pi", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7191567285378084`*^9, 3.719156814767311*^9}, {
   3.7191573953391294`*^9, 3.7191574111783323`*^9}, {3.7191574493538713`*^9, 
   3.7191575303129835`*^9}, {3.7191576768399243`*^9, 
   3.7191576783252773`*^9}, {3.7191577236135664`*^9, 3.719157896860779*^9}, {
   3.7191579689909306`*^9, 3.7191582388227515`*^9}, {3.7191583043279276`*^9, 
   3.719158368850711*^9}, {3.719158399241756*^9, 3.7191584139823775`*^9}, {
   3.719158586816337*^9, 3.719158701020711*^9}, {3.7191587711578693`*^9, 
   3.719158786507741*^9}, 3.7191588225662704`*^9, {3.719158918027117*^9, 
   3.719158918710702*^9}, {3.719158968997963*^9, 3.719158997027031*^9}, {
   3.719159071840695*^9, 3.7191591170479364`*^9}, {3.719159168889499*^9, 
   3.71915924896544*^9}, {3.719159405312111*^9, 3.7191594213555417`*^9}, {
   3.719159958186528*^9, 3.7191600015401573`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd2HlcTfkfx/FbSdb2RSqKQlljIjncrxEtIyW7nwwRMaIyUpqSZRrDL1to
iIpSMZI2VKfuodJClBvty+22ItqVjPszvr/Pp4d7/rn/n3uf9/t9vwyc9zm6
yPJ4vLMyPN6/nyr6PU/iT55fdCJIuF7NUJczaBqaKpYp5vt8HqekFKPDrbnV
2i95KOIb/3DFV9ymzUWFdvvHrn7D9/shZl/qgCZ3WpnzPOXcwfcMSfHyP6bK
SbquK6/s7eFvurTz5rpAee6A2dp68YJPfN6/T1oNez0kepx89Re+e8jaOJ3m
ejbxeuVNy2QZ0uY3Mmq6oSx3cZLd2raXcqRBVG7iaqTCCdNHMU7jhxK/qjEf
X+zR5NQCUtKTLIeRFZd03wqDtblxuzKTFvw8guwWZG4I2qLDHXfWEJ2MGUVu
L1glu1tfl3t3ck0sl6dIovOWhn24pcOViTxe1pxSJsa/nZM3D9XmwpVbR/XG
qZAvOm/qVYdpcs2vV18IYFVJkYp6QUiiCud0c+f99yI1ErYlz353lCa3euQ+
o6IudSJc+il5W7k25+2jN/OiriZpCLZscsrR4WQ/DXR38rVI5puagWwNXW60
6guFbPsxZOq2hWL3xTrc0tk2Kd5e2qRz/JvZk8dqc5LWB/ERf44lxR+Nmttv
aXDjktfu2BqiQ15eHb0g44Qytzvw6gN5VpfY6r58Xv7yk8C8/fUavUI9sqvK
w+xgRT87x/nh6TE944ijavjZhfrdrG1Xw+LXI/VJy0LTyoj0YZyFTEv9hmB9
sk9ZtixJTo1bHLxopf0kA6J/s6qy55oWN9xDaYd/vAFZfc9/dqHdWE5ufV9Z
v9kEkpn36/FHaTqcetYP2s25E4hR15htZV/fZ6PPW8loh4kkdoTFenkvHa4w
uScpWjyR/FVYo328WpvzWnBI0cfNkPhN9HQNF2lxK59q5oZ0G5L23eFJ4as0
uCW1Q+2m/GFEvE7e/NFqowrXu8jDp1NpElH0rDrhJlLgBBNm7p8RNYkU5MfN
ySaNgnQl+af3zSaTGJUrdh3HOwTe1mvyvTMmk5b+Y3tsjg/jfpLvv3DHYQoZ
MH1216BZhasdraUwtmIK2bzfdEdLgAYXPd6uVLjFmNzOuD9gIDOGO5by+ldJ
pzFZZ9V4YKPKWM4gpOLhdl8TMmXfrFmjA3S44Lrgmmi1qcTt/x7AxwVVX+ea
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
LvrY+38P/wOiy+mv
   "], {}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    TagBox[
     InsetBox["X", {0.05, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.499592559330068, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.493987661723263`, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["X", {10.321975511965977`, 0.08}], "InsetString"]},
  Frame->True,
  FrameLabel->{None, None},
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 13}}, {{
     0, 13.53838276411646}, {0, 13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.719159278222302*^9, 3.7191594349749727`*^9, 
  3.7191596604471765`*^9, 3.7191597410524316`*^9, 3.7191600146219683`*^9, 
  3.7191607640900145`*^9, 3.719161159915029*^9, 3.719164495196309*^9, 
  3.7191652801161985`*^9, 3.7191671913458347`*^9, 3.719167235831078*^9, 
  3.719249920142062*^9, 3.719249951393591*^9, 3.719250983438299*^9, 
  3.7201958636880074`*^9, 3.7201959178082542`*^9, 3.7201959541721845`*^9, 
  3.720196131305456*^9, 3.72019617350751*^9, 3.7201966237121263`*^9, 
  3.722182058931*^9, 3.7221836493905907`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 110, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[692, 25, 155, 3, 86, "Section"],
Cell[850, 30, 26, 0, 31, "Input"],
Cell[879, 32, 2099, 45, 192, "Input"],
Cell[2981, 79, 957, 25, 31, "Input"],
Cell[3941, 106, 1048, 29, 72, "Input"],
Cell[CellGroupData[{
Cell[5014, 139, 1649, 45, 92, "Input"],
Cell[6666, 186, 186896, 3078, 212, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193611, 3270, 109, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[193745, 3275, 133, 1, 39, "Subsubsection"],
Cell[193881, 3278, 1775, 55, 92, "Input"],
Cell[195659, 3335, 1145, 39, 92, "Input"],
Cell[CellGroupData[{
Cell[196829, 3378, 269, 7, 31, "Input"],
Cell[197101, 3387, 125, 3, 31, "Output"]
}, Open  ]],
Cell[197241, 3393, 619, 17, 52, "Input"],
Cell[197863, 3412, 758, 20, 31, "Input"],
Cell[198624, 3434, 212, 5, 52, "Input"],
Cell[198839, 3441, 798, 22, 58, "Input"],
Cell[199640, 3465, 2541, 69, 160, "Input"],
Cell[202184, 3536, 481, 14, 31, "Input"],
Cell[202668, 3552, 164, 3, 31, "Input"],
Cell[202835, 3557, 1599, 42, 31, "Input"],
Cell[204437, 3601, 1381, 36, 52, "Input"],
Cell[CellGroupData[{
Cell[205843, 3641, 12740, 333, 175, InheritFromParent],
Cell[218586, 3976, 12077, 330, 296, "Output"]
}, Open  ]],
Cell[230678, 4309, 650, 18, 31, "Input"],
Cell[231331, 4329, 31797, 737, 100, InheritFromParent],
Cell[263131, 5068, 558, 16, 52, "Input"],
Cell[CellGroupData[{
Cell[263714, 5088, 169, 3, 52, "Input"],
Cell[263886, 5093, 70, 1, 31, "Output"],
Cell[263959, 5096, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264066, 5102, 345, 6, 31, "Input"],
Cell[264414, 5110, 4451, 115, 166, "Output"]
}, Open  ]],
Cell[268880, 5228, 151, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[269056, 5235, 2857, 80, 103, "Input"],
Cell[271916, 5317, 853, 24, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272806, 5346, 2841, 81, 82, "Input"],
Cell[275650, 5429, 851, 24, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276538, 5458, 3412, 95, 118, "Input"],
Cell[279953, 5555, 853, 24, 48, "Output"]
}, Open  ]],
Cell[280821, 5582, 2836, 81, 82, "Input"],
Cell[283660, 5665, 892, 25, 46, "Input"],
Cell[284555, 5692, 782, 22, 33, "Input"],
Cell[285340, 5716, 844, 25, 33, "Input"],
Cell[CellGroupData[{
Cell[286209, 5745, 683, 16, 31, "Input"],
Cell[286895, 5763, 23421, 625, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310353, 6393, 279, 6, 31, "Input"],
Cell[310635, 6401, 1179, 28, 140, "Output"]
}, Open  ]],
Cell[311829, 6432, 35252, 864, 212, "Input"],
Cell[347084, 7298, 467, 11, 31, "Input"],
Cell[347554, 7311, 405, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[347984, 7325, 148, 3, 31, "Input"],
Cell[348135, 7330, 1139, 25, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349311, 7360, 10342, 301, 192, "Input"],
Cell[359656, 7663, 6846, 123, 277, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
