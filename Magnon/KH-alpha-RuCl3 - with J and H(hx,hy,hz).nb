(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1363364,      26784]
NotebookOptionsPosition[   1357273,      26682]
NotebookOutlinePosition[   1357649,      26698]
CellTagsIndexPosition[   1357606,      26695]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phy", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phz", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"reflection", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.20358469308229177`", ",", "8.830365851876385"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"1.183807315371466", ",", "7.89315877357795"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.427936028276957", ",", "7.89315877357795"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.427009085610154", ",", "8.830365851876385"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.915266511421139", ",", "8.830365851876385"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8954891337103135`", ",", "7.857112347489549"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.158468281659827", ",", "7.89315877357795"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9.157541338993026", ",", "8.830365851876385"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11.438443979319757`", ",", "10.416408599766045`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"11.438443979319757`", ",", "2.0536377472569285`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"4.6522873634716255`", ",", "8.037344477931555"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.671137798515646", ",", "11.497801382418086`"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timereversal", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.8247221068682342`", ",", "5.108960682088044"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8247221068682342`", ",", "9.335015817114009"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.5364039252070825`", ",", "9.298969391025608"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.5364039252070825`", ",", "5.045491112594247"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.6522873634716255`", ",", "8.037344477931555"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.671137798515646", ",", "11.497801382418086`"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cobination", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.8247221068682342`", ",", "5.108960682088044"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8247221068682342`", ",", "9.335015817114009"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.5364039252070825`", ",", "9.298969391025608"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.5364039252070825`", ",", "5.045491112594247"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11.438443979319757`", ",", "10.416408599766045`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"11.438443979319757`", ",", "2.0536377472569285`"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]},
          {
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
           "0"},
          {
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}]},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}], "0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EE", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"HHh", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<E(meV)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Yellow", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"timereversal", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.17", ",", 
                RowBox[{"0.17", "*", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"reflection", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.14", ",", 
                RowBox[{"0.14", "*", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"cobination", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.11", ",", 
                RowBox[{"0.11", "*", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<X\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "0.25"}], "}"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
              "0.25"}], "}"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<Y\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.25"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"4", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", "3"}]}], "+", "0.16"}], ",", "0.25"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<M\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"4", 
                RowBox[{"Pi", "/", "3"}]}], "+", 
               RowBox[{"4", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
              "0.25"}], "}"}]}], "]"}], ",", 
          RowBox[{"Inset", "[", 
           RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"4", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.25"}], "}"}]}], 
           "]"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7223668735474586`*^9, 3.722367037314554*^9}, 
   3.722367210387845*^9, {3.722367258580003*^9, 3.722367259615691*^9}, {
   3.7223675093763423`*^9, 3.722367694668614*^9}, {3.722367813589961*^9, 
   3.722367841350484*^9}, 3.7226191272574887`*^9, {3.7226192205550737`*^9, 
   3.7226192225711536`*^9}, {3.7226192557662916`*^9, 3.722619339767094*^9}, {
   3.7226199936100273`*^9, 3.7226200053012133`*^9}, {3.72262004288863*^9, 
   3.7226200433886576`*^9}, 3.7226326716674647`*^9, {3.722632704579568*^9, 
   3.7226327060235014`*^9}, {3.7247014862614145`*^9, 
   3.7247014914439836`*^9}, {3.7251325544891005`*^9, 
   3.7251325702235885`*^9}, {3.725132623663228*^9, 3.725132645549859*^9}, 
   3.725132718064534*^9, {3.7251327623398995`*^9, 3.725132766634314*^9}, {
   3.7251328078559604`*^9, 3.725132813538598*^9}, {3.725132876200553*^9, 
   3.7251328779475827`*^9}, {3.7251329158604383`*^9, 
   3.7251329248200655`*^9}, {3.725902604380831*^9, 3.72590260953881*^9}, {
   3.7259030217076893`*^9, 3.725903022398991*^9}, {3.725903125147027*^9, 
   3.725903128623431*^9}, {3.725903170006427*^9, 3.7259031731899567`*^9}, {
   3.7259034485591516`*^9, 3.7259034533685055`*^9}, {3.7259039637610626`*^9, 
   3.725904011823818*^9}, {3.725904099186993*^9, 3.725904105192998*^9}, {
   3.725904157086914*^9, 3.725904157633816*^9}, {3.72590433227851*^9, 
   3.7259043683156705`*^9}, 3.7259044148184805`*^9, {3.7262571078515034`*^9, 
   3.726257119321848*^9}, {3.726257236972904*^9, 3.7262572429252944`*^9}, 
   3.7262573371285343`*^9, {3.7262573998325596`*^9, 3.726257405487539*^9}, {
   3.726321091130647*^9, 3.72632110039561*^9}, 3.7263211604868426`*^9, {
   3.726321326676736*^9, 3.726321334457922*^9}, {3.7263214303255997`*^9, 
   3.7263214323520684`*^9}, {3.726321679803461*^9, 3.7263216835053043`*^9}, {
   3.726321729567436*^9, 3.7263217398860455`*^9}, {3.726322136287897*^9, 
   3.7263221441302013`*^9}, {3.726322542052599*^9, 3.7263225731789703`*^9}, {
   3.7263286077667494`*^9, 3.726328610276001*^9}, {3.726333050539727*^9, 
   3.7263330537908726`*^9}, {3.7264257048409686`*^9, 3.72642571410821*^9}, {
   3.7265830781997695`*^9, 3.7265830895872064`*^9}, {3.7266270603438635`*^9, 
   3.7266270775780225`*^9}, {3.726627555198803*^9, 3.726627599532218*^9}, {
   3.726627788294796*^9, 3.7266278018441963`*^9}, {3.726627846626136*^9, 
   3.7266278470636578`*^9}, {3.7266282883434753`*^9, 3.726628292138735*^9}, {
   3.726629512216957*^9, 3.7266295124357185`*^9}, {3.7266295808779964`*^9, 
   3.72662958188111*^9}, {3.7266297084411926`*^9, 3.7266297110169992`*^9}, {
   3.7266302775498657`*^9, 3.7266302810816784`*^9}, 3.726630381044924*^9, {
   3.726704354400067*^9, 3.7267043571038246`*^9}, {3.7267043931926165`*^9, 
   3.726704398381815*^9}, {3.726704432007569*^9, 3.7267044332424755`*^9}, {
   3.7267045716893377`*^9, 3.726704585896286*^9}, {3.7267047620083237`*^9, 
   3.7267047646657467`*^9}, 3.726704799503436*^9, {3.726704854887476*^9, 
   3.7267048585051236`*^9}, {3.726705324423644*^9, 3.7267053251893063`*^9}, 
   3.726705426790486*^9, {3.726705609675167*^9, 3.726705612503893*^9}, {
   3.726705817613204*^9, 3.7267058208330293`*^9}, {3.7267059880830116`*^9, 
   3.7267059901773243`*^9}, {3.7267066620104427`*^9, 
   3.7267066649643326`*^9}, {3.7267067699256907`*^9, 3.726706770348095*^9}, {
   3.726706856321677*^9, 3.7267068569154606`*^9}, {3.7267069936502094`*^9, 
   3.726706997510495*^9}, {3.7267071091160183`*^9, 3.726707112820583*^9}, 
   3.7267072024137774`*^9, {3.726707291604254*^9, 3.7267072938641396`*^9}, {
   3.7267075331505394`*^9, 3.72670753771403*^9}, {3.7267076370747075`*^9, 
   3.726707645842407*^9}, {3.7267077160342703`*^9, 3.7267077165811677`*^9}, {
   3.7267077764134016`*^9, 3.7267077882606325`*^9}, {3.7267078608419323`*^9, 
   3.7267078629362125`*^9}, {3.726707911701049*^9, 3.7267079231513896`*^9}, {
   3.726708021040066*^9, 3.72670803083998*^9}, {3.7267080876942616`*^9, 
   3.72670814607559*^9}, {3.726708230930764*^9, 3.7267082548667855`*^9}, {
   3.726708414720706*^9, 3.7267084372284327`*^9}, {3.726708501378209*^9, 
   3.7267085037382083`*^9}, {3.7267085582408266`*^9, 
   3.7267085606007967`*^9}, {3.7267086585500813`*^9, 
   3.7267086657862873`*^9}, {3.7267087454565043`*^9, 
   3.7267087508481755`*^9}, {3.7267087968093953`*^9, 
   3.7267087971062837`*^9}, {3.7267088459150496`*^9, 
   3.7267088499633126`*^9}, {3.7267088906044865`*^9, 
   3.7267088972627773`*^9}, {3.72670893593587*^9, 3.726708946624184*^9}, {
   3.726708993234175*^9, 3.7267089934377995`*^9}, {3.7267090251485333`*^9, 
   3.7267090256023283`*^9}, {3.726709075799428*^9, 3.726709086771551*^9}, {
   3.7267091425984077`*^9, 3.7267091432859535`*^9}, 3.7267092070190935`*^9, {
   3.7267092601677017`*^9, 3.7267092609338665`*^9}, {3.726709302494812*^9, 
   3.7267093038392105`*^9}, {3.7267094075042458`*^9, 
   3.7267094077698946`*^9}, {3.7267094420049496`*^9, 
   3.7267094434767947`*^9}, {3.7267094807270107`*^9, 3.726709482792408*^9}, {
   3.7267095228420935`*^9, 3.7267095236708493`*^9}, {3.7267095605139074`*^9, 
   3.7267095647492313`*^9}, {3.7267096570157948`*^9, 
   3.7267096572189307`*^9}, {3.7267097068307314`*^9, 3.726709710644302*^9}, {
   3.726709753519452*^9, 3.7267097626938725`*^9}, {3.7267098111110425`*^9, 
   3.7267098116735697`*^9}, 3.7267098422065277`*^9, {3.7267098751969485`*^9, 
   3.7267098764321404`*^9}, {3.7267099256163635`*^9, 3.7267099263509064`*^9}, 
   3.7267099598352757`*^9, {3.726709994850301*^9, 3.72670999588161*^9}, {
   3.726710051433663*^9, 3.7267100560285797`*^9}, {3.7267101335848308`*^9, 
   3.726710134131734*^9}, 3.726710240922762*^9, {3.72671035598461*^9, 
   3.7267103589539557`*^9}, {3.726710413884591*^9, 3.7267104151505604`*^9}, {
   3.726710472557659*^9, 3.726710476189285*^9}, {3.7267106484886236`*^9, 
   3.7267106495199313`*^9}, {3.726710748536321*^9, 3.7267107501462364`*^9}, {
   3.726710816381513*^9, 3.7267108180534687`*^9}, {3.7270300541236277`*^9, 
   3.727030079966696*^9}, {3.727113143084126*^9, 
   3.7271131511923475`*^9}},ExpressionUUID->"375d6f30-217e-4957-a3a1-\
1e99bf7db312"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Cqd6Tv0pNRIgPuX//1n9DXHfrJc=
       "]], LineBox[CompressedData["
1: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
zNHiwL7//+/0Hyy0JYo=
       "]], LineBox[CompressedData["
1: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
/7/K/wFH5lxf
       "]], LineBox[CompressedData["
1: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
+c6PO71ZmxVh3////93/ACt1IB4=
       "]]},
     Annotation[#, "Charting`Private`Tag$104653#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     RGBColor[1, 1, 0], 
     CircleBox[{1.8247221068682342`, 5.108960682088044}, {0.17, 0.34}]}, {
     RGBColor[1, 1, 0], 
     CircleBox[{1.8247221068682342`, 9.335015817114009}, {0.17, 0.34}]}, {
     RGBColor[1, 1, 0], 
     CircleBox[{7.5364039252070825`, 9.298969391025608}, {0.17, 0.34}]}, {
     RGBColor[1, 1, 0], 
     CircleBox[{7.5364039252070825`, 5.045491112594247}, {0.17, 0.34}]}, {
     RGBColor[1, 1, 0], 
     CircleBox[{4.6522873634716255`, 8.037344477931555}, {0.17, 0.34}]}, {
     RGBColor[1, 1, 0], 
     CircleBox[{4.671137798515646, 11.497801382418086`}, {0.17, 0.34}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{0.20358469308229177`, 8.830365851876385}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{1.183807315371466, 7.89315877357795}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{2.427936028276957, 7.89315877357795}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{3.427009085610154, 8.830365851876385}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{5.915266511421139, 8.830365851876385}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{6.8954891337103135`, 7.857112347489549}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{8.158468281659827, 7.89315877357795}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{9.157541338993026, 8.830365851876385}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{11.438443979319757`, 10.416408599766045`}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{11.438443979319757`, 2.0536377472569285`}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{4.6522873634716255`, 8.037344477931555}, {0.14, 0.28}]}, {
     RGBColor[1, 0, 0], 
     CircleBox[{4.671137798515646, 11.497801382418086`}, {0.14, 0.28}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{1.8247221068682342`, 5.108960682088044}, {0.11, 0.22}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{1.8247221068682342`, 9.335015817114009}, {0.11, 0.22}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{7.5364039252070825`, 9.298969391025608}, {0.11, 0.22}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{7.5364039252070825`, 5.045491112594247}, {0.11, 0.22}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{11.438443979319757`, 10.416408599766045`}, {0.11, 0.22}]}, {
     RGBColor[0, 1, 0], 
     CircleBox[{11.438443979319757`, 2.0536377472569285`}, {0.11, 0.22}]}, 
    TagBox[
     InsetBox["X", {0.15, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.509592559330068, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.593987661723263`, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {13.388382764116457`, 0.25}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"E(meV)\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{}, {}}}, {{
     Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{}, {}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7226193778308096`*^9, 3.7226200206947575`*^9, 3.722620067628315*^9, 
   3.722632690974695*^9, 3.722632730049939*^9, 3.7241830396106834`*^9, 
   3.724183191791233*^9, 3.724605244584672*^9, 3.724633563595621*^9, 
   3.7246354681036725`*^9, 3.724697350657639*^9, 3.7247012584420433`*^9, 
   3.724701508953952*^9, 3.7247021312977257`*^9, 3.7247041967139206`*^9, 
   3.7247176043563747`*^9, 3.7251326728048553`*^9, 3.72513270340987*^9, 
   3.7251327361204605`*^9, 3.7251327933934436`*^9, 3.7251328312249775`*^9, 
   3.725132894879331*^9, 3.7251329417603874`*^9, 3.725902629771463*^9, 
   3.7259030378893757`*^9, 3.725903069182373*^9, 3.725903146357397*^9, 
   3.7259031899808054`*^9, 3.725903467609891*^9, 3.725904031338069*^9, 
   3.7259041212219543`*^9, 3.725904175040104*^9, 3.725904386178921*^9, 
   3.7259044324825907`*^9, 3.7262571441440735`*^9, 3.726257259410361*^9, 
   3.726257352442111*^9, 3.7262574239260316`*^9, 3.726321123847396*^9, 
   3.7263211849126124`*^9, 3.7263213517241907`*^9, 3.726321453177374*^9, 
   3.7263217088972054`*^9, 3.7263217597090187`*^9, 3.726322165739993*^9, 
   3.726322589945983*^9, 3.7263286386128235`*^9, 3.7263330734802837`*^9, 
   3.726425741090399*^9, 3.7265831198353796`*^9, 3.7265862797806406`*^9, 
   3.7265963480290976`*^9, 3.7265966394056206`*^9, 3.726627095367158*^9, 
   3.726627617364192*^9, 3.726627820160326*^9, 3.7266278648254623`*^9, 
   3.726628309031405*^9, 3.726629528922926*^9, 3.7266296011106634`*^9, 
   3.7266296834233756`*^9, 3.726629730805475*^9, 3.7266303004398384`*^9, 
   3.7266304060646114`*^9, 3.7267042005319614`*^9, 3.7267043731092052`*^9, 
   3.7267044147204027`*^9, 3.726704451672267*^9, 3.7267046048843393`*^9, 
   3.7267047847341757`*^9, 3.7267048168016768`*^9, 3.7267049093765574`*^9, 
   3.7267051894334965`*^9, 3.726705341301696*^9, 3.7267054446413155`*^9, 
   3.7267056279442945`*^9, 3.7267058384618497`*^9, 3.7267060076337852`*^9, 
   3.7267103750823355`*^9, 3.7267104427550764`*^9, 3.726710494784868*^9, 
   3.726710669915079*^9, 3.726710768925312*^9, 3.7267108356033325`*^9, 
   3.7269423658206673`*^9, 3.727026586259166*^9, 3.727028960537774*^9, 
   3.7270300962689595`*^9, 3.727030158003232*^9, 3.7270302622841816`*^9, 
   3.727030323985633*^9, 3.7270319612000194`*^9, 3.7270321874296284`*^9, 
   3.7270322874993014`*^9, 3.727032456940895*^9, 3.7271062740521154`*^9, {
   3.727106441271124*^9, 3.7271064592683926`*^9}, 3.72710653752652*^9, 
   3.727106608756544*^9, 3.727106659572587*^9, 3.727106758304076*^9, 
   3.727106812478902*^9, 3.7271069002710276`*^9, 3.727106974416204*^9, 
   3.727107012056694*^9, 3.72710717708969*^9, 3.7271072326410093`*^9, 
   3.727107276392317*^9, 3.7271073317868443`*^9, 3.7271074202772584`*^9, 
   3.7271074561513968`*^9, 3.7271075403514676`*^9, 3.727107702522173*^9, 
   3.727112574223573*^9, 3.727112627537935*^9, 3.727112711069363*^9, 
   3.727112751269887*^9, 3.72711278925819*^9, 
   3.7271131650551133`*^9},ExpressionUUID->"22bbf9ae-6c24-4924-aedc-\
a51919917aeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["breaking time reversal symmetry ", "Subsection",
 CellChangeTimes->{{3.7271019555676985`*^9, 3.7271019620710297`*^9}, {
  3.7271021583477697`*^9, 
  3.72710217643982*^9}},ExpressionUUID->"589fb51b-a04c-4661-8b11-\
50119974fed6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phx", "=", 
     RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phy", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phz", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]},
          {
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
           "0"},
          {
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}]},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}], "0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EE", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"HHh", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<E(meV)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<Y\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.16"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<M\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.25"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7223668735474586`*^9, 3.722367037314554*^9}, 
   3.722367210387845*^9, {3.722367258580003*^9, 3.722367259615691*^9}, {
   3.7223675093763423`*^9, 3.722367694668614*^9}, {3.722367813589961*^9, 
   3.722367841350484*^9}, 3.7226191272574887`*^9, {3.7226192205550737`*^9, 
   3.7226192225711536`*^9}, {3.7226192557662916`*^9, 3.722619339767094*^9}, {
   3.7226199936100273`*^9, 3.7226200053012133`*^9}, {3.72262004288863*^9, 
   3.7226200433886576`*^9}, 3.7226326716674647`*^9, {3.722632704579568*^9, 
   3.7226327060235014`*^9}, {3.7247014862614145`*^9, 
   3.7247014914439836`*^9}, {3.7251325544891005`*^9, 
   3.7251325702235885`*^9}, {3.725132623663228*^9, 3.725132645549859*^9}, 
   3.725132718064534*^9, {3.7251327623398995`*^9, 3.725132766634314*^9}, {
   3.7251328078559604`*^9, 3.725132813538598*^9}, {3.725132876200553*^9, 
   3.7251328779475827`*^9}, {3.7251329158604383`*^9, 
   3.7251329248200655`*^9}, {3.725902604380831*^9, 3.72590260953881*^9}, {
   3.7259030217076893`*^9, 3.725903022398991*^9}, {3.725903125147027*^9, 
   3.725903128623431*^9}, {3.725903170006427*^9, 3.7259031731899567`*^9}, {
   3.7259034485591516`*^9, 3.7259034533685055`*^9}, {3.7259039637610626`*^9, 
   3.725904011823818*^9}, {3.725904099186993*^9, 3.725904105192998*^9}, {
   3.725904157086914*^9, 3.725904157633816*^9}, {3.72590433227851*^9, 
   3.7259043683156705`*^9}, 3.7259044148184805`*^9, {3.7262571078515034`*^9, 
   3.726257119321848*^9}, {3.726257236972904*^9, 3.7262572429252944`*^9}, 
   3.7262573371285343`*^9, {3.7262573998325596`*^9, 3.726257405487539*^9}, {
   3.726321091130647*^9, 3.72632110039561*^9}, 3.7263211604868426`*^9, {
   3.726321326676736*^9, 3.726321334457922*^9}, {3.7263214303255997`*^9, 
   3.7263214323520684`*^9}, {3.726321679803461*^9, 3.7263216835053043`*^9}, {
   3.726321729567436*^9, 3.7263217398860455`*^9}, {3.726322136287897*^9, 
   3.7263221441302013`*^9}, {3.726322542052599*^9, 3.7263225731789703`*^9}, {
   3.7263286077667494`*^9, 3.726328610276001*^9}, {3.726333050539727*^9, 
   3.7263330537908726`*^9}, {3.7264257048409686`*^9, 3.72642571410821*^9}, {
   3.7265830781997695`*^9, 3.7265830895872064`*^9}, {3.7266270603438635`*^9, 
   3.7266270775780225`*^9}, {3.726627555198803*^9, 3.726627599532218*^9}, {
   3.726627788294796*^9, 3.7266278018441963`*^9}, {3.726627846626136*^9, 
   3.7266278470636578`*^9}, {3.7266282883434753`*^9, 3.726628292138735*^9}, {
   3.726629512216957*^9, 3.7266295124357185`*^9}, {3.7266295808779964`*^9, 
   3.72662958188111*^9}, {3.7266297084411926`*^9, 3.7266297110169992`*^9}, {
   3.7266302775498657`*^9, 3.7266302810816784`*^9}, 3.726630381044924*^9, {
   3.726704354400067*^9, 3.7267043571038246`*^9}, {3.7267043931926165`*^9, 
   3.726704398381815*^9}, {3.726704432007569*^9, 3.7267044332424755`*^9}, {
   3.7267045716893377`*^9, 3.726704585896286*^9}, {3.7267047620083237`*^9, 
   3.7267047646657467`*^9}, 3.726704799503436*^9, {3.726704854887476*^9, 
   3.7267048585051236`*^9}, {3.726705324423644*^9, 3.7267053251893063`*^9}, 
   3.726705426790486*^9, {3.726705609675167*^9, 3.726705612503893*^9}, {
   3.726705817613204*^9, 3.7267058208330293`*^9}, {3.7267059880830116`*^9, 
   3.7267059901773243`*^9}, {3.7267066620104427`*^9, 
   3.7267066649643326`*^9}, {3.7267067699256907`*^9, 3.726706770348095*^9}, {
   3.726706856321677*^9, 3.7267068569154606`*^9}, {3.7267069936502094`*^9, 
   3.726706997510495*^9}, {3.7267071091160183`*^9, 3.726707112820583*^9}, 
   3.7267072024137774`*^9, {3.726707291604254*^9, 3.7267072938641396`*^9}, {
   3.7267075331505394`*^9, 3.72670753771403*^9}, {3.7267076370747075`*^9, 
   3.726707645842407*^9}, {3.7267077160342703`*^9, 3.7267077165811677`*^9}, {
   3.7267077764134016`*^9, 3.7267077882606325`*^9}, {3.7267078608419323`*^9, 
   3.7267078629362125`*^9}, {3.726707911701049*^9, 3.7267079231513896`*^9}, {
   3.726708021040066*^9, 3.72670803083998*^9}, {3.7267080876942616`*^9, 
   3.72670814607559*^9}, {3.726708230930764*^9, 3.7267082548667855`*^9}, {
   3.726708414720706*^9, 3.7267084372284327`*^9}, {3.726708501378209*^9, 
   3.7267085037382083`*^9}, {3.7267085582408266`*^9, 
   3.7267085606007967`*^9}, {3.7267086585500813`*^9, 
   3.7267086657862873`*^9}, {3.7267087454565043`*^9, 
   3.7267087508481755`*^9}, {3.7267087968093953`*^9, 
   3.7267087971062837`*^9}, {3.7267088459150496`*^9, 
   3.7267088499633126`*^9}, {3.7267088906044865`*^9, 
   3.7267088972627773`*^9}, {3.72670893593587*^9, 3.726708946624184*^9}, {
   3.726708993234175*^9, 3.7267089934377995`*^9}, {3.7267090251485333`*^9, 
   3.7267090256023283`*^9}, {3.726709075799428*^9, 3.726709086771551*^9}, {
   3.7267091425984077`*^9, 3.7267091432859535`*^9}, 3.7267092070190935`*^9, {
   3.7267092601677017`*^9, 3.7267092609338665`*^9}, {3.726709302494812*^9, 
   3.7267093038392105`*^9}, {3.7267094075042458`*^9, 
   3.7267094077698946`*^9}, {3.7267094420049496`*^9, 
   3.7267094434767947`*^9}, {3.7267094807270107`*^9, 3.726709482792408*^9}, {
   3.7267095228420935`*^9, 3.7267095236708493`*^9}, {3.7267095605139074`*^9, 
   3.7267095647492313`*^9}, {3.7267096570157948`*^9, 
   3.7267096572189307`*^9}, {3.7267097068307314`*^9, 3.726709710644302*^9}, {
   3.726709753519452*^9, 3.7267097626938725`*^9}, {3.7267098111110425`*^9, 
   3.7267098116735697`*^9}, 3.7267098422065277`*^9, {3.7267098751969485`*^9, 
   3.7267098764321404`*^9}, {3.7267099256163635`*^9, 3.7267099263509064`*^9}, 
   3.7267099598352757`*^9, {3.726709994850301*^9, 3.72670999588161*^9}, {
   3.726710051433663*^9, 3.7267100560285797`*^9}, {3.7267101335848308`*^9, 
   3.726710134131734*^9}, 3.726710240922762*^9, {3.72671035598461*^9, 
   3.7267103589539557`*^9}, {3.726710413884591*^9, 3.7267104151505604`*^9}, {
   3.726710472557659*^9, 3.726710476189285*^9}, {3.7267106484886236`*^9, 
   3.7267106495199313`*^9}, {3.726710748536321*^9, 3.7267107501462364`*^9}, {
   3.726710816381513*^9, 3.7267108180534687`*^9}, {3.7270300541236277`*^9, 
   3.727030079966696*^9}, {3.727101621464071*^9, 3.7271016282866144`*^9}, {
   3.7271022778393617`*^9, 3.727102285795662*^9}, {3.727103297102811*^9, 
   3.727103298226559*^9}},ExpressionUUID->"59c747c6-ffcd-407b-85ec-\
c9ee2364a265"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUm3c41W8YxnGszjGOPY4zHJuinSjfm5JIoTRklLSNUlEkaSgrREUloUQa
CsmqlJSMBtKQSkYRsrf6vb+/uj7XOe963ud9nvs+l9S37Fm9TUhAQGBEWEDg
/39leEMvsiPizMQ3TW32E+LilAireLqQL3W4r2LLfMJJB4vTxYSOUQrzkuID
BLnw8+roHj0eThkmO+2kBLjIuMdgDQmepby0p1LD/nIgf4v/xNviPPUksM9m
3SQHIekLPdqPX6Q8FPbn3hzjoOuqvdimsiuUsS7H++QwB9Nrct//FkyljFJe
Wf7q52CLzRMdXf41qlvjvfmHHg4SX1YGbLVIp47flrmwppOD10sbqlK2ZFB6
tl6pm9o4EHnWzG46fpOqnnasfeobB4uo7j0q125RFSXGIrM+c7CvZPTp2rI7
1Kua2LyJOg72NIrN+Sl4n+pt5vRtecEB/ZKki4hsDqV/7o+ByBMObmyQC9Xg
51LfXTKW2zzk4Mt7zodNFg8o1xMdJytucLD87bzDH48XUtsOPjj24xgHLdGm
14fjiijjxtv2HQc5CF5pXiN/rZhKe30vKNObg7xKW65D2SPq6yGjzU4bOIj9
cb+5VfApxVg1+O2ZPgdfn84dHgh/SvEFMx5UcjgwSH1Ip8k+o0r7l2ZdluXg
xaZHc9T5ZZSTte6rq2NsTH6pCHW1KKf6KItCl3I2dn34ptdw/BW1z9HItdaR
DfV20cIWwXeU1Ln297s2qqFeqV/v+op3VFBEitPe5Wo4Zd10aev5d9RARo3A
xvlq6LydG9SmW0ul7zWmf5JRQ87+zfhpV0cNNa5deP4lC0sFi152XnlPKR+s
7NtnyMJ2Ne+GvoWfqW3zAgqvdqlg7c2OsX8FzZTOkrmfji1WAuf91GWfxmYq
O67vTKuuEn4JyJo1TTVTswUm9SzklRC4weR4kcUPaujEBv0/nYpIFouk+1X/
oMTXnWtTSlTEr23TWZ3fWqjNJdZ3fvQpIIi/Z1G9aDv1VbHedE+6PCxXnfhq
oddOiWZeaH8UKw+pwISQ+yvaKbGHPzRlguSR+u7J8+jYdoqx3/HZi9XyeBHC
XGmt+pOK3W8dfEhAHsxv910fz/hFJWf4ji53lcP1y4PBmY6dlOMB1++7ubIo
ehVtvNu/k/J7oTbuJSGLtyO6/QaJnVRbgxszZEwGk2tct2U3dlINlvG0xjoZ
rJF4sSJ/y2/KKDJ4fG+4DISOJCg/39tF7b2z0y9slAnlW7NqQ+O6qN53sup1
7UwYfqqKtMrronL/qZ2Z/56JjfME/lWOdFHpDW0l1jlM3O/e2fYuuJvqbhl1
uOfNxGY3k5xvUT3UaLexQ2+dNPyj6j1T7/ZQoV7Jfzl50ogq8tHyeNtDzbDh
F8Wek0aB4rXEdrk/lObb9GHzddKQfsM42n3pD7WjaIPQ5BcpfLvak37EsZdS
jc0arB+VRGd+8XG3bb3UnA1xJ0ubJDFYE7aJ8u+lDk9dbBEskwR9kq8imNhL
2UekP4uIlsT8DeujTjb2UunH7B+915NENLN0X+SWPipAyeiJwz4JqCUuCP98
oI8qSWtsd3WWQBY3+6re6T6qbth0T+tSCZQbJle/vNVHNUUU9G9TkcCkbZC2
8FAfpRlv/8itgoGI+oFFa8T6qZZ712hbHjCg7OK5Jk2ln/qYp53dkcbAHM+N
ITDrp3yMenMjjjKwO9z4c9DpfkoxJUN2FsXAKPNeb9XFfmqti4yj30wGTiXq
iLFu91OHdo3JLuMzkJqhOLfwbT811zPZNVaMAUOjaBvxln7q53T/Q4wJOkry
RdzXD/VTAS1bDRX/0PGxfPDMkMoAdYWuLNH0kY7tK72uL50+QFVI87Zfek3H
YH1LUbzZANWWa/qk4zkdx12c3/2wH6BG2WvPVhXTId1a+3OWxwD1UG6HNXLp
SPK0+RviN0AxRCyslt+iQ3/gqfzb0wPUQg/HppZrdBQELjTgXhqgFmzxt5e7
QscyofvmPrcHqJ2WhR8aLtBRH6674dHjAer+GpMkw7N0bJFJ8ZF4N0B1R4wV
qEbR0ZuoFOrcMkDOk2dy+TQdR3gxl7OGBqjjs8u4907QQc8UzRkTG6Q+FUyt
dwqhI9EouGK56iB1z/fq8wtH6NB+OPQ1YfogVc6ZY7zzMB15Zt5D7WaDVI7a
Mf+aADosXrQy5jsMUhg/NvfFITrernThh3oMUnpqa5VXE3Z7X2dc7zdIHdhs
WriX8G+XFXYaYYPU0sLzV9XJ+EOtz7btuzRIJd36uXRrIB2iXiZBT28PUo+T
m+SMg+g4N3A/jvlkkNrbvm5nUjAd/MN6Nze9G6Q27NwfE3uMjntCqU/utgxS
y0qvv5QLpcMsQrlhamiQ6nr8DFrhdFTLxHbZig9Rz9U01J6focPpohgtSXWI
emac5/Unjo523lGV39OHqJ5c1QU3Euk4kDlsZEINUZ9L3vn+TKYj9mGby0eP
IUqwU71a+A4dHMp1v47/EDWxRTv+ax4dt1/Uh/uHDVGrZ6SpmD2io+J9Wb78
nSEq6/FSbvgbOta5mtZ4PBmizpdlfPb9REdra05LzrshqjN77evPLXT8G0hl
OgwPUVM3dG10xukQLv/lvENsmJqnrdNvLMIA/YJRxhHlYar8Kf9bHpMBReNH
i7NMhqnK4PbJNl2Sr0Efd9OODlNnP4pFCrsxMHclN18ldpiysrvzlfJiwISz
XXBm6jAVs+hf8KdABixLBxJcyoYp3zotuvpFBlyEpcsfiI1QRpUzVrz7xMCW
92uZ1coj1Jye1WZvOhnYeSPJ+YfeCKU3tymAPcnAgeX6/VK2I9TF/bLzrnEl
EBllyd0ZO0IZ2wX8U9stgSL5oABVlVHqY4hv5zhdEqVtz57P1B+lyi4xleg8
SbzIn8a0Mh2lSnszC6zmSaJ2Q8KN/a6j1L6w2ldLN0uiIymnrjp1lNpSNzhL
sEASylodM47qj1FfJHu9TL2k4Ddv3Y8W03Hq2/QHlWqk/v31t9qxc9U4deBt
yOL1ndI4VWDc1bV5nJpuoGCQJcBEoilreCh0nMq9sFXKXImJIvPv08TfjlN+
UvEXoiyYWHLiXXTUj3HK6NNR29+2TFQ/fyYnMzRO7RqwEFdcz0STVTpbVXWC
Wvy7duPz3UwIrNo9a/rWCSrA4ozWvBgmwmOc8+/5T1Bd5fnj1xOYkH1nazov
fIIaPde8oPIqExqORpZmdyeotuhbNXrZTNw+z6t8VjpBFczIuOeWz8TcDzJ2
VnUTlCXLRMHsERPLNg5usB+doD6Kyqv2v2Li9eW2pnr6JOWTiYqnb5hY39Sw
xYk9SfXf81CZTfrFd07FzyajSUpUJrAOn5nYubnQa4vFJGV4483n31+Z6EvN
6mt3nKTWDryaO6uFicCWy/6eOyapIoVUuvRPJoS0zkz8CZiktF3/3jrRyUTk
9uCQA1GTVPebg2fPdDMhn7lHZCx5kprT/83NoJeJpI7NEUfuT1KLvNzbnPuZ
0DJYLS30fJKiUty0OINM3PVacu5UwyTl2iVp7zvExPy7c1UYHZMUc3Z1heMw
E0/+aCXHTExSz5bwtCsIL5+lpCEvNUUxJDxnVxF+u088M5E3RS2LMe9yJeyU
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
kfPlmfGWGarh2ZrMVOtEsl7VifsfZ6th/drTVSHJdPBaKiw8F5A6uvykknk6
HbvGJeunTNXgdXjQPfw2WU9mzbZYqOHMneCADXl0TOomDvMt1VBauIR7p4SO
6PV8leWr1HB+rceHZpIPH3x2ZH1eTcYvbdN78pHMf+q2qfd6NTTar4hUayHz
5c13i9ushouVqT4OY+T7Miuufdmnhjt6ATn+Bgzw9GLn7jmoRvpE71udhQzs
xvtywSA1FFH/bq2wYmDSZ9Mv7VA1pISukG3dSr5fvX+Gb4IaFkR1nOOR97Kr
peAxLUkNw92VX2aS95QzPmV3IeX/+U0eX3vJgKVe2L7im2R/gSN+mb/J/KeS
HoqUqGFcrji5e4EEZPYqKNqUquG0bDkryEYCBU7RB6Kfq6E7rt3B3lUCYjNC
ZinVkPuKWVf49IQErtd53NL9qgbWNhv/M3US+MozuLpCgI38cvlrDUGScCgu
PHV2KRufQh/4VbdKYfT67Lb3y9kY3uN6L2BCCinRt5aormQjirfns4qsNHrc
rwhcW8uG2UGhq1qUNCLEjwXmbWcjqW2fKj1RGrP6xz6O7maDEhPa1nNHGh8b
9y1YvIcNuws3XG6WSUMne+tg+UE2BM+1Sp3rkcbztct9PoSxsXGoV+cnjwlP
6mk16wwbWtv61af0mZDVMzHYfJaNkNdN3j1zmXCfNPj16yLp0/eWHNq4nIm/
adJbxrPYsHplncLyZiI9KqzULJuNh46D1974MWHrL8g9kctGg7rEsZXBTFy2
HmhklLDxff+5b1eimTDubVjLrmHDedn7JWtuMyHgX2Tx6B0bzaOTi27kMlEx
ccXItYGNo8Oi7deLmIg9dkxt6jPZH831mu1TJjaIbZt25RsbDuouvy+9ZIJ3
ZvnwolY2xtylrM/UMPFLdnrLl19s8NYNuKnXMXGIM1Ci1s/GxS8ny7SamMD1
hpslw2y4XX7XdraZCXH9ogsuE2wY7lH1Tmhj4m32lROT/9j4HUq/PLeDicR5
x/YmCROdXc/6tKOLic3FW10XTePg98hQkdEf0u/Ml9t8keRgIiRJILKPid4X
BguCZDlovLg18dAAEw9tpTXVlDjQOJaVMjLIRHBtP7OERXSeFnaJDTOxbEPD
lDOPAwP1mAMZhKW+FnZOaBKf4bnr0AfCDR5XPlzWIzrbK9QtgXByR8hzU0MO
pDddW/pziInte7beb5xNdNdu56CXZH7DIavkwws48F16PsKYrD8caBDJWsRB
c+ItbVOyv8cC0oeKQXz0I7OFb3tIvz3Vv9XZkviusOLPo7+ZWCXR4DBhTXzK
giSH/F9MKMYVml1excF+nd1MOonPV6UrBqZrOHCQC8sd+s7EjSshyo3rOTD7
Vf038AsT829a9au6cyB6TGTNxlqSL4YG34q2cdBr4Hu2oJqJF3lS1Rt3//+7
/PamghdMrCt9n35pPwfusdoLbxYywVlWGGdyiPgcCc+VyTlMtFclHf0cxIHR
1N191C0m/D54OKme4sAqTPVe7GUmFrlaLSuK4ICaUbF0WTwTwi36czbGkPhK
Vn/NiWDiXE+fxKVE4oPNl+0sOcREnkhIqcot4vMyE5W/OzARFOlxpzCb+NbR
id4kKyaWylhdcsrjwEk/dL3OYibq1aQOXHxEPndYWpWtw8TgnCQdFeJTr1/a
9StvSBpzthREKxMf50D1B6cukMbSzKivacSX/fRze3+bK411PZsNZxDfFL/m
k/01MWkEBk57bS7GRd3Uu3r3D1Iojdso6anChQ8/pfWsvxRsyyYjHy3mYr+M
A6s7XxJu0941Wllw4ax95PTuq5LYY5duULuMC0mhjQISYZKIa1xZ1W7HhVp7
6NqXTpL4OJBMZ27hImRY+eK+fxLYqmkevuUUF8Wl01Wl10nAf7fCp64ILm5r
sD9qWkjg9L0O3YMxXChqPo2MMJRA1qK4ishELi6K2Oy0E5dAr2OL2IMsLhZc
l23794Toi8sP11PZXBzwf3m84S4Dcs2RGa9yubAMEbaQTmZgvvdcq68lXHAN
XUOyjxC9ERp6SuwNFwrB1RYt5gxEVzk1nK3jYsOz8wdpcxm4KmOorfaRi7ED
BYfOazPw7EpD+cxmLorm/ehUkGSgviVLobiNi2nBq8vFBBlo0zu6zbKTi2Cp
RLN9Q3SI5+uIbBzgYtbdUPeH3+hQnZxwbB0h8TzornT+PR0GFm+v+0xyUeLL
PdlXRfTC0tWBQQI83HKzl379jA6dHYvSngrxkBo0JTe9iI6ZEdqVoiI8PLoW
9F0ihw7jO8z+FWI8KK+1zPfNosNmoNW8gcFDnzssqpPoOP5vp/2gJA/lf6Xe
6xB9UsTodpNl8vA0K4c/TvRJv5Kv90xZHtr3MCaWkH6spzl0eJU8D6MJ5zRE
w+nYPDMgwkuRh1ciduvNQ+lIXDSVGKFM1rO4s2yY9Pu3y49lZKry8M3xWILW
UXLetSL5L9R4iAvtan1D9ALcw5+3cngYZDk8GSJ64pC3ZJ2QOg8b5i+7nUD0
xr2As808DR48K89o5xM98jNUoddMi4ePrRLJDoQ5cRf/uujwUDb/xcHdhNcl
syUP6/FwSvCDpCAZH52VyrpowMMvT/9sBTL/i3wt/YczeChcNZKSSfTR32c3
jd8b8TASVM0qIvpp/psZVgOzeDgbH7PKhugrn8b7a2Xm8vDWju7qRPRX+s95
W43m88DcZ7H55yk6vgwU7ltpzIPQ9LDtgxF0yAuYHfM04SFb9fT+kBg6bCWe
xYQv4iGm1Ckk8hwdJ5WXJWeY8dB48uphhUt0lGhW3i4HYe3z1pwUOgZnripu
seBBKsXoefoNOqYvrn0laMlD7raFxbfu0OFhve4j14oHlsC+QaMHdFxa+7l9
sTUP71uzDWY/oqPW3W3IeQUPIieF5XKIfrUI3C6baMdDWq5lhB7RL4GnOnn5
DjwkVzWt4v0g+iXOx6h+DQ9WPQtnxHfRoX7L35a5gYdLzJ5Fv4UY2PBwfKPh
Rh5Ck3Y4v5FiILYseJetCw+fhG19ZrAYEPhy6lTYZhLPbMdex3lE//+in7+x
hYeBP1YM9hIG9g5GX3u+leTbz/v7XBwY+CaRUCqwi8Q7I2662R7iJxZnjB/y
5eGYxOCA/z0Ghq0NpiXs50HHvXlVy1MGDNdlKz3w42FRGmddaR0DV3wezu0L
4EFO719GxSh5n1df+uw6zsP9u6eGh60kYCL464dTPIlnHkO/eUwCx51TC9LP
k/PoNx3okJNE5YON0X0JPCy4fdFyi6EkNu6uWRiexMPv8wtjr26VxOG6nNiC
dB76pa1HOA2SKEk/YqZUwIPTRK7J1yopCAsskPcoIvnVMzfMpIvUu429HXdL
eDgt93bWHwlpfJHyOL/sKbk/ycgYZztpTB1c3uVXycOdmj8HFT9Kw8xG7lL9
Fx7oe8vXtB0m/et69R7eNx6S5r3wPkL0xeu/oZZezTykuxaIzU9lwi13tJfW
zgO3QmVUhOiFo2pfreb84YGWUvlUUl4GpT2ZQ2cF1bG+eyxIL1cG5vFmDnba
6tjqK3zZUlAOBQ1nJQ/oqqM73KDGUkEOM1XbXiXqq4O80bMOenLgpEZa/DBU
R/M+pn6EgxzG736c47dAHUmjzi4H0uSQW7lP8fJydXidbZt4bykPLaGMxvbd
6tjHaAi0jlXANF/p7cHZ6kjz+BfqylfGdfnGNYn31cHXDd0/Y74yUHDDPCdX
HY7r9ywfslbGoX+L2e0P1WEq7lzo6auMX2e86leWqoOxgDOv+4kyKrJeWbDf
qWMj98RDKWcVnGo9wS3pV8eovnmbbhjx/WF2kg2D6rDJs8o8Rnz4YwPWxJ9h
dQiYT9ytvK2K4X05DRoT6lhi3ec/nfjubYLNZyJpfLiGBS/XUWFhKcdscqM8
HyrBM+oK0lmgbRj9ODaPDxPv1Vfb76rhnvXYGXNjPgToj82mnqjBxXTcItyE
j5z425oDb9WQx5m8rUzxoZHJzg3oV8P2tn8hC5bzQWtoC/w8hw3ZDwLzj9rw
cYK2iFe/hI3HFYK/X9jyYbXvz1D6GjaUbtPWrnPgY3jNtPc1+9io2Cem57eR
j4KWlaUSRIce2Cr+tcSFj/O24Qk3Hv2vA6fFC2/iY/DWPRepajYCFjKm4j3I
ebabLDEnOlFfQPpdjhcfemtO1QhxOGjokz417sNHko3Vj8/6HBxvYZpa+PKh
IMN95Et0VeML2fR3fnw0nBRwrLUjOu2MYkBvMB81dk61ikc4MD6qZGh8jI8W
ixfXr5zmoHWvcsvRE3x8X3X9ZM1ZDhY7qq6UDuPjLftpPCudg05LltD6CD48
Z97nzrnLwYUFag+To/iYrmp8qD2fgx5VjrrhWT5YRg1Jsi85uCTBbfCL50NY
a8Omk685WPaXG/noPB8WLffbT7znoJ/ktkgiH1VGFwskv3BwtVl9yPYSH2Xr
yzw5PziwreNnnUviQ/Pw3+ycnxyMPtfY9CWZDy/dV+tedhFdk68pr5nKx+YP
Fi5OfRzYZ2q98rzGR+sMq95tROdMXtQOzk0n8VkafLRzlOi0SJ05Exl8PJ7S
Kmmd4MDxiO4viyw+kq853lhNdI/gHr0rEbf5UB3fHz9bgIu7m/VX197lQ3Bm
/twTglxsXG0gpnqf3G/9iqQlQlyILp1e4p7LxwW/F0/+/702Z94M35sP+Lhn
6sPXI+ymY6jd95CPbfp3ju8h4+kqRo3GRXxwf2laWpH58+kzY0NK+BC/Yj7t
PlnfY3KmZcVjct6klRl3Jjlg9swal37Kh4hC8wyzcQ5Kvs3OXl/Gx/qKJ189
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
n72eNnAEne9xdWnqRtD2/P//6/0Pc0Ddqg==
       "]], LineBox[CompressedData["
1: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
oRvCQKSnCi3zY1CaOp1QFywMokGaiU48GHw6yF/LFCEMfoTVbAoXBj/XFX5r
RgmD4HIu5xekp2gnnXa/TBAGU7WV6P1sSA/x3XabSBaGik5vcjALBgfL0+Kk
0oXB8arR9VomDJzPVr6zzkL7NZ6NZf9Hh5vk/h9xz4QBK2Lw3lyhw8OGv6Lt
L4XBe9rRg+kPHV5dIQHvK2HQdzbWhAU6fNik7mJQIgwPH+/9WrmE5pXOI9H+
5Wj/sRyP3at0wBh9JmLvhCHo6aI4N9rP0s2BPadWGA7saQidQ/rwA+ulS10f
hMF1IDOwgR2Dom1xFopDwiAQq1Xgz4fBrZAvkr3sG+GhpYHRRuRPhs7JTPUD
G6Fzq0bPbW0MrDOdiqaGNkJYgPCh5GsYzFdJaauNbYRQ3/1Op31QvAYH3vlO
bgS4FuAl5YdBOcWihXduI/CU3bDLuIGBZNTe0c1sItAuztX5IAiDr37ywk6y
IiA0crDAIBYDC4sfbgMuIkg3t20Iz0Xx9Mqak/UQgetHRKKl8lG87ttddb8o
AsmmAzYl/+nHDz231rxFYONd4eRepB/F9zQ/pISLgEQom7TAGww6lZ83HHsp
Aq6pMT/FGzA4wuMh0zonAjyCs6xxAxjw1sZoXFwSgRgKnwHnEAa1fuX7xdZE
4ITr0fpLwxiozXJdstogCi144gXjbxhIfMmoG5cQhdYTXb3tkxj0Pf7qxKwj
Ch19THnmCxjEnmL2ydAThV/x1MgHi+i+kuXuGhqKwshS68nuP+i+h3uVhB8U
BS3LI+9MVzBI8xTkItuJgl4SO1kM1QtHPYOnKkGiMPYu35eHE+nNVdeKz2Gi
8Hozrx+FC4euwvvtV+6JglPQJiU5VI/2yg+tVCSIQp7L1hh1XqRnBH2MjZ+L
gv05Jn5FVM+GG9JspvJE4c1ogrIUqncPAxou3isShRRZ80kRVA95/4gldr0V
hQtL+/inNuLwuy/vp127KKyUjry/JI5Ddlw3E0eXKPTbtO86KIHDKbN1kac9
opDo4KYki+pre43JrulRUfD1POVbT0Z699n3cJ8/opCuynVlgIqDqwN/Gn1V
FPIvtd5ORPVahr6jqIpJDPJF/62Yo/oeG3Wzn5NbDOKivgpVYKieX6UqxUiK
AWPyRq6tFA7X5rY/ZuBiMLolsHMdsY+bCTVXRgyKRN5ejEf9wv+0N0+Tohhk
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
Dpx/R3l1xQC35JM/gYr8uhfqlGdfj1p2TQ0ksJ/WU2OS9sPXVyh7BxHYxd99
bkN5eBsJOr8zmODs3xNrp1NeHrXcZXUqhGCfbK5wEuXpGKdD9bdCaX1MJpu0
0SznczKg7Xd6/TDP8DTl78SNeSPftxH8O93VwJny+dSIkkQmnCB0+ZmFnTSf
jKs1tNtJcOCKU1oQ5XsmveVmQCQB28nyW2m2j/qtomo3QYFZVhGoHwSvlasV
RRPEt62Jjqf5qH12U1wMgfFRScM1mm8am7/qOUBQdz9ncinNbcqP3zjFEWiY
RV09R7PMkP9AXgKB4KXYZgPN5NW3z4pHaL1iqgL5NLuXp/w3OJGgNzhrcgy9
/47zLK8umWA/T7K6mT5v5qE7k2amEkTrbK6Vpvnu1uUayccIfMUqhgp0vd2e
b/U/phMcvLQqo5fWS8nqAOtxksBj6Pudc7Sepvo/mxRmEoiVY+PNqV94y/xl
OTWbwLv6nrWY9mNPr+OC7WdpP3zKQj7RfuXUtTs3/0mQ3an/RZ/6RW3hjqVz
xQR7JDeaptN+q+3JCRjJI8hvq7IZSmCQrzohbvd12p95Duci6Hw1DR9PartB
cPnll9K3uxl8bZ1+wlZC4IfI08siGdhd8L0odZvO49jHaNkdDFqsix/GVhM4
RIrDNTczmMAsetpVQ1DZqKPptZGBiPdvq8Mjgsz6+1HHqW/81qD6Tr6RIEfZ
r0KX7g+59SHKiS0ESw0TzkRQf5/hLKv1vpXOW53FhB66vzxnZjLu7QSt269Y
B7hTPxqpMVXtJGh8t9YxwYX6d5ufdVgXQfAzRsfMie7fe8N2T3vo/RXq6z/Z
MzBPFC47/pb2e/GcZ1cWMFgZdmvV8HsCNY95+ldB59F7aaD3IK1XzivzmnnU
/2z6QiSf6XxWWB4ao37z2GBfuPYwQcPo2j0u1gwG+ZrRkSN0PiT9wcXUdzTf
FsS3jhLcbI85O9+CwbymhSk24wTKA65e/dR/AopbM7ImGGPxqMWNIjPqc5lh
577/ZIyuz44NZ+cwuLpP4ZKfrDHywt9kXZ3NoDnwbGEF3xinbG0nvDGlPudi
cctAwRgy1iPXf5zvGJjUV+5XMoZkZdeqIhMGjuqBjzsnGcPay2TXcppDRsee
LVQxBlvbtF6X5tSO1DbxFGPg//+j+x+ykKO6
       "]], LineBox[CompressedData["
1:eJwcm3c8le8bx+2993ae5yCpZFSIPBclQlGREumLkIoUZbaXEClpoMgoJXsU
2bQQQkpklpXsbL/L7y+v98s5z7nHdV+fz+e4EY6ee44wMTAwACsDw8pPQdpU
dfrNSP3UC5Zii30EXGOVLlzL5EWFzWZrziDHnC1MYme6SD26cTh0ANnn+MCf
mUvBVOvsD1oDckoGt/QU423qyAjn+CtkkRdkyQnDKGpPA8F4GflCko7Tr0sP
qDvvCyx2Ig8/tmR3qIil6p4U/eRFXlub3TzEGE9dyPXOruwlwNG0ZJUy+ZR6
0XSx1gv5/ruPfs6GSVSBbIeaKHLdtpZPTxxTqOIfPzpf9RDAWt4l237pOfXh
sEqXPrIe9cdT8ukL6kXdp41V3QScKpops65Io1pH5HoMkD3b2DV/M2ZSr/Zw
H5TrIoDrIa8dq1AWddZBUu1cJwHJ+4Wv0slsiq5WfqrpJwE/muW+OhjmUsO6
tw84dxBw9q4Cw7k9eZTWrd9cce0ECO1VWR3jmE8919DeVveDAJP6jQGtl15T
D5o6jgu1EdBzSzdxOvIN1bxB7LjSdwLO7TSoFXlaSP35wyms/o2AnI/m8rsr
3lIXvcIDVL4SENGd2dXLWEZ5vtpR9qqRgI6yDdMTwWVUaeR2Nr8GAtbE53Mx
C5VTrlkmhpvrCah2eKtJkBVU9bREbXwtAQs/3l+1N6yiipQjz7O9J8C0yOzh
8Y9VlPeCYk1wNQHRj+peBeyppnifmJxmqSJAw7bp6wPHd5TM6DuOzjLcLx2b
4WeD76h6xefCBqW43hLfGQpOvacMuIisB8UEHP36c3XLpQ/UrnzhX+qFBOTl
Oer3cX2knIKPPPR6TQDLvb49k5EfqYJvc/LP8wnY4+Pmyiz9ifL8O3GtNZeA
J1ZDAUJPP1H1d799r0Ae0fSIINbUUP4PV1cK4/t1hccS1bJrKO8LCRwORQS0
NEzX7qqopezHFg/9KidAIdOv296sjtp+W7aVwPl4RSxMH/9SR61JDPK3+UAA
jwUTLaTnMzWyUUc14zMBxC+21z2MDdSY5buHArg/TeLjqxPNGijJknpLG9zf
azvaHzpHNVBHH2xkjML6GHyZHdin3Ejp75J3muwnIOv0Yfht8YVSVf6gu2WK
AOcks8yUB1+okJThko0zBIh93US69Xyhaqb3JNDnCQjYzMsycKaJOpmo/6OD
gYRtjG/eDcY2U/c1mRfquEmY1kjSfvG7mdLO4Nfz4CPhmXPE82PqLdR6v8oC
RkESeN67hAxXtlCe59nHWcRIaL4lbDEy9JUyimM66idPwo3SpZJXG1spbhfL
m/kECZvHB9Q8z7dS75o3SAzQSYizLhUaFfpGiYuN05WUSXCROdEypvOdsr8u
+JlVjQSJXfuNsy5/p/LpqWS7Ogkfz28tOFX7nZJOHjVN0SRBtUfy4cThNiqZ
0f+7sBYJnSKs3DmpbZRBeRo9T5uEyO2jAd6TbVTf5BFWs80k/HtebT91/QdV
8HKrnfkWElLbMutyG35Qp47G5Bfok2DHG0udkW6ntg22nBUHEkpPnib+vWqn
omevzrwwJOFUwqHI/Jl26kpGe0LXVhIUmnYw+xp2UPNCLVc5jXC+WrS+meYO
SvDeZO16Y5zvUe59r+V/Uq/eb6KpmpAw/HC62u/oT0qoyOyq3A6cf02X1ubs
n9TwztRJBlMSLJdqns0t/KSUbxIuzciMEj9C7emd1KJcS8MjMxK+Z+yu2mLS
SYmOUmpW5iRk73i3KHuikxJ/t8p/CTm0W2/T0u1Oajst6dnDnSQcCcjy6Mjr
pLwEZXKVd5GgL6KcUtzWSSmb6j54hiyeFvszjqGLKlozt0vKgoRRI2GJ84pd
1NC/e/VByB86blg6mHZRrKJREl+QE84u3aA8u6gUl0JCypKEQAHvMvm7XVTl
a6Hfe5Ctnw/MLhd0Ucpbe52CkOWaFx95tHVR7wt7lO4j9zMI6bcvdlEmb6I8
kpEz1yp1mtG6KbegXK1nyP77N196Y9hNvdm65nws8tYruxRWH+mmBL24Da8h
82Q4Vkdf76aM30YFOSI3t51xY0vtpgqObVivgRzHHsLlU9NNWYYEWE3heF01
H7/sGemmgvWVh14gqzlk79oj2EMZctPGrJHnbr4bLdXsodg0TjpP4HpU5LVF
rt/XQ5nz7MSPXlnPvxvifHuoOC/BUA7kfXwsX3ke9VBudP0tF3B95TdL+AW8
7aGy9f2sh3D9+4+slR782UNtywn7sgM58za83c/USzlWu+et7J//WyuHdwq9
FE8ofbET95dXNOhp4tFeKnpEIdsI66EFbhsJh/ZSru8NiSNYL0+OJ/2++KqX
qp3tGz2L9aRRWbvGYaKX0jH6kX0W623+b1dtrWgf5WgglOK8jYRK6WlPPe0+
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
0JvPFRGGeZ1dRrhyz16sg4gjd5d1Me84uFw4a4066RghfgTzzPFfPLOlBwh4
p5Nxjwvzes/qw7l9Kz5DR+62KeYh2xPZXlyHcF2f7WI/h3nJZPLA4F6sg1wW
vSMl2zDvaaUl+zrjeHndzWsxv28KYHCKdSHA2GbLqzrMX4pMKW2/3Ak4ziXW
/QLzWozRXDT3CQKYHW7lXMc8JxK800rNk4CFK5FMNpj3QmqeCFhjH5/Zn14j
iXmQSWCyxu80AX4f7wjXI/vtNQ6O80EfbyLY6of5cfTeQ6OKs1hHGjLS4pg3
Xb//Yez3I+CXRU17CnKHrEExTyAB7mb2xFrMp9b/3fVXP4fro7n+91PkmsTf
m/ZdIKCL+Z0aP+bbrf2bJ/wv4X6ofl4+gfxmza30x1cIaFSX2FeKrO7ZdawS
dadd/cFGNszPz7I2KA+g70qMPvmEWrnvM329lzcEfVxB7/2V78ujddqeaITh
511zJsKQ+YJU7W3CCbix7Ybeyv2ia6UXJQNvE5C1TejPyv2iRebm5id3UBcz
/m5cuV/kbawcWRW1Uqc6Uiv3i4ZuBuwajEafcn1DrA+yY10dFz/qJv/I3nIz
5G+C5DvNGAKuXtEOE0W2tPa5vD8Odfp6FuPK/y+9u/+eCnpCQMKZcvoVZP0f
0gvxCaiT5MN/ysi58p4F1YkEbKiIvViG67PWqdx7KJmA3bQj1TuRnyaLqgtg
busrLfpYi+srNej2Z8ML7BNrU+4YIHN68bucSyfg8VGrGyy4P4kibXvvo488
yxi83wb3DwqSDbKyCQhflRcYh/vtu7xFduX/SHLZ9rVyrtTDU05uhjcERAlw
yqx835OxvXlGEn0E52ntmu2Y7/vDjjftRJ8xW68ZZo31dkVdu9y1HPf/3aaX
ZliPtGbmjIvYN9yaVlltwry/X+ZRSC72DRvRzYcGsL7fp34wlEVfGtZkYPwO
z4Pzrig1rS+4/wzL0Y54XhjGD8vtbibgisq+gnFtErR1ZmavfCPgqIrH7TE8
bynvlDKHuwjYG5jb7o753fDYeBwb+ii/Z/u60vC8dvAVh9Kwz0yUcgr9wjwv
ts/abeWeevfOBPVNyrjfvZfli9D31Zg1sdnQMK/fsOBtmSTg0hN5XiM5EorX
SM//nUZfa7K5SBn7x/SprJaV/1MEwb/2DeIkHGHsCgthJkG2+Uvzc8zz2+T0
F2xFSPDJ1z8RMod1UsY56C1GQun1e+s6/qGfOtL89Rb2pdzzT6SVp7CuXh7P
Lsfn3lm9nj0B/bCC7iN3FexLvdaVkho4j9IOl/3bVvpSfaaeIc7T7pLG9kPY
lxI+DZSZoj+8++EDEYnzbPvV8soI/Tzz/pnWWVyXe+mVL/s/YZ7eMRtmgOtm
J777TCCuu53unGHw5pXnfdvFWYX9eN38v3o9Esb/uISEl+F45BZeSlDYd9Yf
uMpfjH5dYPG/w9h3pL+8eBiMdcDLtCT2DPeRsNisupRHwJuJpU9/cd/Huc8X
mOein+5bvqCFdSKYRBgbYB0JfWXYdB7ramLy76W1mFeK3zMOVWMd2ihM2vAV
EiD+ktl6324SGhkTzueufP97in21jy2ux+OmgnAcn7czR0eRHQmq2Qzp695h
XtnHeYfFgQQh+30vy3A+fjrci3eccP53e/0/4XyV1vBktR0h4diz3WsNMP80
yvC60t1ISJ/Yk/SyjgAVBv6GrOMkMDPPZjlj3bWM8V+b8yCh+qDUmsxG3Pce
AV1DLxIqbn5Un8A6bKsWSmrwwXPf65Fn00JAaJiY3+g5EowOfjGK/47567y4
qvZF3PeM66330Z/3npToOX+ZhKUBxZirPwjYYiW1k/8GCaE+98L1cb8GjaSZ
bG7i7xeoNK6fBNzTksmPCyUhuf7S10/II1JyhOptEiarPDTW4X4/5JFv8bmD
nH/VqhZ5+5J8yNsoEv44Cbk4op6Oozaz3sff848cHkZ+3EVMmT8kQf6TC3Ws
B/vAFzL1bgwJfW+phQ7kmUq6w484Eqa8MyONsb4S8xREFOKx7yi6LyUiWz5T
/HDsKdbnQJjuP+SFB0rnspOwb87lbdfvI+BZyCrN+RTc344pGX9kqyDlfsNU
Eh5FNhSmIjN6ro69+ZIEKsuYWLk/9Oqwyp7GV7if4TVmg8i2e9awS2XiOTQ3
2zyLzLZtbdF/2SSMlRhyr9wfytq4zut5Ln6erbLgPPKhVapKY/k4H8MWxWlk
Lsn1bdpv8Dw57zMbQc7jUou4UERCA/PolR5kpwU1o/fFJPBmqX5tRhYYUZ/j
L8P14Rs2rkIu+qmRblNBgoStXUcmsluDpvPjKhJqWeSePlr5//uKDZK/32Ef
9DR/snI/6m/s5xz2jyRE5vxrdEP+6OtuqVxDQvA5pfSV+1TJe1mHTerwvDsu
gyryRdUn14/Wk3DpptS9lf/Pt+PUpd9sJGHD1Zi3g7ie2r3NxalNJAh7Wr2v
Qh55wD091ErCjH71Fx/kD97Jt3naUGd5CpZNV/bHwmDdunYSrk49OyKHfJD1
rLNHF85/QNKyFPfz/cnuxtEBEtwWZm0ncf+fmgV5CA6ToCE7ylyCfE5Jgktj
BNfXykg+GHnjj50Gp8fRl6jbPpJBFsjv/3FnkgSzKyKXfmF9Dd++7Jszjeel
aHd/BnKC8ev0qTkSNm4bCDNBDiKtzMQWSdh+XTBCDHn/4sivTcsk/Ncze/9X
J+pUa/AlG0Y6gIUF/TUyf7aCnC8zHdxagnJvIQ+Glby+z0oH7Y3J3a7I1W62
1q/Z6cCSf9fMCDl+69ToN046vHmU+XgVcqBcROgcNx02neuM5Ue2mVVRluaj
g2MziC7hedFoqqrQFaCDw5u3fRPIfOmHHeyE6KBVuI9hHHkgeH4uUIQO/H1s
rrPIlc737sWK0YHro8pabnzeE0pdo1iCDlkFhl7KyAFSNbUdUnRIiR523oO8
b8rl6LIMHR7zjlM3kdXrGVlp8nRwVtlp0IDM8yLmCRB08GUXfK6M69F/VUvv
PzodLN9vzLqNXHG48etFRTps0Dkcwrty30/3xOmEVXQ4+r1tVyyyvxgHf8Vq
OlwNl58zwP20HktI7VlDh7N5VkcWkNVqtmxnUaWDtdhJ3Vrcf+6U1i4FNToc
f+4zkbPy99eLp4OMNOiwm/Psp2zUuXI7PkmXDXTIjS+u+vCbgFit5znXNtEh
wN/92XQ/Ab5C2yxTtOnwY9P5ZR3UQas/HUPvNtNhxhmIO0N4vp6K0DkpOvxy
ytO6PILPD0ovXm1AB4W+LVwS6MfL9pvamm6lw87YztPFY/g8vgu3Q4zpYPHA
sn8z6lmf39AyryUdnvSqMtShX69PKHS020OHddc8f0wv4fn7FFKVakUHvRKm
p8qMJNyVXRtifIAO3XZhX+JZUb/LjotddKTD06tHhGtQTx9zjKyd9KaD8WQJ
3Zwg4aZ6cbjhWTrYB3XJRdFJOGN7azzCjw4XmC3U21A3d71ULVh3jg6G3ZVH
7VVIWLDw3Op6nQ5LdXu2aGqScCB69MD3B1gvSYxFi6hj20pLi5Rj6MDK5vFq
GXVMbSBC/mwcHZL2/lm/gP6GQ1e9T/gpHTKi36T3ol/K6/A6ufMlHaITQvJP
7cVzrDRxrbSYDk0W565f+A/7+q6KAb4yOvhT5oKrUZcGz94xt6+gQ8lkiEiN
MwnlHzSF5t7R4dCliBRG1KWTJ7xjNRvo8HvWnmMt6lBtzlR2cg8d0oZUhq77
oU5XOyzW9uH4Aj6lVPtjX/j2YfvUb3z+/nd6jIHohxZjv20dpkMBFNHdUZcS
jLYvd07SIb73px0P6pBvyz1TaTYF0AuVfhcXgn2sn+GuIYcCrPWPPx+PupM2
595+lEsBNH4GTzwJI6FbjjpZwKcAv26vMr0XTsJO199R1uIKkFE5bm+HOkTO
aHWFKyuALKtZpBPqjB5Xgkq+igL8zTRR1XmEui7D492xVgFcyogAHtSdUOhk
W6euAEyPrzi/jCXh340baz/qKEDE6Sj5L0/Q70t+O8tipgDeltf2fUjG/dT1
5/M7oQDNdb84i1En8tLsgqM8FeCO3oF+xyzULXmKJctLAawavLexo254s7DM
DfoogLxWRdKuHBJO1Yb12Z1TAMNPVvu/5ZFwwiG+CMIVYIAtJLS/EP3l5ffu
HJkKsKUGBnSq0Q9PpfYpZCuAa0S6YC9yj2vYYYNcBciUyeMJRx1wNN+zz/+1
AoBd4OPf70lwEP1hMFymAC0fTDYlfsI8lvJXor5RAW4Vkx17GkjY/UnsXfSk
AjifCltTin37SYgqZ/e0Aoj+lLNJ6cB8ZLbdbO2sArzKjUyP+Il9uMbnc+mi
ApxXLeZ2x75eX9v0dYBNEdqeOp/Q7sN6ro/s15VUhNDnSUFmf0iIi0hVuSat
CKLX78UcwL4+Yll+vF5WERZVvp9y/0tCWMPYqDOpCFNsL4/cHcP1bbScDVuj
CNZ2xlu5sK+bNvNxdW5RhKRl2YQr2LcfRimZq4AicO4r/Fn2vxbOPJqq7g/j
hTJEpCIa5J5zz733eOOlJBKPpGiQSmg21kvSYEqKZG6QSlE0mcf0kpKKUsqQ
iqS6GVIylcibWfy2tX5/fv44Z529z3d4nu/aa0+g0LHZIMJjORdd0wbNRUQo
hNfuk5dcxQUj9qnhtBiF0vcvlbUsuJgQnRBWRur0SuFJtSB7LpwHtPtbSJ01
bpy8jh/KhdWwRGnDAgrFYfmea8K5iPWfP3ZQg/QFLZdrbqe4oB51Z0hoUjAI
ruy6c5aL+XSON0jd0lOLOm8Uw0XDodQ1QlKX/vZW/bA1jQv1mrQtBaYU5sjq
O5ypIM8HXPmwYg+F2PzOU7crCX/zH13nTEHZ/vqdt6/J94o4i2/bS0ExT2Sy
cg0XO4YGKo7vpyC/rSw1uY6LfalmtsOkjkimWP0s6uQiXV7X/1Y4hT6Dgz49
sgwEHxMWKt4mdXmxjbOxPIPy5nNXanMozFA33BI1g4HEvuFnV/Io0mdldBcr
Mdh5+baj5gMK+4dTB3w4DEIGPF9GP6fQdu+z90RtBq8SZ5eYNlAQ/m3hJbeV
wX+GSUGa02g483V2221nELza8p/QGTQGVOZZ5exk0Pr6jrCJ5J2C7A9tSwcG
FWZj2xPn0djUGdob7cogKXbR3l0kz16mFXmo+DOwmhH8Lc2URhFHw109kYHG
boO6vUE0Dh2JiPJIZuDy7ZDOkjAaTHVnXkEqgyC0rZc4TeI2IHNgZRaDX7db
43Iv0Nj5WeC36y4DUyOJz9oJNOSXhF9Pymfg2fBsp0oKjedn2x5/L2Cw5EaL
rXQGDXXDFNHDRQx2GSW86c6hMXqVDo8sZfBEdCjgSzGNnN7A9NpyBs4H/NH6
nNSFdV8r5lQyCMjJWt5VTuPVyM2paVUMMg8Edku8pXHCcuLfXW8ZrD+lfUr5
PY3FmbYbtGsZWJglr9L4ROPaNpWoJ0IG8aL9IvZfaWzM9csTryfrfW3Q7d9K
Y/KUhtp1jQzaPWfW3fhOo8B+2cCFJgZLd/k9etZFw60gTkn4lazfWjxg+BcN
jvyI3vwWBjXH5GVrO0leO2/bvruNQU543ZncdlInlJSv9/xgyH/OC/BuotF9
wOfxki4G3MJoiZ31NBJLPzT5/WKQXvc5YdVHGtKHo+kpfQwc//PUo6to1NXO
SKfGGFxo+FQrSurG0SjZPMtpPARa/RxzuEnjgeykirvaPMw1+tVf50jWZzFa
/U6Hh1jd5j/udjSOn+sX/tblwcdYzG/qThorp3d0aBnwoJ5uObbOmka1wmup
7JU8CIXugf1mNDrmXl6dYs1DVsd0nQENGsp/LSiP9uFh4sP82WWjFP64MtV3
fXmY7rCwpnaYwucsFeG7Yzz821V+qG2AQrKGfMf0Ezxsq13govgfie+F/ZKR
J3nY06jskUj6jpneE7OwWB60Rf82Okr61mHTzWWHH/Fg1vKuhp9KYe/7wJiS
Ih5Sco/WH08ifW53zh75YvK9Cw5fqo+nYBIkOznzOQ9OSSYKSVdJPj4uW974
mgdHRSdN1wuk7+kYPDT5wsN6o/D4j/5ERzx3PXW+mYfm5SvmHD1GIWpz7NbG
Fh6m7pilTvmSPug+MHD4Ow9Tbl6V8/eiYJqdo535mwd3w+HwffuIrmB42fLi
fPSWGpdztlN4l7fZb5ckHzatC31ltpJ6tiJoXeYUPqxkjaJGrClk2zd9N5Hj
w+JuYVfrJgpHr8XyfZT4kIhkG3vWUFBQkItvVONDIXJa3zt9CmsmDUZlWvBx
MsOoKZvoQLdjT1ZXb+QjdiTaTXc+hcje8AkDlnzsNFdY+3we0QnflF2Nt/Dx
b5lSc/tssj/P9Y2Fdnysvxbyx5ro0gOhx3+Ju/Ox1zV5SwXRvefHTFMWePLh
srwoPFSKwh3vaTs2efOxyqz17kpSfwf3xJde8+XjoodUT+VkCidMn13XDuJj
ZVnS2jGiwy9KSpg7XORjKFzcq22Ag/yAN6Lh0XzcahQ+rurnQDgYc//WZT7m
/OSmPyL9YV6HgDt0lQ/PXe0GV4kvSC1fMxKZzIfI+aFHR7o5KDh1Nr3wHh8C
R6cNaW0cNMooiisLyfu/6GskCjlgWqx/Lqrjo/J3se6Hjxy4Fca8W9/AR77E
1S4ZwiNuyonBX/jwO6Nv6Pee+LA3JPI7+BBjfWIOEl9kcZ72LR3mw8xOdFMc
8VXFClpdXnMFOFw/PfAF8W2SXYdqz6kIQOWm66oStniR+yhTVYCvHidO+RZz
0OCtffoLV4BAQ2mhJvF9wx+WCMzVBXC+dFomkfjCRbGGDlxDAcJezmu8eJ/4
bpV179/aCuAkYT7dIZvoN5OnwXMcBJC6GumdRXzrZlfdRU5OAvhzirr7sjgQ
u8891+cswD1OfFMI8bn2G0dXK7kLIC6j3BuTxsHc4OzCncECbD10xNCb+GiP
DO6+lFABrGdOVM+IJ/24KnZ2d7gAqUGuVD3x3UfmhR0OiBCgeePvT3pED324
Z6uVGC2Ao1NkxCein6I6piW3pwlwf+evOfHE9/+QC7PUyhSg4kjLpFtRHBjr
jIr43hKgTHXR27tEn/UEduySzhVgKrZUFZ4j+zP3qZLGQwF0kh9sTSb6TtrC
44zHKwHSSvaWPg0iesirY+mjN2T9a0fdLxK9+CDOtmPSWwHW96//Zn+CA5f2
taui3wtw2fvzu25/DkpPcCcWfBbA4v5Z6j3Ro4F5tR5jPQKkx5gOFe3nQKqk
RVK1V4BlKY5TbImejazpu7a8X4Aqmak3h105iPtPoSx4WABlWSltrgvRd5rW
c6XFWGTXR80wIvq4I+t9yayZLJj3+0UuWRN9/Kh1q54ii4pdCZLfNxP9+LK/
a5sSC/PKNwZLLcn/+KGofH0ui/aryosrx+93Ym3cuAyLQoc3SffMONiY/EFB
S4eFz1q10Uw9sr95bRmbdFm8pTty7i0heq5kAJ5LWRyQMdctXMyBa/OsvfmG
LEZvGnOLtDgI4WwpMjBl8a7Rb3IU8RMF1z7uWbOFhddsYXeOEge41T7iuo1w
k11FhCIHLx4NnovYwSL8xcNJLjM5qKlTelhlx+JjWKf9/GlErylvlbNxYdHM
1U+NlSDxwbok+biyCHXs1QiYTOJV94herBuL49y9X13EiP/YcsWx4RALBbtS
E/MJHKhGC/MdfVksoKcMHxhQxcqjB5+UHGPBU9+Ttr1PFa52EuXMcRaqdxM8
bH6rIl9t8ae2IBZWs1yyQ4l/a5Cr/GoWyqL4okFx4fj9FX0OP9LDWSw676oq
06kKi8fn/rhGsPhhhu7edlV4JfEnv4okPOzw4zzxj3Eni6ZqXGCxpzdEay3x
l8X7rRQjL5L1ymut5BD/2WrZqfIrmoW38SbzmcSfSusF8TdeYbE57el0LvGv
WiqzNXPjWFiOXBfbQPytjViO7ozrLOxkpunHjM8r2k2Xe95kITBNOjNI/HPi
q8bVtQksmlKlLrgTLs/12qSTzCLuWH2BGOHuGJntMaksVsywsc4gfnymX6Lj
YDoLlf7vGU6E9RyW7tuaxaLn5+xBTcK2ptWeD7JZiGxYFjKVcMgCZ785OSwk
x6TSxucDmfITQo/dYWFYwlT8Ilzdf+lsw10W+v4l+3oJD9QtiDG8zyJVvFpN
lDw/r/jZjRsPWHxzqC1QImycsi1tYiGLyqHeDh3C/5zu+df+MYsvIXrJ2wlH
HAwveFrMYqOPS1cI4TtW85/SJSyuekZ9ziMsXHqvIvgFCxm3g2lthCeomte0
lLE4p3/3zPh9i8zkb3WrXpJ4dN/91YrwwTfyPyWrWDjL959+SVjCyU0uQshC
tD7heCHZT/XVk5S66li8uTk0Z4iwpUacqkUjCyfN5UWLyP5fHyzTkm9mkbHu
tPz4eexnDbZL3VtYpPyp3VBHuONpv3FNG4sL/+7JkRs/nxDB3Xypk0Vk4dhf
7oS3uz/c0d/FYuIDp5EbhE/YbNpt08Pip56k9UvCqcs63O7/Jvmx7Oj8XsKV
nABv5X4WCwM2GI6fH+8Rn3Xcd5DE659PcePzxVmdt8LqhlnkT+ijdxE2qDY5
t2yUxTH91yVHCTveq7t8bYIaPKSf7I8mfDLOPX5MRA03DvFnZhO+HSCVYTtJ
DZYrTNKfEq7dfTP3ibgaMubO447PA0fWLHnIkVLDwsf/HBufF3I0Xz8LlFbD
kbNemePzRFOF3ZXNU9Xw9AedNT5vdBseeWcyTQ1Cgyrf8Xnkhc8XGpKnq6Hn
//d9/g/lMWSo
       "]], LineBox[CompressedData["
1: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
1plSIIrxG8jcokPQI/vvgs1SEBHPc/egDR34D3Hw3BCUhgjPEHotBx3k8o44
n4yVhgEpZoNTKG+e/pg4/y9RGqx0HSbT9Gjw5kf/3aBkaXjrsRQysJcGukJu
mZkvpWHI9u1/+7fS4My5a5OzpdKQtufZ1o9iNMihp/uE9EuD8sDfXx++U2Hf
48Xwt5gMwP7lp0KuVHANelTIViYDPNKp4W+vUEDoghjBsEoG9idw5EZ5UKDo
aLhXeK0MeO9XnvJwpQDHlutbxZtlICISLLfaUCD1i2MmvVcG9EUc/xTiFOhV
UHpixCQLn7R2/eXioMDh0uKgyH2y4On0rks7jgwLqWrD7QayQLp1ZmdQJBmS
wzN1pQ7KQl6rpV9rCBkmTj5memYpC0qJfadv+ZMhhPOGT56zLJRLce4+7kiG
WkuDc513ZaEjsv+y5VYyuOHVTdJhsuDtrm1zVIkMwpiW0olIWehnO6h5nkKG
kytKIyPxsiAS/ftxmyQZ1p4KOCxlyIKP0brxs01kSAu9W7U3WxYCmGM+ma+R
wNibWT7wrSywrTRh8oskSDzwr5unTBYWZet/8/wlgeZkh6Vssyy4TH+zPt1D
AibvEp3yFlkwufXfrvJOEnxYfqxi2yELVx7aXdX+QgJrDieux32yYG8ep9Tb
SAKFMIO53UOy0HY8+OByPQlGhDcP9ozIwm1lS1nTGhJckftXJjMtCw1bKnZl
lJEAUjtels3Jwi8Vua15xSTgZJQ8tFmWBUunGLH1AhJ8zn4cuLIuC9wxGG9Y
Hgnidty48IhVDorslsRP5JLgROkp291ccvD23ZyozxsS0LUNDHv45GBENu1N
z2sSTNYrafgJy8HEGw3H4FckKDQWIMuIy8FZYSWXG1kkCGidFiyTloPF1szy
ukwS7LfuWD2uIAcNqStiVoj5e4vHlslycMqHv3cH4g7Hx52JmBzkhF1Qd0Cc
NHq9dpeyHHh+yf7Xjdj5/KmcbjU54JPY8uQp+n7lWf0kXw05UFA8cTUf3X/O
R+me9G456JM85y+STYIKJoErpSAH1gG/nUpR+4OCpk8d15MD+/yHuZno+Ux4
Ow4vH5ADVs2W1z/Q8xOiivcmmshBdlX8FbtCEvSKP1baZS4HJ1waOWRLSPD8
8XWJbis5uHf05A6ZchKov9SfljopB765PfZfUP+vKSv1lTjJweWQz7lB70lQ
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
       "]]},
     Annotation[#, "Charting`Private`Tag$18924#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    TagBox[
     InsetBox["X", {0.15, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.509592559330068, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.593987661723263`, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["X", {13.388382764116457`, 0.25}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"E(meV)\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{}, {}}}, {{
     Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{}, {}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwdy2tIkwEYBeBZKoGaLMHLZM4pK0MjQTMxEL9quZitLNeFxEymlri0plJZ
U5qKTDMaXhJH4ER00kooyfvmHJZgoZm1LliZ5fCrRIqyjUbv8cfh+XHOEeYU
Hc314HA42RR3U1KyfJhlSvY0N8Co0JJG+Cj2zOhpktfKjMN+7U/zETPLPE3/
+wIa+nRLYRaWyfBXDcWQB9M1xh3kWZ+5j1IyUSSbPERO1Nx1wLWa8wkystje
nHiYLMyvs8nJ7LGQ4vAxlunmf1fB6bcbL8OglpgK6Bm3pIHlke/rYLC8/zac
fdCvuGNlGVvpcAvkvOpsg1NF0k5ozTH3wKQq1TNYNrMc0Eqm8LYJYK3kkwgO
DIhTYM5F/wPrvd6zQjzOMiah8iacEG1uhX6Gf+1wnl8+rCAF8Xwb1MX8sUNf
U+cX6OjTe+WSkt7fPtD7/uNkqBaPqmCKfjb/HHkta6eugKxfNMy0kBeGnMZF
coNrLf4rmfWjUsCSdue3fdBqZiOcZFlXtAIqhNXXYWwBTwPFHu2DUF/LP+Yi
G7SRmVBar8yDJROnCmFUQMNDmMa1WuBLL+6kwEY/dcc81Pq9/gwTNKUOeCNN
74JZ6qAt4eTxrpBAaPW9J4TxH0z7obrLeAJ2VzcqoHG3uhxeefK8Ca6l/upZ
3xkWpiLI5u0n52AH/807mCEZWYVRer4bVspU3pGkY+9gQCMZKJXEjZCXdnEz
R8n0tk3L8CrPsgo9gyfdUKat8DaTt/K2zsIqs3IFpjpXXHA6NIxrIXW9iugF
8j+lJKR4
  "],ExpressionUUID->"def24e58-0820-458c-a822-2c91fa71a835"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["breaking  time reversal  and inversion but leave combination", \
"Subsection",
 CellChangeTimes->{{3.7271016962578917`*^9, 3.727101725408312*^9}, {
  3.7271021874551573`*^9, 
  3.7271022024251285`*^9}},ExpressionUUID->"35fc2a22-b430-4851-9815-\
abc62eeb4e99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phx", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phy", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phz", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]},
          {
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
           "0"},
          {
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}]},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}], "0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EE", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"HHh", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<E(meV)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<Y\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.16"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<M\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.25"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7223668735474586`*^9, 3.722367037314554*^9}, 
   3.722367210387845*^9, {3.722367258580003*^9, 3.722367259615691*^9}, {
   3.7223675093763423`*^9, 3.722367694668614*^9}, {3.722367813589961*^9, 
   3.722367841350484*^9}, 3.7226191272574887`*^9, {3.7226192205550737`*^9, 
   3.7226192225711536`*^9}, {3.7226192557662916`*^9, 3.722619339767094*^9}, {
   3.7226199936100273`*^9, 3.7226200053012133`*^9}, {3.72262004288863*^9, 
   3.7226200433886576`*^9}, 3.7226326716674647`*^9, {3.722632704579568*^9, 
   3.7226327060235014`*^9}, {3.7247014862614145`*^9, 
   3.7247014914439836`*^9}, {3.7251325544891005`*^9, 
   3.7251325702235885`*^9}, {3.725132623663228*^9, 3.725132645549859*^9}, 
   3.725132718064534*^9, {3.7251327623398995`*^9, 3.725132766634314*^9}, {
   3.7251328078559604`*^9, 3.725132813538598*^9}, {3.725132876200553*^9, 
   3.7251328779475827`*^9}, {3.7251329158604383`*^9, 
   3.7251329248200655`*^9}, {3.725902604380831*^9, 3.72590260953881*^9}, {
   3.7259030217076893`*^9, 3.725903022398991*^9}, {3.725903125147027*^9, 
   3.725903128623431*^9}, {3.725903170006427*^9, 3.7259031731899567`*^9}, {
   3.7259034485591516`*^9, 3.7259034533685055`*^9}, {3.7259039637610626`*^9, 
   3.725904011823818*^9}, {3.725904099186993*^9, 3.725904105192998*^9}, {
   3.725904157086914*^9, 3.725904157633816*^9}, {3.72590433227851*^9, 
   3.7259043683156705`*^9}, 3.7259044148184805`*^9, {3.7262571078515034`*^9, 
   3.726257119321848*^9}, {3.726257236972904*^9, 3.7262572429252944`*^9}, 
   3.7262573371285343`*^9, {3.7262573998325596`*^9, 3.726257405487539*^9}, {
   3.726321091130647*^9, 3.72632110039561*^9}, 3.7263211604868426`*^9, {
   3.726321326676736*^9, 3.726321334457922*^9}, {3.7263214303255997`*^9, 
   3.7263214323520684`*^9}, {3.726321679803461*^9, 3.7263216835053043`*^9}, {
   3.726321729567436*^9, 3.7263217398860455`*^9}, {3.726322136287897*^9, 
   3.7263221441302013`*^9}, {3.726322542052599*^9, 3.7263225731789703`*^9}, {
   3.7263286077667494`*^9, 3.726328610276001*^9}, {3.726333050539727*^9, 
   3.7263330537908726`*^9}, {3.7264257048409686`*^9, 3.72642571410821*^9}, {
   3.7265830781997695`*^9, 3.7265830895872064`*^9}, {3.7266270603438635`*^9, 
   3.7266270775780225`*^9}, {3.726627555198803*^9, 3.726627599532218*^9}, {
   3.726627788294796*^9, 3.7266278018441963`*^9}, {3.726627846626136*^9, 
   3.7266278470636578`*^9}, {3.7266282883434753`*^9, 3.726628292138735*^9}, {
   3.726629512216957*^9, 3.7266295124357185`*^9}, {3.7266295808779964`*^9, 
   3.72662958188111*^9}, {3.7266297084411926`*^9, 3.7266297110169992`*^9}, {
   3.7266302775498657`*^9, 3.7266302810816784`*^9}, 3.726630381044924*^9, {
   3.726704354400067*^9, 3.7267043571038246`*^9}, {3.7267043931926165`*^9, 
   3.726704398381815*^9}, {3.726704432007569*^9, 3.7267044332424755`*^9}, {
   3.7267045716893377`*^9, 3.726704585896286*^9}, {3.7267047620083237`*^9, 
   3.7267047646657467`*^9}, 3.726704799503436*^9, {3.726704854887476*^9, 
   3.7267048585051236`*^9}, {3.726705324423644*^9, 3.7267053251893063`*^9}, 
   3.726705426790486*^9, {3.726705609675167*^9, 3.726705612503893*^9}, {
   3.726705817613204*^9, 3.7267058208330293`*^9}, {3.7267059880830116`*^9, 
   3.7267059901773243`*^9}, {3.7267066620104427`*^9, 
   3.7267066649643326`*^9}, {3.7267067699256907`*^9, 3.726706770348095*^9}, {
   3.726706856321677*^9, 3.7267068569154606`*^9}, {3.7267069936502094`*^9, 
   3.726706997510495*^9}, {3.7267071091160183`*^9, 3.726707112820583*^9}, 
   3.7267072024137774`*^9, {3.726707291604254*^9, 3.7267072938641396`*^9}, {
   3.7267075331505394`*^9, 3.72670753771403*^9}, {3.7267076370747075`*^9, 
   3.726707645842407*^9}, {3.7267077160342703`*^9, 3.7267077165811677`*^9}, {
   3.7267077764134016`*^9, 3.7267077882606325`*^9}, {3.7267078608419323`*^9, 
   3.7267078629362125`*^9}, {3.726707911701049*^9, 3.7267079231513896`*^9}, {
   3.726708021040066*^9, 3.72670803083998*^9}, {3.7267080876942616`*^9, 
   3.72670814607559*^9}, {3.726708230930764*^9, 3.7267082548667855`*^9}, {
   3.726708414720706*^9, 3.7267084372284327`*^9}, {3.726708501378209*^9, 
   3.7267085037382083`*^9}, {3.7267085582408266`*^9, 
   3.7267085606007967`*^9}, {3.7267086585500813`*^9, 
   3.7267086657862873`*^9}, {3.7267087454565043`*^9, 
   3.7267087508481755`*^9}, {3.7267087968093953`*^9, 
   3.7267087971062837`*^9}, {3.7267088459150496`*^9, 
   3.7267088499633126`*^9}, {3.7267088906044865`*^9, 
   3.7267088972627773`*^9}, {3.72670893593587*^9, 3.726708946624184*^9}, {
   3.726708993234175*^9, 3.7267089934377995`*^9}, {3.7267090251485333`*^9, 
   3.7267090256023283`*^9}, {3.726709075799428*^9, 3.726709086771551*^9}, {
   3.7267091425984077`*^9, 3.7267091432859535`*^9}, 3.7267092070190935`*^9, {
   3.7267092601677017`*^9, 3.7267092609338665`*^9}, {3.726709302494812*^9, 
   3.7267093038392105`*^9}, {3.7267094075042458`*^9, 
   3.7267094077698946`*^9}, {3.7267094420049496`*^9, 
   3.7267094434767947`*^9}, {3.7267094807270107`*^9, 3.726709482792408*^9}, {
   3.7267095228420935`*^9, 3.7267095236708493`*^9}, {3.7267095605139074`*^9, 
   3.7267095647492313`*^9}, {3.7267096570157948`*^9, 
   3.7267096572189307`*^9}, {3.7267097068307314`*^9, 3.726709710644302*^9}, {
   3.726709753519452*^9, 3.7267097626938725`*^9}, {3.7267098111110425`*^9, 
   3.7267098116735697`*^9}, 3.7267098422065277`*^9, {3.7267098751969485`*^9, 
   3.7267098764321404`*^9}, {3.7267099256163635`*^9, 3.7267099263509064`*^9}, 
   3.7267099598352757`*^9, {3.726709994850301*^9, 3.72670999588161*^9}, {
   3.726710051433663*^9, 3.7267100560285797`*^9}, {3.7267101335848308`*^9, 
   3.726710134131734*^9}, 3.726710240922762*^9, {3.72671035598461*^9, 
   3.7267103589539557`*^9}, {3.726710413884591*^9, 3.7267104151505604`*^9}, {
   3.726710472557659*^9, 3.726710476189285*^9}, {3.7267106484886236`*^9, 
   3.7267106495199313`*^9}, {3.726710748536321*^9, 3.7267107501462364`*^9}, {
   3.726710816381513*^9, 3.7267108180534687`*^9}, {3.7270300541236277`*^9, 
   3.727030079966696*^9}, {3.727101621464071*^9, 3.7271016282866144`*^9}, {
   3.7271025104788427`*^9, 3.7271025119097967`*^9}, {3.727102542340064*^9, 
   3.7271025455371943`*^9}, {3.7271033114083385`*^9, 
   3.7271033121798525`*^9}},ExpressionUUID->"61f18043-83d7-44bb-9312-\
c652adca39f0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
DaV4MFa+c4Lfb4r7GNeROZ8Hmv//PvL/AAWRfcQ=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$19944#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    TagBox[
     InsetBox["X", {0.15, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.509592559330068, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.593987661723263`, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["X", {13.388382764116457`, 0.25}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"E(meV)\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{}, {}}}, {{
     Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{}, {}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.727102529477496*^9, 
  3.727102563052861*^9},ExpressionUUID->"fae74092-0356-4a41-b22c-\
423281dfc2d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Break T ,R, and their combination", "Subsection",
 CellChangeTimes->{{3.7271016719837227`*^9, 3.7271016795877886`*^9}, {
  3.727102226868411*^9, 
  3.7271022502159615`*^9}},ExpressionUUID->"f3fe23aa-64b0-4981-b6e9-\
63df74f50e37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phx", "=", 
     RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phy", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phz", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]},
          {
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
           "0"},
          {
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}]},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}], "0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EE", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"HHh", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<E(meV)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<Y\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.16"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<M\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.25"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7223668735474586`*^9, 3.722367037314554*^9}, 
   3.722367210387845*^9, {3.722367258580003*^9, 3.722367259615691*^9}, {
   3.7223675093763423`*^9, 3.722367694668614*^9}, {3.722367813589961*^9, 
   3.722367841350484*^9}, 3.7226191272574887`*^9, {3.7226192205550737`*^9, 
   3.7226192225711536`*^9}, {3.7226192557662916`*^9, 3.722619339767094*^9}, {
   3.7226199936100273`*^9, 3.7226200053012133`*^9}, {3.72262004288863*^9, 
   3.7226200433886576`*^9}, 3.7226326716674647`*^9, {3.722632704579568*^9, 
   3.7226327060235014`*^9}, {3.7247014862614145`*^9, 
   3.7247014914439836`*^9}, {3.7251325544891005`*^9, 
   3.7251325702235885`*^9}, {3.725132623663228*^9, 3.725132645549859*^9}, 
   3.725132718064534*^9, {3.7251327623398995`*^9, 3.725132766634314*^9}, {
   3.7251328078559604`*^9, 3.725132813538598*^9}, {3.725132876200553*^9, 
   3.7251328779475827`*^9}, {3.7251329158604383`*^9, 
   3.7251329248200655`*^9}, {3.725902604380831*^9, 3.72590260953881*^9}, {
   3.7259030217076893`*^9, 3.725903022398991*^9}, {3.725903125147027*^9, 
   3.725903128623431*^9}, {3.725903170006427*^9, 3.7259031731899567`*^9}, {
   3.7259034485591516`*^9, 3.7259034533685055`*^9}, {3.7259039637610626`*^9, 
   3.725904011823818*^9}, {3.725904099186993*^9, 3.725904105192998*^9}, {
   3.725904157086914*^9, 3.725904157633816*^9}, {3.72590433227851*^9, 
   3.7259043683156705`*^9}, 3.7259044148184805`*^9, {3.7262571078515034`*^9, 
   3.726257119321848*^9}, {3.726257236972904*^9, 3.7262572429252944`*^9}, 
   3.7262573371285343`*^9, {3.7262573998325596`*^9, 3.726257405487539*^9}, {
   3.726321091130647*^9, 3.72632110039561*^9}, 3.7263211604868426`*^9, {
   3.726321326676736*^9, 3.726321334457922*^9}, {3.7263214303255997`*^9, 
   3.7263214323520684`*^9}, {3.726321679803461*^9, 3.7263216835053043`*^9}, {
   3.726321729567436*^9, 3.7263217398860455`*^9}, {3.726322136287897*^9, 
   3.7263221441302013`*^9}, {3.726322542052599*^9, 3.7263225731789703`*^9}, {
   3.7263286077667494`*^9, 3.726328610276001*^9}, {3.726333050539727*^9, 
   3.7263330537908726`*^9}, {3.7264257048409686`*^9, 3.72642571410821*^9}, {
   3.7265830781997695`*^9, 3.7265830895872064`*^9}, {3.7266270603438635`*^9, 
   3.7266270775780225`*^9}, {3.726627555198803*^9, 3.726627599532218*^9}, {
   3.726627788294796*^9, 3.7266278018441963`*^9}, {3.726627846626136*^9, 
   3.7266278470636578`*^9}, {3.7266282883434753`*^9, 3.726628292138735*^9}, {
   3.726629512216957*^9, 3.7266295124357185`*^9}, {3.7266295808779964`*^9, 
   3.72662958188111*^9}, {3.7266297084411926`*^9, 3.7266297110169992`*^9}, {
   3.7266302775498657`*^9, 3.7266302810816784`*^9}, 3.726630381044924*^9, {
   3.726704354400067*^9, 3.7267043571038246`*^9}, {3.7267043931926165`*^9, 
   3.726704398381815*^9}, {3.726704432007569*^9, 3.7267044332424755`*^9}, {
   3.7267045716893377`*^9, 3.726704585896286*^9}, {3.7267047620083237`*^9, 
   3.7267047646657467`*^9}, 3.726704799503436*^9, {3.726704854887476*^9, 
   3.7267048585051236`*^9}, {3.726705324423644*^9, 3.7267053251893063`*^9}, 
   3.726705426790486*^9, {3.726705609675167*^9, 3.726705612503893*^9}, {
   3.726705817613204*^9, 3.7267058208330293`*^9}, {3.7267059880830116`*^9, 
   3.7267059901773243`*^9}, {3.7267066620104427`*^9, 
   3.7267066649643326`*^9}, {3.7267067699256907`*^9, 3.726706770348095*^9}, {
   3.726706856321677*^9, 3.7267068569154606`*^9}, {3.7267069936502094`*^9, 
   3.726706997510495*^9}, {3.7267071091160183`*^9, 3.726707112820583*^9}, 
   3.7267072024137774`*^9, {3.726707291604254*^9, 3.7267072938641396`*^9}, {
   3.7267075331505394`*^9, 3.72670753771403*^9}, {3.7267076370747075`*^9, 
   3.726707645842407*^9}, {3.7267077160342703`*^9, 3.7267077165811677`*^9}, {
   3.7267077764134016`*^9, 3.7267077882606325`*^9}, {3.7267078608419323`*^9, 
   3.7267078629362125`*^9}, {3.726707911701049*^9, 3.7267079231513896`*^9}, {
   3.726708021040066*^9, 3.72670803083998*^9}, {3.7267080876942616`*^9, 
   3.72670814607559*^9}, {3.726708230930764*^9, 3.7267082548667855`*^9}, {
   3.726708414720706*^9, 3.7267084372284327`*^9}, {3.726708501378209*^9, 
   3.7267085037382083`*^9}, {3.7267085582408266`*^9, 
   3.7267085606007967`*^9}, {3.7267086585500813`*^9, 
   3.7267086657862873`*^9}, {3.7267087454565043`*^9, 
   3.7267087508481755`*^9}, {3.7267087968093953`*^9, 
   3.7267087971062837`*^9}, {3.7267088459150496`*^9, 
   3.7267088499633126`*^9}, {3.7267088906044865`*^9, 
   3.7267088972627773`*^9}, {3.72670893593587*^9, 3.726708946624184*^9}, {
   3.726708993234175*^9, 3.7267089934377995`*^9}, {3.7267090251485333`*^9, 
   3.7267090256023283`*^9}, {3.726709075799428*^9, 3.726709086771551*^9}, {
   3.7267091425984077`*^9, 3.7267091432859535`*^9}, 3.7267092070190935`*^9, {
   3.7267092601677017`*^9, 3.7267092609338665`*^9}, {3.726709302494812*^9, 
   3.7267093038392105`*^9}, {3.7267094075042458`*^9, 
   3.7267094077698946`*^9}, {3.7267094420049496`*^9, 
   3.7267094434767947`*^9}, {3.7267094807270107`*^9, 3.726709482792408*^9}, {
   3.7267095228420935`*^9, 3.7267095236708493`*^9}, {3.7267095605139074`*^9, 
   3.7267095647492313`*^9}, {3.7267096570157948`*^9, 
   3.7267096572189307`*^9}, {3.7267097068307314`*^9, 3.726709710644302*^9}, {
   3.726709753519452*^9, 3.7267097626938725`*^9}, {3.7267098111110425`*^9, 
   3.7267098116735697`*^9}, 3.7267098422065277`*^9, {3.7267098751969485`*^9, 
   3.7267098764321404`*^9}, {3.7267099256163635`*^9, 3.7267099263509064`*^9}, 
   3.7267099598352757`*^9, {3.726709994850301*^9, 3.72670999588161*^9}, {
   3.726710051433663*^9, 3.7267100560285797`*^9}, {3.7267101335848308`*^9, 
   3.726710134131734*^9}, 3.726710240922762*^9, {3.72671035598461*^9, 
   3.7267103589539557`*^9}, {3.726710413884591*^9, 3.7267104151505604`*^9}, {
   3.726710472557659*^9, 3.726710476189285*^9}, {3.7267106484886236`*^9, 
   3.7267106495199313`*^9}, {3.726710748536321*^9, 3.7267107501462364`*^9}, {
   3.726710816381513*^9, 3.7267108180534687`*^9}, {3.7270300541236277`*^9, 
   3.727030079966696*^9}, {3.727101621464071*^9, 3.7271016282866144`*^9}, {
   3.727102609848031*^9, 3.7271026185798473`*^9}, {3.727102737602128*^9, 
   3.7271027393232756`*^9}, {3.727103328595786*^9, 
   3.7271033295514235`*^9}},ExpressionUUID->"afd030ab-b185-441a-8e0a-\
73ffc976ea86"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUmnc81W8Ux+17ce91XdsdbhfXKiqrge8hq6goZWSUkcho0JAVKTtRGYVI
iLJSWZVCpVJ2UmQWStmyf8/vr17v1/f7fZ5zznOecz7nap2z7z43Lg4OjkEe
Do7//xVmzr4ujk7UW20t4tGjM+AyL7V6PddJzC9N7d0CjQG3z1bfw3FdxDLW
ug5uQOzvNTr+LywKI65nWXyRZkBeiSB1lvMa5st57PWqJANEC1kvvA1uYE8X
59UyxRkQem+ry4+wVOyBw3HnGhEG/M60wDnVpWMFb5KjbcgMWN/0qOMXZxZ2
ps9V9gyBAc67Xigosu5id859+yWBZ0DKm3fnXQ3uYVjmu2/AzYCPhp3v7zjn
Yep/9BgzK3TgfdVP7wm7j9XpblnR+EcHHWzcV+puIeZnVtnPN0WHUzX/Xh6o
e4gV5Zwz8v5FB9+vOPWfnKXYQFZ8Mm8PHQTSiPa8lDJs2yA9Sq+DDrk2IhGy
rEeYZk7xtFQTHb51MD47GTzGlvLOP2yopoNps+aFrrBK7NDWH5M7b9BhMH57
zlxiFeb5nOYwEU2H4N36TaJ3qzFhWbHblqF0KH9nLmNZ9wy7Xxt+a48nHRIG
SvuHOF9ie9OirE9tp0PvS4256aiXWFjk+nk1NTqoZD0V4Ka8wo6tcF6rZNHh
tdMz9XWsOqw6KslWm58Oy9/eRjgYNGCzBjEMXDsNPD5/V+oMa8SEriXmCjrT
YN0PvspBzhbs6eOx1UduVGiXmFLKMWvB3vRdb0vfT4XLO3vSXG+0YIU/rwx4
6lNh7MGjwGHFVszSq/BhCY0KZacPw8+9bdjt7dWkfy3SYMhZ9WYsvQPrO+NN
bNeWhqM0787Jrd3YhpfVYXrTknDg/ujCWkU/RuleMY7ZKg6MjpVbPl/7sX3V
xNggOXEY4aDo9az0YzHq2teOCYlDgM22sCqDAaxrheuL0rAYZOBiBPw/DGBF
JbquhxPEYMRtPXXs+yAmunEH9nlYFAJZvjrtfD8wvqxc9e54ETDaE95roPQD
U2+BZI/zIkAKSA4tNfuBlVqXvll0EYGslhf18Qk/MKkIziHZrSLwOpS8e6f0
TyztsGRS2iAFyN9LHZ5vGMEu99J8PbZSIOfWTHC+1RgW/T5EyvgXGaoa47d4
nhnDFN51hKh9JkPzvOKUSsoYdhGnMsmuI8Pyfge34q9j2LIM9l7/Fhn2E16b
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

       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
///+P+A9f2c=
       "]]},
     Annotation[#, "Charting`Private`Tag$71247#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    TagBox[
     InsetBox["X", {0.15, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.509592559330068, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.593987661723263`, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["X", {13.388382764116457`, 0.25}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"E(meV)\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{}, {}}}, {{
     Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{}, {}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271026347085915`*^9, 
  3.7271027549917107`*^9},ExpressionUUID->"5c520f8d-4ac9-4f79-b130-\
fc172b03e270"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Critical magnetic field
\
\>", "Subsection",
 CellChangeTimes->{{3.72719249829583*^9, 
  3.727192556572037*^9}},ExpressionUUID->"42a3d2a2-d8a4-4a19-b6da-\
e4b761255442"],

Cell["1. in ac plane H//c\[CloseCurlyQuote]", "Text",
 CellChangeTimes->{{3.7271925689450665`*^9, 
  3.727192585328968*^9}},ExpressionUUID->"267f51f9-096d-4e23-b13b-\
6b5cb57320eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hv1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7271925961086025`*^9, 3.727192610602792*^9}, 
   3.7271926456077633`*^9},ExpressionUUID->"846d91b9-071c-4919-987b-\
814896f7531c"],

Cell["2. in ac plane H |_ c\[CloseCurlyQuote]", "Text",
 CellChangeTimes->{{3.7271926597923603`*^9, 
  3.727192703570346*^9}},ExpressionUUID->"ef349711-ae2d-47bd-9366-\
cdc6a1d57254"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hv2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0"}], "}"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7271927075660057`*^9, 
  3.727192760561634*^9}},ExpressionUUID->"e4d8e291-d7c8-46c3-980f-\
474910d43596"],

Cell["\<\
3. out ac plane H//c\[CloseCurlyQuote], assume c\[CloseCurlyQuote] is along \
sx direction, which is same with sy\
\>", "Text",
 CellChangeTimes->{{3.727192765573824*^9, 3.7271927909667425`*^9}, {
  3.727192832035522*^9, 
  3.727192852086986*^9}},ExpressionUUID->"3417a4d6-b544-4a1f-adda-\
ced0bffe6dd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hv3", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.727192798325437*^9, 
  3.727192826392795*^9}},ExpressionUUID->"4fbb4773-91b4-418f-a5b9-\
d594c37b710d"],

Cell["\<\

4. out ac plane H|_c\[CloseCurlyQuote]\
\>", "Text",
 CellChangeTimes->{{3.727192861571915*^9, 
  3.7271928814738445`*^9}},ExpressionUUID->"9e1ce536-68cf-4b41-b600-\
2075dbaf876d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hv4", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7271928857562046`*^9, 
  3.7271929193711786`*^9}},ExpressionUUID->"e0c6c9eb-1c84-4874-bca9-\
580c9b634f82"],

Cell["\<\
5. Inplane 45 degree from reflection plane.
\
\>", "Text",
 CellChangeTimes->{{3.727650698250106*^9, 
  3.7276507358902864`*^9}},ExpressionUUID->"86ba80c0-9443-487b-91ad-\
39c444ef54fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hv5", "=", 
   RowBox[{"{", 
    RowBox[{"0.21132486540518702`", ",", 
     RowBox[{"-", "0.7886751345948129`"}], ",", "0.5773502691896257`"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7276507452730074`*^9, 
  3.727650757138564*^9}},ExpressionUUID->"734931c3-7519-4f41-bf4f-\
8649b633b9ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", 
     RowBox[{"-", "3.2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"phx", ",", "phy", ",", "phz"}], "}"}], "=", 
     RowBox[{"1", "*", "hv5"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]},
          {
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
           "0"},
          {
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}],
               ")"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}]},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
           "0", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[CapitalGamma]z"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}], "0", "0", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                    RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], "0", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hz"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "hx", " ", 
                RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"2", " ", "hy", " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EE", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"HHh", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EE", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<E(meV)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<Y\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.16"}], ",", "0.25"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<M\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.25"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.25"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"EE", "[", 
      RowBox[{"Pi", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"EE", "[", 
      RowBox[{"x", ",", "Pi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"EE", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Pi", "-", "x"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Pi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
     RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
     RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
     RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
     RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
     RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
     RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
     RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "}"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7223668735474586`*^9, 3.722367037314554*^9}, 
   3.722367210387845*^9, {3.722367258580003*^9, 3.722367259615691*^9}, {
   3.7223675093763423`*^9, 3.722367694668614*^9}, {3.722367813589961*^9, 
   3.722367841350484*^9}, 3.7226191272574887`*^9, {3.7226192205550737`*^9, 
   3.7226192225711536`*^9}, {3.7226192557662916`*^9, 3.722619339767094*^9}, {
   3.7226199936100273`*^9, 3.7226200053012133`*^9}, {3.72262004288863*^9, 
   3.7226200433886576`*^9}, 3.7226326716674647`*^9, {3.722632704579568*^9, 
   3.7226327060235014`*^9}, {3.7247014862614145`*^9, 
   3.7247014914439836`*^9}, {3.7251325544891005`*^9, 
   3.7251325702235885`*^9}, {3.725132623663228*^9, 3.725132645549859*^9}, 
   3.725132718064534*^9, {3.7251327623398995`*^9, 3.725132766634314*^9}, {
   3.7251328078559604`*^9, 3.725132813538598*^9}, {3.725132876200553*^9, 
   3.7251328779475827`*^9}, {3.7251329158604383`*^9, 
   3.7251329248200655`*^9}, {3.725902604380831*^9, 3.72590260953881*^9}, {
   3.7259030217076893`*^9, 3.725903022398991*^9}, {3.725903125147027*^9, 
   3.725903128623431*^9}, {3.725903170006427*^9, 3.7259031731899567`*^9}, {
   3.7259034485591516`*^9, 3.7259034533685055`*^9}, {3.7259039637610626`*^9, 
   3.725904011823818*^9}, {3.725904099186993*^9, 3.725904105192998*^9}, {
   3.725904157086914*^9, 3.725904157633816*^9}, {3.72590433227851*^9, 
   3.7259043683156705`*^9}, 3.7259044148184805`*^9, {3.7262571078515034`*^9, 
   3.726257119321848*^9}, {3.726257236972904*^9, 3.7262572429252944`*^9}, 
   3.7262573371285343`*^9, {3.7262573998325596`*^9, 3.726257405487539*^9}, {
   3.726321091130647*^9, 3.72632110039561*^9}, 3.7263211604868426`*^9, {
   3.726321326676736*^9, 3.726321334457922*^9}, {3.7263214303255997`*^9, 
   3.7263214323520684`*^9}, {3.726321679803461*^9, 3.7263216835053043`*^9}, {
   3.726321729567436*^9, 3.7263217398860455`*^9}, {3.726322136287897*^9, 
   3.7263221441302013`*^9}, {3.726322542052599*^9, 3.7263225731789703`*^9}, {
   3.7263286077667494`*^9, 3.726328610276001*^9}, {3.726333050539727*^9, 
   3.7263330537908726`*^9}, {3.7264257048409686`*^9, 3.72642571410821*^9}, {
   3.7265830781997695`*^9, 3.7265830895872064`*^9}, {3.7266270603438635`*^9, 
   3.7266270775780225`*^9}, {3.726627555198803*^9, 3.726627599532218*^9}, {
   3.726627788294796*^9, 3.7266278018441963`*^9}, {3.726627846626136*^9, 
   3.7266278470636578`*^9}, {3.7266282883434753`*^9, 3.726628292138735*^9}, {
   3.726629512216957*^9, 3.7266295124357185`*^9}, {3.7266295808779964`*^9, 
   3.72662958188111*^9}, {3.7266297084411926`*^9, 3.7266297110169992`*^9}, {
   3.7266302775498657`*^9, 3.7266302810816784`*^9}, 3.726630381044924*^9, {
   3.726704354400067*^9, 3.7267043571038246`*^9}, {3.7267043931926165`*^9, 
   3.726704398381815*^9}, {3.726704432007569*^9, 3.7267044332424755`*^9}, {
   3.7267045716893377`*^9, 3.726704585896286*^9}, {3.7267047620083237`*^9, 
   3.7267047646657467`*^9}, 3.726704799503436*^9, {3.726704854887476*^9, 
   3.7267048585051236`*^9}, {3.726705324423644*^9, 3.7267053251893063`*^9}, 
   3.726705426790486*^9, {3.726705609675167*^9, 3.726705612503893*^9}, {
   3.726705817613204*^9, 3.7267058208330293`*^9}, {3.7267059880830116`*^9, 
   3.7267059901773243`*^9}, {3.7267066620104427`*^9, 
   3.7267066649643326`*^9}, {3.7267067699256907`*^9, 3.726706770348095*^9}, {
   3.726706856321677*^9, 3.7267068569154606`*^9}, {3.7267069936502094`*^9, 
   3.726706997510495*^9}, {3.7267071091160183`*^9, 3.726707112820583*^9}, 
   3.7267072024137774`*^9, {3.726707291604254*^9, 3.7267072938641396`*^9}, {
   3.7267075331505394`*^9, 3.72670753771403*^9}, {3.7267076370747075`*^9, 
   3.726707645842407*^9}, {3.7267077160342703`*^9, 3.7267077165811677`*^9}, {
   3.7267077764134016`*^9, 3.7267077882606325`*^9}, {3.7267078608419323`*^9, 
   3.7267078629362125`*^9}, {3.726707911701049*^9, 3.7267079231513896`*^9}, {
   3.726708021040066*^9, 3.72670803083998*^9}, {3.7267080876942616`*^9, 
   3.72670814607559*^9}, {3.726708230930764*^9, 3.7267082548667855`*^9}, {
   3.726708414720706*^9, 3.7267084372284327`*^9}, {3.726708501378209*^9, 
   3.7267085037382083`*^9}, {3.7267085582408266`*^9, 
   3.7267085606007967`*^9}, {3.7267086585500813`*^9, 
   3.7267086657862873`*^9}, {3.7267087454565043`*^9, 
   3.7267087508481755`*^9}, {3.7267087968093953`*^9, 
   3.7267087971062837`*^9}, {3.7267088459150496`*^9, 
   3.7267088499633126`*^9}, {3.7267088906044865`*^9, 
   3.7267088972627773`*^9}, {3.72670893593587*^9, 3.726708946624184*^9}, {
   3.726708993234175*^9, 3.7267089934377995`*^9}, {3.7267090251485333`*^9, 
   3.7267090256023283`*^9}, {3.726709075799428*^9, 3.726709086771551*^9}, {
   3.7267091425984077`*^9, 3.7267091432859535`*^9}, 3.7267092070190935`*^9, {
   3.7267092601677017`*^9, 3.7267092609338665`*^9}, {3.726709302494812*^9, 
   3.7267093038392105`*^9}, {3.7267094075042458`*^9, 
   3.7267094077698946`*^9}, {3.7267094420049496`*^9, 
   3.7267094434767947`*^9}, {3.7267094807270107`*^9, 3.726709482792408*^9}, {
   3.7267095228420935`*^9, 3.7267095236708493`*^9}, {3.7267095605139074`*^9, 
   3.7267095647492313`*^9}, {3.7267096570157948`*^9, 
   3.7267096572189307`*^9}, {3.7267097068307314`*^9, 3.726709710644302*^9}, {
   3.726709753519452*^9, 3.7267097626938725`*^9}, {3.7267098111110425`*^9, 
   3.7267098116735697`*^9}, 3.7267098422065277`*^9, {3.7267098751969485`*^9, 
   3.7267098764321404`*^9}, {3.7267099256163635`*^9, 3.7267099263509064`*^9}, 
   3.7267099598352757`*^9, {3.726709994850301*^9, 3.72670999588161*^9}, {
   3.726710051433663*^9, 3.7267100560285797`*^9}, {3.7267101335848308`*^9, 
   3.726710134131734*^9}, 3.726710240922762*^9, {3.72671035598461*^9, 
   3.7267103589539557`*^9}, {3.726710413884591*^9, 3.7267104151505604`*^9}, {
   3.726710472557659*^9, 3.726710476189285*^9}, {3.7267106484886236`*^9, 
   3.7267106495199313`*^9}, {3.726710748536321*^9, 3.7267107501462364`*^9}, {
   3.726710816381513*^9, 3.7267108180534687`*^9}, {3.7270300541236277`*^9, 
   3.727030079966696*^9}, {3.727101621464071*^9, 3.7271016282866144`*^9}, {
   3.727102609848031*^9, 3.7271026185798473`*^9}, {3.727102737602128*^9, 
   3.7271027393232756`*^9}, {3.727103328595786*^9, 3.7271033295514235`*^9}, {
   3.727193233813818*^9, 3.7271932913885937`*^9}, {3.7271933229404535`*^9, 
   3.7271934184515557`*^9}, 3.727193481089752*^9, {3.727193525605837*^9, 
   3.727193558023923*^9}, {3.7271935885256433`*^9, 3.727193591320981*^9}, {
   3.727193628332505*^9, 3.727193638294836*^9}, {3.7271936704251113`*^9, 
   3.7271936716081533`*^9}, {3.7271937232728596`*^9, 
   3.7271937238739195`*^9}, {3.727193755044088*^9, 3.7271937565132475`*^9}, {
   3.7271938174411073`*^9, 3.727193829556714*^9}, {3.7271938863268967`*^9, 
   3.727193887134837*^9}, {3.727193937929411*^9, 3.72719393838256*^9}, {
   3.727193985582613*^9, 3.7271939859107533`*^9}, {3.727194022200244*^9, 
   3.727194025572756*^9}, {3.727194081775925*^9, 3.7271940840292463`*^9}, {
   3.7271942972822423`*^9, 3.7271943461928167`*^9}, {3.727194758829069*^9, 
   3.7271947594797726`*^9}, {3.7271948000832705`*^9, 
   3.7271948026166787`*^9}, {3.727194861370366*^9, 3.7271948733483663`*^9}, {
   3.727194968141371*^9, 3.7271949703262453`*^9}, {3.7271952940948334`*^9, 
   3.7271952984314027`*^9}, {3.7271958107114277`*^9, 3.727195811320836*^9}, {
   3.727197508963908*^9, 3.7271975215175204`*^9}, {3.7271983050757217`*^9, 
   3.7271983063522964`*^9}, {3.7271987253038692`*^9, 3.727198726396596*^9}, {
   3.727198819423386*^9, 3.7271988207326317`*^9}, {3.727199099263557*^9, 
   3.7271990996658244`*^9}, {3.7276517222928514`*^9, 
   3.7276517297322817`*^9}, {3.727651789614955*^9, 3.7276517916781573`*^9}, {
   3.7276518506674576`*^9, 3.727651851636771*^9}, {3.727652085392293*^9, 
   3.727652086647128*^9}, {3.727652187950184*^9, 3.7276521988953357`*^9}, {
   3.7277125184301767`*^9, 3.727712525119655*^9}, {3.727712585889343*^9, 
   3.727712586642846*^9}, {3.7277126378791504`*^9, 3.727712640600972*^9}, {
   3.7277126788495803`*^9, 3.7277126851608067`*^9}, {3.7277127363189635`*^9, 
   3.7277127380407677`*^9}, {3.7277128309150467`*^9, 
   3.7277128337499437`*^9}, {3.7277129324920535`*^9, 
   3.7277129350087395`*^9}, {3.727713099600935*^9, 3.727713109173346*^9}, {
   3.7277131531788073`*^9, 3.7277131552682076`*^9}, {3.727713235640015*^9, 
   3.7277132362984576`*^9}, {3.7277132994868164`*^9, 
   3.7277133003023615`*^9}, {3.7277133364735804`*^9, 3.727713337119011*^9}, {
   3.727713374978361*^9, 3.7277133761681547`*^9}, {3.7277135111775465`*^9, 
   3.7277135145798235`*^9}, {3.7277138268659053`*^9, 3.727713828876251*^9}, {
   3.7277138825932145`*^9, 3.72771388325566*^9}, {3.7277140792318687`*^9, 
   3.7277140836758432`*^9}, {3.727714143272745*^9, 3.7277141460075746`*^9}, {
   3.727717608912695*^9, 3.72771762334936*^9}, 3.727717853859692*^9, {
   3.727717893322111*^9, 3.727717896868486*^9}, {3.7277179841989565`*^9, 
   3.7277179883937654`*^9}, {3.72771804447431*^9, 
   3.727718046327551*^9}},ExpressionUUID->"5cb60137-7e8a-4472-908c-\
7b433ef5666c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
F/PqTW4tC5pWZ2naZD9eI9pqaf6ZhePHRukJZL9ee3i08M1XFk5o++4K/x8P
jMrMdm4l83Eqdmkf2f9/9udndXWyEGW5j95A6saf5ux9PWT+qhVczcjxTZ7r
k4X6WVgnn8lUJOdrbvGRihtgIeftTi23NxS0uhyNUhtlIe6Xmb8OySftH9Mn
bk6yUHI4sd31HQWdKx74mwgpIbjtpKMkyTfdL9/8eEFRwkxEf+oskn9+WLZv
XSOuhPrS/yLKP1PQ+2S8vllaCdvsRt+/J/mpb4H8Sh+GEvID59mtIvmqP1ev
YpylBEJtToYVyV9/9bHkuJoS3trPjr5F8tnQNacHihwlxOim3Ioi+W1Ew09w
VVsJUg1SOTVkvibkM5SfzVKC0P78J6VkfqdOFcQ7zFXC3qBjv/+X/3/UalqD
iRLulnetCiH9ITIxOTRAKKGpfcOlQZI33WztFs1dqoSChW45D4yoKEtIOOxv
r4RSt5f+daZURBno0/6sVsL37nk2JstIXg4OdDBerwTd3xPO+9dTsbS8OM7X
RQlyug2zmduooLhuUPq1XQnRjs9l9uynwuPWlU2GXkrQdOyZ0ibvR/lw36Xd
u5Qwyzw3fFEcFUfjovR6A5Sw8a7Z76AsKqgl9xZ9j1LC07DJaINmkh+kpg7z
Tyjh/OM/lo/6qKh0tivzjFVCYOzqK2mTVET//ebQmaSE4ddVNzxVaaBpSW5u
u64Et8tKdeObaBCL9gz7+lIJEqPXRw7307Cz9l6ZapUSPkrmqc8RoeMVe4q2
sUYJm289ypzNouPEo4T4hgYlrI6J7JMn6BDvKb78qUcJV2YXvLdPokNiueqL
95LKYCr1DXUsE4M04z29fJUyNt9rfFPdK464iaONW9YpI2DtNwVRcQnIdCy+
M+6sjLTNZlnBuhKQy7+x1thNGbePXg1Q85SA4oawi2mByjj6o9nftEMCammz
5vmfV8ZMNt2N1SsJfV7sFnaHMtS/fqw7piEDm7n/FRzYr4IUc5NUucPymOl5
lHs5RhU9rYHyJdEssPM3eG1PUYNdd1qIZq4adrxNHx1MV8PIYZMF6yvUcK+9
9UT0ZTVwvLE9+qsarOV3Z2ffUoO45c+NjXR17PQN/zP8RA1Z6572WW9Tx329
mwdPtqphQDnvwpCsBpZeHI97oK+OoJL7P9292Tidb8GxNVLHuxVTRVlhbNS/
jbrfMFcdo3+T7VsT2fCekK6bNlOH7O5Vp42esxHnxFOxX6kOw0SrKVOGJj7L
L7vWFKCOrkS/d08eaWJX9IVH1KfqOJwZulPyEAfye5kshxJ1xIwx+kSPclDo
EhcYV64O/79xrgOxHNBnRcxRqlbHo2o/g3sZHGR+dM/Wa1aH2fxR6VulHDRz
DC4tE9LAhZ7yCicqF8ckMqfjKRr4VGo5fFaaC8Mh9c11Yhr4J/Kg/RmTi0Mv
ZVRc5TVwZSonu0eHC2XfgQRfngYO/Tb3Pm7DxZonj6PPLtXA374lfscjuRjL
nNv1yV4Dlxvx4f4JLi7HZVurrtDAPkvOnZfxXPRvvyh0bb0G4t1bOh9c5OKk
WOTBfC8NdKWtmh9RyMWcgfGGsV0aEHRzXcaec9HwNcDU3E8Dp5a+/+BUwYVu
rsdQRTC5fmtE0JsPXJSvt/f9fILc/+L6/j09XOwmSqvUTpPrVz0wlvvNBUN/
scG2sxrYvv5Gf9IQF9unDH78OK+BgfwDq61nuBDrzrSdlaGBuPQv13ZTeLj3
XuO6/1UN7Hcrrt8nzsO/q7JuE7fJ/Vv3zOIq8HA99kSJRa4GXKMLxsuVeFi+
X1gz6oEGNi/IH7JR5yH9v8Gvkk81cMlCuLJJmwereT6LV5eQ8a55sPSvHg+9
6l2pSeUaMHprtLTVkIeFf+rXa1RrwKT7l86y+TyybhVZPftAxiM9JVFmIQ+v
Ji8au9ZrgFg40HLVjIczkZHq040aCJyot6YTPDjTPcUvtmgAUn+nF1vxwDlt
P7KkUwOx+6IdzW14+MEw7Gj6oYGdeVZnpe15OMAefKo+oIGGvnNc5goekFl/
6+mIBuhJyYuWreJBTFB0bvOkBsrOSFUuX8NDTe7FqKkZDRwJIJaqOPKQuiBy
7wUKG3/iHM3vreNh2xMP1yXibDhE/7WV38CDnqW9Q5M0G9s7G0SXOPHwp9LA
NJTBhiXNQ3u2Mw+Plstqqyux0XJ2wusXqcNqB+SeqrGx7N/e1H0uPNg6109v
4rBBdDkmlZFapvlx76Q2G19ZbJtGUte7X/ycrs/G8fvOmUWkzuiJKDczYkO/
KrPIndRefh73v85l40v83UufyPmNhu0yDpmyMflb/KAcqUcOGpxSW8LG8tDx
MEVyf8+FZA88ARsuSpyBtvU8REcPeGyyYUPzClsnhDzfSqn6NZP/sVHWxQ5u
/N/fWxIeW6SvZOPlxhXraGR8mpUuGpg5svFsu/WC6ZU83LgYofzViY2ofveM
4uU8mNyyG1DdzsaSJ6FrbtmRfjIyaCnyZGNX26eGD0t5qMyXqdq4i42tScnb
X1nysKHk0/W0fWz8d99xNY/MN9v2ccLiA2xYKFjNP27KQ/fbC+GNoWyc6+hQ
eDaPh6DP7i6q0WxY7+qYzjDgYYmrnW3RSTZ83d/fWa7LA6VDMG9jPLm/Ro1r
73g8JPX/lUpLZWPpZHn5WhUe8qkRJSrZbNg/2tW1j/R/6Cn3O49z2VCex7z3
9R8XS+Xt0lzyybqm8SmJPc5FnbpM4PlnbMzqeii66BcXQ/Mu6KrUsMF79++/
zx+5mOdWGKc8zMb9e417PdPJ72/GNl8dJ/dbam0qlMTFhv5tRrP+ket1C9qO
xHJx8KD4O0u6JgoWl8+1OsxFScJG6d0qmqgKL/6v0JWL5S+mTj0z14T/qaFP
A6pceGhbxrhFa2LDm/bA6BgOHAY7LeslORja9vzjkjg2Fgv/aHdJ5OBa9lbT
D/tUYJlosWYVn4sT4fb8pA4FFNaflQ7U4yLkTsT6ve8VMFu163WqgIvgebx2
xyckR105ZdVuxMVR4YSEOYkKmLjbMC/IlIvXpj51DtYKePAmgJVuz8XWlVXP
5K8zoCOS9bV7Fxcal2eZd/vJ44LNRIrkHi6Or5Z1+LNZHooxK9bN9uPCNoFn
RHOQh4jcUFXIPi5EHn3lbtCWR7OG5XOpUC7i9112OfVFDimLvl6ee5qsu+p5
5/1t5SDuL+sVlkvGtWuyd2yDDDIVvzqm3id11He4LZABCm9Y5j3ggihu0utX
kMGBGXON7kdcvLjp7+P3QRo/TvvUrSjhov7F9oXaK6Xx6vZrKw2ybpY1WrQ9
XykFj5XJs03JvG1qaCFOGEtBaGAbe80nLuLW+xYfkpPCwkVj40e/kOfLnJzf
USuJrJf8+31tXPjndtWWuUgiujNK8+kA6YvcTauxVwK8E6uk68k6G8p9M93n
KIHnBmqTv0e48B2pLK4ylcBIQF691iSX5JmLv3WFJOAp3Hb6lCgPrX5ZK7Yk
imMp22JqoyIPbtznBS7lYmgtFe8NZPGwrLnQLipbDKGenz7HKfNg9nDu4t4E
MeTn+DwoI+tuUMGPiQA3MWibpe8S6PDgr1k3L4oiBlHnsYbxBWSdqRZmmK2n
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
BtD6///v+j/V2QRV
       "]], LineBox[CompressedData["
1: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
vRe70xcqwpH/f1/w/wDLDfIf
       "]], LineBox[CompressedData["
1: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
lfGy8/+kT0ktWVo0TP3//9b+A8wvehs=
       "]], LineBox[CompressedData["
1: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
iHQ8zA==
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
G3KIV6Q=
       "]]},
     Annotation[#, "Charting`Private`Tag$345686#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    TagBox[
     InsetBox["X", {0.15, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.509592559330068, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.593987661723263`, 0.25}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {13.388382764116457`, 0.25}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"E(meV)\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{}, {}}}, {{
     Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{}, {}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7271934364133043`*^9, 3.727193498429016*^9, 3.7271935382590895`*^9, 
   3.7271935700563283`*^9, 3.7271936044477863`*^9, 3.7271936523575163`*^9, 
   3.727193684080558*^9, 3.727193736873131*^9, 3.7271937706357746`*^9, 
   3.7271938432847843`*^9, 3.727193901619221*^9, 3.727193953605116*^9, 
   3.727193998326021*^9, 3.7271940418978357`*^9, 3.727194124606475*^9, 
   3.7271941889344068`*^9, 3.727194362430461*^9, 3.7271944415751934`*^9, 
   3.72719449226257*^9, 3.7271945360104575`*^9, 3.7271945897944045`*^9, 
   3.7271946574172106`*^9, 3.7271947030726557`*^9, 3.727194776479336*^9, 
   3.7271948151321974`*^9, 3.727194886105839*^9, 3.7271949842165136`*^9, 
   3.7271950578246393`*^9, 3.7271953109982686`*^9, 3.727195410011983*^9, 
   3.727195525249728*^9, 3.7271956015580435`*^9, 3.727195711118511*^9, 
   3.727195825536945*^9, 3.727195907560121*^9, 3.7271960920478396`*^9, 
   3.727196269905121*^9, 3.727196405569133*^9, 3.7271964523598766`*^9, 
   3.7271965410891905`*^9, 3.7271966117800694`*^9, 3.7271966582773366`*^9, 
   3.7271967423414197`*^9, 3.7271967806798663`*^9, 3.7271968319579153`*^9, 
   3.7271968747765617`*^9, 3.7271969279195127`*^9, 3.7271970164004436`*^9, 
   3.7271973358728943`*^9, 3.727197395234129*^9, 3.727197463019452*^9, 
   3.727197555411496*^9, 3.727197600252768*^9, 3.7271976516039033`*^9, 
   3.727197698513239*^9, 3.7271977450777903`*^9, 3.72719785091965*^9, 
   3.727197920715653*^9, 3.7271979633560133`*^9, 3.727198008763089*^9, 
   3.7271980547746005`*^9, 3.7271980989372144`*^9, 3.727198169921528*^9, 
   3.727198215838727*^9, 3.727198318404009*^9, 3.727198353224142*^9, 
   3.7271983906934185`*^9, 3.7271984300906367`*^9, 3.7271984705091195`*^9, 
   3.727198511805608*^9, 3.7271985459253235`*^9, 3.7271986080626707`*^9, 
   3.727198646408739*^9, 3.727198737700918*^9, 3.72719877412473*^9, 
   3.7271988334833927`*^9, 3.727198885998563*^9, 3.7271989195284424`*^9, 
   3.727198961462003*^9, {3.7271990103423243`*^9, 3.7271990395884094`*^9}, 
   3.727199073827176*^9, 3.727199114608611*^9, 3.727199159669422*^9, 
   3.727199212810911*^9, 3.727651741767661*^9, 3.727651806668408*^9, 
   3.72765186527976*^9, 3.727652100006935*^9, 3.7276522126637907`*^9, 
   3.7277124826242237`*^9, 3.7277125412294397`*^9, 3.7277126020631695`*^9, 
   3.7277126555079513`*^9, 3.727712705335312*^9, 3.7277127547400455`*^9, 
   3.727712849676608*^9, 3.7277129506502113`*^9, 3.727713123036628*^9, 
   3.7277131712829285`*^9, 3.7277132522698154`*^9, 3.7277133123724427`*^9, 
   3.7277133455916853`*^9, 3.7277133885144234`*^9, 3.727713526787998*^9, 
   3.727713841772884*^9, 3.7277138969928565`*^9, 3.7277141057256064`*^9, 
   3.7277141591863995`*^9, 3.727717667554964*^9, 3.727717825501704*^9, 
   3.7277178677700033`*^9, 3.727717911974599*^9, 3.7277180012313585`*^9, 
   3.727718059214179*^9},ExpressionUUID->"c96d6bca-e0c8-4b30-bbf4-\
212bbefd01ea"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+P8BLtBOug==
       "]], LineBox[CompressedData["
1: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
Gg==
       "]], LineBox[CompressedData["
1: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
fs//AKm+17Y=
       "]], LineBox[CompressedData["
1:eJwt2nk8VN//B3BZZ5SyzdwZKkuFxjaVUqjzjsrWYokWlEhFEZIKURFK9ZEk
VJayyy6RbKGQJCT7vu9EScrv3O/j9w+P54OZufcs97zP64yU1UUjG04ODg46
/kH+5irir+ndenOX/HKprm+b2LBhuFB97aOTqNPm3ADphXTl081BF9Gqkp2/
SWf8RN+EUq8gPe0oRiN2v+i5+ZwgL+QR/GAP6XvMCoHUfG/kmMN7nXScnHkk
R6ofuqHA+550seoU2zgqAPUM3hH5jt2yz+d9bNB/aFT/gRPpBdYKlsf7h+id
4qo20n6bG51j8x+hqgY+4yZsUbWo/Jrsxyh7wbmRdPRuO+75lCdIuFrvTDO2
kq7KAan4MBQx6M/Zgp1v8O+xXtRTZH1SJpn0t5NBss+DItG2UUupNvJ+tiht
7y2PQn+sxydIX1F91HblfTT6yJlb0Y7NjSw2ROe/RANXu6I6sas031duzY1B
86YbI7uwH+6TdajKjkV3bH0Tu7HXHpzO+ZESj57tPdDTi91naGrmn5SA2KXP
Bfuxk03yl1bHJyLvji96A9jbLW7r7ItKRnIuUT1D2EYXmC2hQWnogrBexAT2
iu2oKEQ7HWVt5WRNYU/lOQl1l6ejozprSqaxcwoaX19+n4ECfm0WmsPWKo/6
F5Gfhe73F25bxJbRrjcY3pGNJAJdxP9h81fyvNySm43iLcb5OTazobbaTrsi
+zVKHK2hcmNbNKgETqe8Qdq8ZT4rsMH0bI+6Qi5y8aQUrMRe3xSm4puUi0Kv
GCwJYo+0/msSi89D93/fjKZhX+mtkNoTlY+WrJ2PSWA/nDHPCgkqQmEKmp4q
2Pdp4RrFAsUouJ3PVxW7LuO2xFajYtRfZf1EDdtsxLx/bWsxkqSpNAK2g9ly
p5mxElRe71B0ADt45zn/MMEyVMjay7DF7lwm/WbwSAVSS7jlH0NeX4RAuPmz
ClSY+PJMAvY5td8eX7sqkJ+woM4r7BnnWs1820rUKtUnko3N3edZ88C9CglL
i1aWYrM+tPZvjaxG0Rn6l3ux1cv1+DUv1SLzrVzrpLewQbAh7ovqo1pk930h
awN2Xw/nY8WsWvTxAXX3RuwHHPkSzB+1qOx48EE2do+6/NYp569I0Nhp0y5s
/8zllhHOdUg/xH3gKLZFydkNwUF1iMVhLmGOvbm2dOROZh3acm3Q4CR227j7
5cszdSj4odRzG2zljWN39zvXI9MPKxqcsBsjq18vODWgFQPDd/2xk1Pl3Kce
NiB1lplKAPaNAh8YyGhA/P9+193H3tiq8enrdAMyWuycCML2oKd0JTh9Q2Uv
WU+fYRtuoMZFPPyGBmr6ByOwZVRszgdnfEMptQJy0di1hmt+ek1/Q1/WlN2M
xV53//7yI06NqMo8MTgFe/7pcO3+h41IKSHJNQ27OmlviGZGIxIdP6qXge1a
8VdSaboR2VLay7Ox9b8fG1gn9B2t1Neyz8GWHHidzNz0Hc1ZXuHJxa7ictjG
4/QdqZyw48vHjhSu+rMQ+B19Fnrr+A7bRUqmZCr9O7q2+XdlAfYa1KHfNvUd
JU+c1S/GnjmgJlQn2IT+VsldKsH+YB7S+JHdhAZD/tx5j+3odvBUlmMTurl1
wbsMW89BI4ES2IQu1DhalZP3Z8WatEhrQie6apQ/YC+aMLZl1TShrMSuUdKN
urzXKRNN6IObc8hH7PSds6UWAs2oIsdAuQL77qYe/iyFZmTfoJ1D+vSGWkPK
/mbUYrFevhJ7J7Mw1OJ8M3o5nXmfNF3gVWfm3WbE1CpuJz3FES5DSWpGZmJM
8SqyPWb97C0qm9FFk7t7SccMXc7OHGpGOkNd5qQ926z/8FFakHf7sCXpI7WG
mhayLeiCqbMhaXYZupO5rwWdCdBWIs2fq1jLd6YFcX3e9ov8vL5kccLidgtq
8hZ4RbowknoiM6YFFbLD9pMOffQrhq+sBZXbxzeR9+Pk1z9q3tuCNCZ4DEjr
uddvzuRsRdOetzLJ9lh/seQan3Qr4ucbXSLb659VWrH57lbU7CewnXST6XO+
TMtWlLEm9zjZ3pl6AQf5brSilqXcs2R/BOy69tg8shWJ3Ow4UUq23+azbRmF
rUhZ8Bci+2+XjMk6vo5WVKj6lZ/sX4aYlp3531YkG6leVET2v8CmjIzVbegq
P49FIXbs3ApkbtaGih5MGZPjyXN44XaGWxsKeZ/+Kg/7aPtQNW94G0pjr5h4
g72ivOx4RlMbctCo20iO14HczGje+TZ0YLB1XSZ20auoITOiHbkMFvKkYzsH
e7jymrYjdMzgRjL2fn+7ArPL7UinPoKRSM4nj6PcGcHtKCuLNzQOu9laJcis
vh0xxU/rk/MLtoylpBt0oJhWGa/H2GKyLbM8jh1IYUlQn5yvP8Qq1M3+60B1
1eGLD7DjOGMqeWo6kCqlfhU5/wXqzPqP63ei+IWy6avk9ZbrKqTbdaJi9/B+
F+ziPNVLPHc7UaBTRIEjOX+iRZalV3SitAJ35jls+1ybB5zrupD7uzB3ky3k
emoouUylC51+eV3CgByPzRqZS3u60Ootv6P0yNf/EWlcPNOFYnsb1BG22673
a34ldaHBb/NVMtgaX1LS5vK7UOG4s4kk9t+TYbtnq7uQpVB5PpN8Pt10tJme
6EKcPjTxFdi+ZWtTRjd3I458h7WT+PmrY8KPRrS6UaZd2s1BbOrAXO3Q4W70
1I9W1Il9j+/zbL9rNzJ84fHxC/YjPXeNrrfdyFZqjJKKHVX7/VODZg8y50uR
tMa2OlVqUW/cg4o90gWOYa+bSZ38eroHQefTrwex40R8Rb749qDjR63ad2Cn
mKqYVVb1oP79u5cEsN+2BY4UGPUiuX2Bu1Pxeuph7+HxzroXJQuv8o3G3vnv
7Mp8l150P88+IpisdyTQ5tyQXtTaukrPDfuj1fi1zJZeZD/23U8Lu2FIlxpv
1YdktBMuf2azYTJMbq+3cx9CqtsnCrH59flunrzVh2yUB3amY0NK2Tzxog+5
8a6yCsJOdkJD/t19aOeD4rzD2LcWVD7aWfYjyd8+/l+V2fA8WYRL27Ef3bv7
1qoYO9d8Zte6G/3ImG9UKA17vDAtpzWyHwnvzpsIwD7qzYrb39mPKi+7RWhh
K6+QvK10YgB9C7/zNkkJz++Cf8X8DgMop97oWwj2aYf2xYHrA8j0L7P0FnZ4
bbhL5PMBZD0vSxzH5n1MOy3YPoCQ2Y/nvNhta5ZrzZgNouvDe1YcUcTPR+Wf
HDnHhlDmTe6XDfJ4/FzRlR+wG0LWjrT8XGzbomcmdI8htMlKPPwZts4hrSTX
iCHEJXvzlTU238VAY9XeIbSwWkxiksUGn1RWXO6FYcQ/v0fiz0Y8vxVP6ud7
jSC6ckzmgCyuJy5nXh4NHEFXMyQvlGJbFPBEib8YQb/WFQxFYmsceDXrXjaC
Fg0HWEex/1z4/VyDOoqCfs99KZdhw9VXj6YKgkaR5w+H24834OeffMXj4tgx
dGLP+BDPOvz8tOm7EZUzhg5E8TxvlWaDaRTHhRsfx9DasxYiGdhqtB2aMDyG
HIov7TPD5lxKnChSGEc+6R2lr6TYEFQXoF2UNY5+3d1E3SOJn4fXDv0uKJlA
tVfd2Vpr8PM0+3zf87oJ1CTuzy2EHTLh9+V67wQqfWwS2rEat591cexOnkmU
qj367yq25oFNRgU6k2jspdCHJHE21EuKJL/7MokWj21U5BTD9bb1+dR2hymU
eWP/qBedDZZCP66+c51C6V+v+uhilxe6aT31nEJjhQu9wtiBzLtNRx9MoTO2
tXMxNDbIfkngbEiZQguKntYfRNlwWG3AtGpsCkkK/DX/J8yGVMFTSzl206gr
cfd1zVV4/hWYGgSemUEdTwVMmHy43slhCDMvzqBQa1mzGl7cHmkt9dFXZtCW
pXgxb+wXUSeOZPnPoEexueWjPLie8j5zojFpBoWoMT/lceP303O9sHpyBtEf
KgTocGJ/f+yfcOUH6om6dOjUgjJYTzcUF/vPojVfbkYZ9ymDpVvgkdzAWbTb
5e2euF5lMOfaP5EWOou4G/7YzfcogymtVDwyYRa9a7y+82m3MujsyHC9XjGL
rmRV/G7pUAalm/cV1ChzaMfVDVWazcowL7gvNMtvDineE4/N+qwM99hvLsb5
/kQxcxxXmK+VgbP4jaqP2zzyF+MtWeOlDEIs/ZrO0AVUwH6o+Fcdv3+k5sup
oEX0Pf/sjqtzSkBMVu/zevMPDab86syOUoLwj2+XcdlygDrhe8R1rxJorNm9
JHl6GRRvEgiOG1YE+S7BvusunOBreSfhhJcipCQIn3vtzAV/NfSdQ+mK4NFh
US/vyw19k2W/liIVwElju35EMA+E+HI8KpFVgIXIPVajgbwQ/uKERfVreah1
DLe88oIPdPKqnxmpywMrUPCPSxwf8AVytwbtkAfvNN/Hzkl8MBUSG1KvKg/b
Jpyr7DP5ICn2drCpijw8P6+vcvo9H0ic1aFbK8qD3ZlFPsMePiia/8QTLiEP
3OYn0ljSFLD9wOuVwC0PJ9wbdOVkKHC59lAyJ5c8vAnX69vAokBecpf8iWX4
9c3bmFKbKVDA4WrO/MeCr6arvAlNCpwN9V/24hcLIgyLTbmtKFDPZDOWj7Jg
3nHb9LIzFAhWNeO6NcwCo8BXAUu2FNhcIH/hzyALeL6EFi84UYBX2kvuZx8L
Lux3Yk3fpICCgV/Zyk4W7NCW/tceTYFJL9b3iXoWqLys8v8YSwGp9bIusXUs
UFpyFslIpMDSQpPQqa8skH5TKueTQQF9b9EDQzUsWC5rY8wqoUDovLHdrioW
8HoLdIiUU8Dz8seI9ZUs4Oh8fe5vBQWeHBKXEa5gwWwIr2dtLb7+3qQQ7g8s
mJhJpbxtoICa1BkN/nIWDB088uhlEwVGPj1OYZSxoJ03IcG1iwJfUl/4G75n
QZOVwRbLPgpeZ5zfe5SwoK5wvkB3iALZ+x6fySxmQbVYtM6WMXy/58w7Z4pY
8MFVt371FAX+bv8csgu7uG7agneWAqOHv849LmTBW6XwoclfFFAcOGT9u4AF
2Xc1LzX/ocCFHypatthpAyN/3y/h19fYzvW/Y0GS5iP/V1xUOKRa2nAROyZC
XSSEjwphhSNb+bAjFnqfey2nwqNF3TOv8lkQanpPznYVFfRK/iWdxA7KVMky
EqGC8M9OJIV9b2X7Tg2CCo5j4abTb1nga3e7YoM4FWKDp2i12Dc/KBqvkqDC
nAkzrADbQ7qxfV6aCu/kTSbzsF09Pc/1yFDhm9wr8XJsxxaZH59YVLD92C3a
iW237cv110pU8PN6Ws6HP+900BVK5GYqaCjnrUDYJyYkHvlvo0IcT1uBD/ZR
vYo1zmpUUF9GvGjCNo5zTDDbRQWRj++vquH7O8jJ3LJXkwql8fbzidg6J0oK
lPZR4cvGri8yuL0039rqMPSoUGKiFJ+OrUEXrl92kAqHdWsktXF7b3N+azFq
SAWGUkrLMDa7xmqowYQK3d4aF0Nx/2zwzfobb0GFq0lvfQncv5I9Zv4PT1Hh
gEbt1kFssV3cIu42VDi5xZdZgsfDyp+H5Q7aU8H4YljLQzxeftn8NJr1oILR
cK/CMzzeZkoi2ttvUEFfp8ImE4/HsTXa5z76UMFSzqv8Cx6vXd+eXA+/R4WM
qqWktZ9ZULl3RwI8o8Jro8+J3Hj8X/3oqeQVRYX+iJvBZ/H8kNMtyy6IocL9
9JTttQ24v/YfKlFLoYL3bdGAjO8s2GNs06JSSIUxn/ldKe14vFk+XLGxiwoy
SQ+aj4+w4I37sKPQen5Q/PVjYxiPPMRmhO3oSeaHdRnxm3uQPNDWKdidSFwO
Q9W12y5kyEPdMsot5rsVMKyvXumhqACvKZfiaisFoF06q3dPrAIo0ATtrMpX
AqPBsOOxkCJMPvgpuqVxFZwr98wSvqUI6/z8lC/aCYJxrp39jX5F6Dne2qI5
KAgVAz1zgruVQKe//vdrByFgvH/8a/NzJbjqbHOOPi4ExxLMxsdGleBgzlM9
uqsw3PEyfrq4XRkmFu08uH4KwwFOjtrBq8oQ/f1mtsMlEZhevdWhJ00Z19/s
zgeXRcA4cVqoOF0ZFLI7qWlXROCsvOaG5xnKkBO48+SkuwisCngebpKlDNW6
v6mOPiKgZqRWXJSD15d8x5NOj0UgRubEr6sFynAw6iS/yxsRyNL5uNarShkW
zu20vPZHBIZ4Cle24vVLD4/Ry39FILzU/IA/Xt+eCjAknZZEwMmSc9VWvP5p
ZM50nuMShZxz18Xv9yuD55/4k0eXi0Kz9q9jqkPKwPVA+KSquCgcL/e45DKu
DCuyBi3m1ERhLKbR6OEvZVjz96GZk5so5KvfW5DH67FOz4G8Jx6i8MY7adU1
bJePVKLQUxTszKfayrGrHt6s4/cWhZLHRNQJvJ67yjjpxgSIwghva+U9vP7X
HjJQ/f5MFLTl8rJaqbh+fbFSZGeRKHQcr9y4ZyWuv/2qHK1LROHJ1IUj/thN
F3xr7pSKgvN0wK5qbCXVf3caP4rCZXH7Hca4vmj9NM7hWCsKH38TvRaCbFCZ
q5540S0K6v1aQmdwPTKgHVBF4aYBl/U/VU1cz1jpW0pu4KXBN/umMA/s9oNb
XXdTaOCtYZ2Xg91g0inltoIGTzd82MQi2PDeesu1UVEalPy2pq5k4Praq1W2
ZgMNQu47nKpk4vrnjfztR9o0aJVq27AK12e1bzla03RpEHTUxnw3tn7hN3a1
Pg3Wfko2uoStWe7Vxm1Ag2qnPM9GbHZ9/RbXozSIft3eGLYW7z8n3XuO2tJA
l9X+RBTXg6Uy1WhtAH5/pfTBFlw/6j3o1KPfp4HdzWQbTlx/1s7NmKz8jwb/
vEZSNmJ3lDEv/AuigUaM+/Mr2PNWZ0M7wmkgwRxeEFzPBoVIzumIJBpsuqBW
tAPXsyHEjhcSVTTQf+w6Z43r39Ve+1OIahp4hFd0+WC/HDiZu6qGBgbzX0Nj
sdNf+9YsfaUBnLe8SNbXn4wbFjqbaZCzrSrXRo4NHIEXjaOGaUDdJlV7HNfj
dpQ4bikqHYZCL2dI4Pr9E6f/fa3ldCjwGn+mga3w15Z+RoAOpwZ9Dh3DnpxW
lEsWokNxWxB/ELZL62v9rWJ0CAvKa+VQYMP11PIgXXk6fGar8jVgdyTEi19Q
xH9fTbiMY8PLOzEPlMn3V0zixfsNztADOfVb6OCZdsd5O7bvzW/NFhp0sFje
cSUMO/Bwv6TzATrcWvRxMcT7lemDHxODD9Gh/mnI7bPYRrqJm98Y0iFZa73V
dWzaLvs9iyZ0yEzW90wg9z+yc2d9T9BhLPzvvkXsmAXutPCLdNi+WlYjHO+n
eOYGVAuc6GDfrEykYJ+ZrCjuvESHbAX54iLsjX336tZfpcOEVIRHH3bqZ9Gf
qTfoEGrBESOP93dvotbvLH1IhydVuV/J/eD6pT3uJY/ocFzJPrgIO9DCJq/o
MR36/tQq1mCfE4vb+i6MDsw9qv0j2GLBskqvo+lAsXezkyb3r34sifgMOtia
o8k72EP9ehaxWXQ4ZyavFIJtsuf805ev6cAeFtv3gszXl70iovLosN4wctlb
7E43RcGwEjoE595IHsTWdGAvC/hKh5dBOuPqeL+cWm2A7tTTYTy3u2Yvtri8
03W/b3R4E/cn4BD27GDGb+9mOpTXmoZZYcee2jLj0U0HfdVtPH7YwsXGbPde
OugaWH78D9tzrYvDtX46nDE9diYU27Q1e+TyMB2WG1ipJ2JTTLb1OkzTwWDl
jX2V2C5ZplL2P+jw1rv2Ry12t9CVk+fn6HD6tI5XE7mfr3nTevY3HdReW2wi
84XzOjsaLJcR4Jo+w8u1hQ016hrlRkIEJFaPRaiQeV7u5T/7RAgY6r4mq4at
vTVtkzqNgCM3NgeR+UexknTEOiYB3ZRvK8l8JEuKcmVWkgCXNamJFmTeGLE7
ZUiaANsDNjpW2Ari7r1t6wkwFk+sOkPmOaITh8rlCPhQecftIpm38TXIhbAJ
4Kp4fs8L28RH4OTdzfjvu+P3e2MLL9N+7KlCwCvr+GlfMi9byFt2djsBMTu1
Rsm8V+fKD1UzNQLOiqnDQ2zuWQWHQxoEhA51uwWT+dd4ZIsqEBDB+Bkdjq1m
1yyooIn/P7X4wXPsXwPC2pJ7CJh9Nnsqirz+rttZFB0CAo4dfkfmv9b15+81
HyJAXHfNPjLvlTSIff/ZkADRbLPzZN7bVt0xX2JMgNAFz6tZ2KYfDG2SjhDQ
8IStT+ZrwloBTyOOEWCiJSlE5m9fisq+BpkRcCUpu+gtef15qrvcTxJw6tz9
72S+y7PNyeXiKQKKBzfvJvO995lJSdbWBFhfQsFk3uup3Nd1xIaA+KHeWjIP
VH+1hth/loB7uw1/kXnhvNyRA2BLwLHgXD4yX8yODfRWOU+Avog+J5k/OklX
5cnZ4/tboTZIWimSa2r1RQJshnNyyLxyRHynjJATARpKPxzJfDM+1NWc5xIB
a90k6f/Ld2npQb9dCPDydYwjLRk0XDHuSkC2DE2azE/bV65b6r5KQKo23CEd
HmC+tdGNgKjJdW2kTSkh56s8CPDeOSNG5rMit79EF3oSsNK2/X95b+0yalPm
DQKelRAWpO95aq6Mv0XAzdT6/+W9un/c9zz1IWBLqtb/8l7eq6/d/vMlQN00
/H957/vZiXRvfwJ0jfh/k5/n5SQ3eOUuAZtPf0gnrTFxas2FewT4WC8zJT1v
99TY8gEeLxoTQ+T9/Of2ks8rEHv32hOkZe4m5z8PIuCWMyok26MwLOviu2AC
t/MjKmmTxPx1rSG4/ZqPA9l+Y7ml33+HEvBDqOl/+bpPxacAxlMCGG77ncj+
yBxs/WESift/SsqY7C/dX73xLtEE5JXxypL92cU7ZvboJQFs45FBsv9XySyW
1sYT8FA8ZxM5PuK2cl+dTCTA8IN0Ppnv7tq7QmHlKwJ8lz/ZTI6nC6dXB+un
E1AoEjVGnjdwuazXscskAJrylF+T/eGtsOifTYDD9v5T5HitfKFx+kMunr+X
3YPJ8S3Tba6yu4QAO6MfO+KxC6ZOD50sJUDq18BiDPZhDvtnnuUESOdzZrzA
9pa4zv2ukgC/wMJxcj51WTxv2FZHgBbtWfEj7Cv2sf4mDXi+SW4QJefnyusp
Gi6NBPy5N3GczHd3PiuIyWghwKzwYCmZ74a3tLso9BLwVCaM9zr5eUfW0qRn
CVAK6H1ojV1hEGkiQGeAIsq5x8K2K+sv5GMwYLnYNFWWzIe3K8hxijFgwFXT
ex22kUTews81DGj6+ttuNXbreF1k1wYGjBw5L7oSe+Iu70jWVgY8W31qcQo/
H2nl9p7HTRiwMeSjVw527vbswcNHGKBhQu/JxD7+asHg0DEGvM1J35eGHfHI
b90eCwYUOt8gyPM4OavoCkUbBhyWvt0Whq2x1CC87DID2C7/xDzJfHaHRnx8
MAP2MKQD9bBtxz/PtYUwYEnMbZs2tmP0yT3CYQxQRlIDWtheVO9uj+cMWP9J
0mon9rPmSnGjOAbYOayuY2O/vG9m55fAAIbuxgpF7KTd47nvkhgQvW+xgoWd
lyhoKpvGAKHQl6PrsRuvHQlcfMOA895heUzsdsXhjk1vGbBD1JOfwO7rdlM8
+44BmgEuZ0Wxf+hGVH0tZgD9tvK+VdiCYv3c8ZUMOFHXEc6DTdS4Grd9wtf7
6agBF/baW5QXQjUMSKdyiizDVhyRRx51DJh/YVVMntfqvXW+ZtjKgIc5mYWz
2IYO3BW+7Qxoi+fsnsE+Kh1Cf9fJAG8hByHy/Pfs3bwsmT4GBO7992wc22GX
Pqf5AAPCfA7Pj2K7zrQZPBxiwKL0RqsRbJ/jHBN/xhiQfTr+FLleB6wM0tg0
yYCtI+6/yPPpoPfrAs5MM6Dz4fpnfeT5Oktb7uscA/b17BLuwU7oaHLlnWdA
VWFDL3n+nR5kV66+wICGdX5l5Pl44cJ9q7h/DJB9eSOLPD8vT5XIaOVgAqd8
fwl5vl5tlbEkyMUEK1p0ZyuZf9O1Du7jYcKGn8UrSLdWNTxz52MC3DbQJc/r
ezzPjKZTmRAacfwxeb4/snl+x8ByJijtHp4iz/+nB+74i69kAt9/POak58PF
vxsIMiGy+k0j+f2BpYMpG3yFmeBiyXeKNC8XcskXZQJRv7BAfh9B4E3t+yk6
vp6aJzGkRc9bCckwmfB9Ta8FaXGJ2ZNm4kxoTemSIS1dfzs1cA0TSgMeLZHf
h2D5EX/LJZjQ0/93kPQm9UT9P1JMWP//36f4P3FQeAQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$345740#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 2 Pi}, {0, 20}}, {{0, 6.283185307179586}, {0, 20}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7271934364133043`*^9, 3.727193498429016*^9, 3.7271935382590895`*^9, 
   3.7271935700563283`*^9, 3.7271936044477863`*^9, 3.7271936523575163`*^9, 
   3.727193684080558*^9, 3.727193736873131*^9, 3.7271937706357746`*^9, 
   3.7271938432847843`*^9, 3.727193901619221*^9, 3.727193953605116*^9, 
   3.727193998326021*^9, 3.7271940418978357`*^9, 3.727194124606475*^9, 
   3.7271941889344068`*^9, 3.727194362430461*^9, 3.7271944415751934`*^9, 
   3.72719449226257*^9, 3.7271945360104575`*^9, 3.7271945897944045`*^9, 
   3.7271946574172106`*^9, 3.7271947030726557`*^9, 3.727194776479336*^9, 
   3.7271948151321974`*^9, 3.727194886105839*^9, 3.7271949842165136`*^9, 
   3.7271950578246393`*^9, 3.7271953109982686`*^9, 3.727195410011983*^9, 
   3.727195525249728*^9, 3.7271956015580435`*^9, 3.727195711118511*^9, 
   3.727195825536945*^9, 3.727195907560121*^9, 3.7271960920478396`*^9, 
   3.727196269905121*^9, 3.727196405569133*^9, 3.7271964523598766`*^9, 
   3.7271965410891905`*^9, 3.7271966117800694`*^9, 3.7271966582773366`*^9, 
   3.7271967423414197`*^9, 3.7271967806798663`*^9, 3.7271968319579153`*^9, 
   3.7271968747765617`*^9, 3.7271969279195127`*^9, 3.7271970164004436`*^9, 
   3.7271973358728943`*^9, 3.727197395234129*^9, 3.727197463019452*^9, 
   3.727197555411496*^9, 3.727197600252768*^9, 3.7271976516039033`*^9, 
   3.727197698513239*^9, 3.7271977450777903`*^9, 3.72719785091965*^9, 
   3.727197920715653*^9, 3.7271979633560133`*^9, 3.727198008763089*^9, 
   3.7271980547746005`*^9, 3.7271980989372144`*^9, 3.727198169921528*^9, 
   3.727198215838727*^9, 3.727198318404009*^9, 3.727198353224142*^9, 
   3.7271983906934185`*^9, 3.7271984300906367`*^9, 3.7271984705091195`*^9, 
   3.727198511805608*^9, 3.7271985459253235`*^9, 3.7271986080626707`*^9, 
   3.727198646408739*^9, 3.727198737700918*^9, 3.72719877412473*^9, 
   3.7271988334833927`*^9, 3.727198885998563*^9, 3.7271989195284424`*^9, 
   3.727198961462003*^9, {3.7271990103423243`*^9, 3.7271990395884094`*^9}, 
   3.727199073827176*^9, 3.727199114608611*^9, 3.727199159669422*^9, 
   3.727199212810911*^9, 3.727651741767661*^9, 3.727651806668408*^9, 
   3.72765186527976*^9, 3.727652100006935*^9, 3.7276522126637907`*^9, 
   3.7277124826242237`*^9, 3.7277125412294397`*^9, 3.7277126020631695`*^9, 
   3.7277126555079513`*^9, 3.727712705335312*^9, 3.7277127547400455`*^9, 
   3.727712849676608*^9, 3.7277129506502113`*^9, 3.727713123036628*^9, 
   3.7277131712829285`*^9, 3.7277132522698154`*^9, 3.7277133123724427`*^9, 
   3.7277133455916853`*^9, 3.7277133885144234`*^9, 3.727713526787998*^9, 
   3.727713841772884*^9, 3.7277138969928565`*^9, 3.7277141057256064`*^9, 
   3.7277141591863995`*^9, 3.727717667554964*^9, 3.727717825501704*^9, 
   3.7277178677700033`*^9, 3.727717911974599*^9, 3.7277180012313585`*^9, 
   3.727718063741212*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"],ExpressionUUID->"5f780018-5aa0-4b02-9032-1394b8ddf380"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9xOXG93dOMORgY////7i/wCZO7Ps
       "]], LineBox[CompressedData["
1:eJwt2nk4VO/bAHDJMmNpwYwhUcakhCQU4bnzLYVClBZrSkmyJQqhCKUFESlL
yBZKQiIkJEmKyhIhW3ZSyZLfPe/1/sP1uWY95zzPvc1ZbetsYsfJwcHhjH/Y
/xeX8dV/V72oXSL1qcDSngWsH6VbJW9Zk+g08VG2Zx5vONYS4Uxq+/puWaFz
f5NPy3M8icSqLenW6F4R++mCCD8Sd5p//RH0NbEawZziAHKz3ELiKDp1rUUC
R04wud+1xscOXb55XMk0MZR8cDmqb49u1Q2seBBxkyT08gWfYn+enICcT0U4
od8UUXZGByt/dntQfIss3PIwOIMW0Ugsrn8aRb5Osho90fe3OXBNZ0cT9Uv0
Nz5oRT2VPavT7pDIcQ2FS+hi439R+ol3SW9l4EIw+pN1hGxcRAJR+rVrNJJ9
PJsUt3yvSiS/7yTy3UN7br711bPiPilTa45MRnMRS9b94mTyVTtqMg9dq1Px
RvVZCil/MVpVgg7XlXWqffqAmFs08FSjJQ0nCn5mp5Eo/9cNLeievWbmIZnp
xGUk7VAP+uH+4gWJtAzC0ks1GkNvsby8SzfxIQnlC7rEc5IFJo5irTERj4hJ
sgmHBlpgCym7vfMx4T37cHQnerzIdXlX1WMizxTVM0MXvPicf7Yil7hSrm1z
R/9XlfgvvjiPRKQ6a+aj1+xsNP6h/pRI/hoMqkbzveFO3vTsKTnawtJsRjfU
OeyseZpPMoJX9M2hLZtUwiayC0n82TBlAwcWgNmJ7q3yz0iKeuw7a7RM8x2V
oMxn5K/0mw/u6MG2f83iaUUk1OipSCLa83vN6u2JxSTy5j7fWXT4pEXe7Ygy
wnPnc0bVKRZcp8VqlguWE1HFLu7v6I+5l6VUTcoJq6C0mcORBeaDFr2SbeUk
PMurSwvtZM7vOjn8kkxusXJ/gY7Usg+5s6yStPk66n48zYKWFtNTS/ZXkkHu
1M7faEkPYhhwp5JcD1McWuHEgrQcushp6SryTs7c6AT6uVRVAqhUk79aEjsX
O7Pg2yLpwv4DNYR7R06wkQseX7xgrMW9GnIkL2jEC22v8dfnQ2cNGVlZX5yK
nnRr0Ck++YYoXQu8uYDm6vGtv+FdSwaXb+cqcGWBXHVbr2pCHVl9OylF9QwL
tlbp8+mcaSBCr/NveHuwYFlT6vvNtxrIki2bVR6he7o5oxTyGggEtTK/o29w
FEuJ/Wwg9hWG3ww8WdC9db3quNsHcotLvXDVORaEPOG3iXf7SLybmh2+nGfB
54S6/BnXJqLe71LofoEFLl6GR/Jcmom97r3tBpdZcPqZ3Q1OZidh2YTs+RzF
3h97Vy1S6STeD130JG/jemrRfLKwvZPE7HbZdBztPiv8ee54J5FLKXn3C+2l
XbHyT2YnqeVJWxCOYUFQpWT2kHIXmU0KO2cQy4LEhi9vm3S6ydTNu9kJ8Syw
PfLKstG0m8g2dp//jmZO5ox9ONZNwvf+EJZNwHggHCT8PqibVHiIZ2ejs81U
zN/UdhNO4X0HniXi9fkaNvjC5DsR3LDsQUUSC5oG9Khptj2k0Tz8Z3IqC8bu
rN0R4NZDGmLGA9rQfAa8F60v9RDJ0bm3Qmm4XrMrp0WTeoh9Xa2fP/qhKxkI
6eoh3nQe64PpLLg0o/LawaaXdBVN6fzNYEHcQ+HFO116SdmHwcH1mSx4ZjGp
zfTvJfsWLLSs0COljwraEnqJgZRbx0v0wQC51N3feol7WcxM4EMWbBBYdVnR
qo9c9K7u/ZvFAv0X/8r5nPrIomG9pjXZLDjm1D7Xd6GPbMg5ZmOKjm2IdU+I
6yPn96kaPkTzRNGOLWvvI+89lB3McljwdSX/f5Pm/aTet3Yq5hEL/tT/8K0/
1U+GBuusytBC/jXPM737iZT99KFe9K7uy8pH7/aTdzdfcSg9ZkFeKod0U2s/
6cqVnC1DX93wm6Pg0AD5vLF57k0uXk9PvfV9DgNE51dz/hD6ZNm9/XSfAXLr
WUWHwBN8P6P/Mj3iB4it2lOfPWhe5zDTzd8HiMEOnobX6N8F3y+cmBog+/Zq
j/Wg+/6ppUdz/yAJj7d7LspjQfWN9rk/sj9IyZhu6RZ0YI5c6jPHH6Q8Q3VZ
Itr994WGgQs/SGfMkOUz9FHtDzOMmz/I8SXpgg1onXpPo/O5P0grGbo5j1am
vz2fUfGD9Mw32Ag/ZYG0lWRKS+MPkm3kHbYWvWi0clr99w+iozBM2YseV2Uw
HXgHCaV+pfExdOeFU3tiGYPkrOrgpAe6XFAoaUZjkEi81NgVi368365Obvcg
ibur9jcTnRD37Pdhy0Ei9KSEsxjtq2BtUOw3SBr/2Uu0oJ3OPjk7FDZI9Bgi
6/vRli+4E1ckDZKTmqY3p9C7uQ/VGuQNkh6J07sW5bNAc0/WlHflIDFYk7lf
EC0ftSCZ9WmQLATsK2CgJdpN9L72DZIgmWcnmehZx79xmtQhcub99yo19ODT
3TWO4kPEM3P3aYJunUuYvLd+iJx0fXxsJ7p2+0+Jd5pDREby2END9PNrujvn
9wwRn8ulsB+d2XTHVcF6iPQeZsiYo+9IjNy1dBkiaip1+2zQIceg+vrFIXLr
utrHY+hzWbfGX0Tg8+vy79qj7af6xEeTh0jGjszHp9AHNDV2SOYPEVtNj2VO
aN3A686G1UOEDF547oxWq+u84/tliFz2l81xQa8RUanMGRgii+XbBtmmWQSP
dvwdIu6MxS5sc6W0MpbyD5PqM/xa7NdPDSn8RySGiYer7d7T6J5NF087KwyT
9D3nshzQjd5N0Qnaw8TUuGzPCXTFK9mK90bDxLHhocpR9BN+7+EFm2HSqPbU
xgqdZFpPV3IbJnaL9n44iI64u3qbTcAwyamau2yCvvTd/VRY5DARUFHxNUC7
rq+JKn8wTNaJexT9x/58ux7/xIJhElj5yGYr2iyRw9H/9TAJ9flirIyuaZU4
YNM8TK5ynr+yFq1BU9eBH8Pkoqg0nyQ6y2i/wqqZYaLtZ/tRCC151ZXBwT9C
3DnrunjQnAsZo2XyI6Qh+VTTMK4fd/XqlgStEdLv+76gA913prvSz3CEyP0s
7HiPrh0Qv4vFBBktCJl/hNZkbg6SujhCDqo/+hmPzrE0dV0IHyG00s8K19ER
H0N3luWNEHlaieMJNJdgunJC5Qi5XVXjYor22Fm50u/TCFHf7F6ojT5cMvdT
+88I+atuwf9/+y31dGKpxiiplG2pfIL7MbLzSmi8wSjhjFL9FIPmWZHq4Wsx
SvZHfGD5ogdvduzW9h0l30ReBumin5w3+vvi5SjxGX0F9RgvZJ6e6on7OEqe
J5ruzkHfHg1+f+H7KPmtvfv2dbTX0fIHWtxjxCwrv0cPrbNno8mLXWNk1vXm
8SKMV0+D92jFHRojtkkXbG6h11ScXHvBYYxYWAVHO6L5Nif907w2Rg57O5dI
oBtXCT8seT9GeD9Fd5zBeKhrvuH2vc4xojJ6sHQn+lmUwUWfiTEi9delVRxt
yF2xPp46Tua6Tr0uxfiq7DWzyGr9OOF54nhmHuPzzNFTOe1O48RYxnm5GcZv
m+U/z5V4jJM1SksCV6OrSr3+u+s7TpTqz+4exnwQJna1+eCNcRI82NLhh5Z9
n87ZlD1Ovq0b4E/A/LFPo8+sdnic/HUMu/sC89Hz/tOrM6bGicy2F+6+aKmo
X0PBc+NEYUH/gTZ6cIzr4g6BCfKnYLXgC8xnFx8wH5avnyCKwqpzuZjvcpYd
WShwmCCxJxX9fR5gvVw68CbKbYIUtIn3KKPPn3KJdPeaIEIVx5MGUliwvdpv
nfLVCeLPzbfBBN3mHW+anTFBLATIzZXJLKD0t6UlD0wQ64H9D6IwP9u+MDMO
Oz5JrsSIbxK8i+engCEk5jxJHvFbeadhPcD5qLXxvuckkZSWE9iGTkq0OpAX
Mkmyr6tT3e5gPRNw3Opz5iTR7rjs+zYa30/fw1FibJJcqGZUWkSiv0SFpHv+
JK+iU47OXcP8MNFUXh4yRS4XVo0Y+eD59go78CxsiuzQtZOt9WaBxeLdo49i
pohE05/O/9BmtFcrEtKnCI3wfVb1wnymnutxoWaKaHl6fxbG+knx4nV5Dcov
UppV+OAZ1mfTy3Rj8oJ/kYcamuszsF69plTonBr0mzwU7dT67wAeT3nh5kCv
afI69JOCjAILlssZ1H+LmSFLNK/x88/KwK4EneTxiDmSPrTBpuWNDIiO1en6
Ff4jBl/yV7vckoHY188XLT7JARlZFzgNrGRAc+W2hVXHFsG3+moPIUUZWN+5
rOeCOyd0TQolW88xITtdyD7fbTGMf82tOfeBCT4dlo3rg7gg4Lffobk0Jkzt
1Iqzu8oFTqTTzw7tmCtxIuEGF3w/UMr3PpUJ5oFtM0LRXCC2RMMo+QETNOQO
Sc+kcYFgovg942Qm/D27z7XmDRcURX+9VhrPBA9Bg6V2gtyg2SLJPRjFhFEP
uZb45dyw+KziIRv08U5qcjONGwblhlZ8iWSCWV6N2m5JbjiU/Xi06hYTVA/p
Wm3awA2m0QYf08Px+6Vsy160F916tzngOhNcNbcYxEdyQ7dBEy38MhM4nCL9
bsZwQ5DXBwlJ9I2E8Tz/e9zgdOrrtYeBTMjkzJA4msIN1dMSGa8DmNBdIzYq
+5QbCv0NW7guMWHf/tmw3EZuCPhoY3zLlwlqTqWfK4V4QLR69T7Oc0yoTBDn
L6DzAO/jP3/ueTLB5IMHSRPngeOGJQJb0E4qG9KvSPPAeBXPVWcPJqTNJJw3
VOYBi8N7Wr+7M4ERfFGieS8PBLZE83S7MmEmYbvtUBgPHLXUVVRzZIL2H62I
jVE8MMIZK958igkXDTdXeN7hgVX+tpFeaMr8OmmuJB74OOey8aUDE2iHl3ZL
5PEAS8pQbP9JJiiJtB4x/MQDNXHu7dHHmXDmVGN4ZAsPvE2TrdBBF1TUvWxt
54EjVx9uGbVjgpZr2eoTfTywKVH5qy5avz6ly+8PD7gPXuZaOMoEuxDnI7li
vCDn5ywceoQJ6d/sw/+s5AX5Fi4Vgh5Ws32pJc0Lq43ODf60YYJb777VtXK8
oNU6LmaN9tfR6OreygvfeL9c0bRmQuwc1xERK14QFsrtErZkQoNLrI1nEi/0
bU/7p3qICXJhy2bdU3mheSiQuggd8Cgoyi2TFyqcxOLqDuL1GHWrPf2EFz7d
5ba2Q8edMlA5VsEL13vkTeIOMMHh+Bzv3m5e0Gu7R5c1w+t12S3JsI8XmjzK
S2f2M2HlgwHN3YO88PHK0EQ9uuF7k+vOSV7Yb/Dt7zn05iPZbVqcFLDSbb3V
uI8JXBZWj+SkKUDXKedPNmWClXeT3to1FIi+evyMH7owVr+HJUeByj+L7S3Q
Di1qYquVKbBII2JaFP3BbGmAqA4F2nb1F0WZ4PF5XF5J06WAnofKNQ90YNRs
oZA+BW4I6A8fQG9p6h8WNKGA2aYNZhLo+L3lZly2FPhKc258uJcJ0y5qE4uO
U8BkdRg9HG0SlhW6cJICKWJKAx5o7vcx5TOuFDg6SzZvRzvudpWbuEgBhWvv
gnqNmVB9qr9y9DIFhrhE4T1aKtTSevgKBfwveYUUoT++0YvsD6fApsam6pto
9Z3S/9rvUyBYInlWB62SXBvy+gEFQh8mBW9EKy64CedmUPC4HsStQksXvlob
mEuBU6UDJzjQEsKOeafzKbBLRUdiwogJdGcR7QNFFJj+1HC4G80va2cq95IC
sxzFHtVongDBDuEqCrxXlt9XhOb4lm8/X0MBxa754iz01G0e34YGCtBcf8hF
oUcncyjPmyiwMZWmfBU9YHjgVnIzBbgXql/5odt50tM9Oimgsq4lyBHdbGu8
yaaHAqt+7Xp2FP2xdPqF3gAFAlrM3c3RdeL3d20apsCwLqPYFF3todcoMU6B
NTqB13ajyz9OWPJMUWDLsQcDO9DPFWMHxv7g9Wz1f0/QT6/qnGmZpcAjuxXb
NNCP+gbnKxYo8ND8vJYqOlPnVkjWYirsfxBfqYROid8qfJuXCq1lNz7Lo+Nn
vsf58VNhccnuM+vQMWbX1p5cSoVo7bbYNeiIJyp5JsJU+O2nuUcGfW1Ju5am
KBXW73a7Ko0Ocrhcw1pBBdnFviar0RerFUyXSlFBJ8bmwSq0j/Tn9mlpKuRG
iAew7eHra9+9hgrLBbOG2HZpXfPzrRwVRvJFvrFf76D2/kK+IhWU35taMtHH
IjwpCcpUyFG0P85CW41K3QpRo0KklvGMLPqgfs1KNw0qLP1LFVuPNk11STfX
pkLVRESFItqQU2zTDh0qHN498FsZvcvq5QtFXSqIveQp2IzWeX5yF0OfCuTe
4IImWpMu1LjIkAqlL2426aDV3J5bDu2lQsOdiU16aKV624Gm/VQ4tYVf0hjN
CsqbT7Okgn2FUYQ1elW3eUj4ESr0JDlJ2KPFtbmEve2oIKqksNEVveT3vrWG
p6lw467jTCCaYjL/ZLMrFa4JdeTcRHPmPNBafRbPp33DSCz6j91vkykfKozv
EOHPQ0++jG9v96fCmiWmP8rQwyt32r8OpMJV1ZG979Cdn6IvxF6jwtA1asUP
9Jsd6ulwjwrW4SkS63B/nHvtq+iXiK/nUqnZil6rV/n0RQoVOKNk6UbooN1G
LzWyqbBKdirGE73d1K5VpZQKNaNCWxrQU02ZNmcqqLBWuXCqH51sNt6XW02F
o0uZphy4/zkPe/9UfI/Pz5yeUkaX24QLrOtENwjWJqBduj9HnOihwjsNu4gS
tNQxCbHUASqs5KicbUH7nkhjMSeocFFQIZeO8UjT6YX2Sk4+8B9MSY5GF3r/
cFkuwwdpn9dcL8R4d3xe8Y/RWj7oWnf4YAea7ud+4YY8Hwhczargxnjqfmnh
Cr8qH0wuknY3QytfoSVz6/LBsy0WugvonNvbPv09wQeGDbVBThi/rRjB5lsc
+cAjyUk5AS0YW9fl4cIHJ1OrvBrQjnEHRn+e44NOta5OFYz/cimneUev8EHI
y4V5LswPD3LvqHc/5ANhg07TCswnDrPmcs2P+KAKLGun0Uo7JFfU5/HBgZp3
1RsOM6GkOWmuqJgP6g71GSegGxceloW/5YOKaccHgeZMWGRYumPbEB8kL7ko
Z4/5y3Kwe2+iHD9IdRk5hGM+lFZ5oHNbkR8SfpnqN6MHLpzYdE2ZH35oxmVK
2eLxLx8WOafBD2ZP1IYeoUO3/PpipM8PQkIzxz9jvi0K4rVaOMkPo1kxK7Zi
vqYx5R2sMvjhTU3YYlvM/2ERoWYZ2fzwc1atrgzNxzmkM5XLD7Xz8UxJrB84
ujJWXH3OD/n2YRe+oofjZd/lv+WHohOjn6ydMB+KM5UER/nhutDZL/5Yf7gL
if8uVhYAr9NFFDmsbz4uolwSKxGA6D/C7bzBGF+z71gZlwuAg7B4UiCaenj9
1uBKAdgolda+KIQJ8MRwaqpOAPaeECucR+fYRh1vaBcAT9kngzNX8fheSRsE
LwjAuqe0pfw3cf1e1hL5pSMIg5HpEv7RTMinnElteCMI/fMSWQ8zmCBPW+Zg
W7UEGBWZzuHvmTB247fIps9LofL2BpWb80xgBgdvcHZYBtXuhf2c8jLQfbit
Vad/GfSPeHJ2mGO93Nv4N99pOVQmH1YzCJeBc2529vSR5TDNte2P5ysZMCy4
q0/3EIKP8Zf4O6dlYHTOwWfxbyHoG1m+xXYtC+5/ufjU6YwwUIjG+zWm2B9X
KX27cVYYVn685v4JLf/0G/WRpzBwDsQ/DtjHgoIwLesxb2HIbAwd7NjPgjq9
v1SXQGFw5d22L+wg1v/FLtauUcIg94TLvcMS+79Eaz73QmGQ3njdn2mP/e6N
JaqRRcIgbrqt5hW6xeeF9dNiYVApuhNx9CQLjh1akT9VJgxXtmZk3cf+4bzQ
F+uzNcKwy8KiR/Q0C1ICDfM9WoQh1jX/45Ar9o/2WjbnZ4WhNb9ESQH7Ff1i
OTg7LwzaEUFceei7goxVrgvC0FFkeWgL9juaTya/2S8Wgacf1wRuu8AC39k0
64P8InBHrPH9Hj8WLL4hZL15hQhslKt4tyeABQJ5/Za/NETgkH3n9/6r2B9x
f9Ka0BSBk9FZ3yxCWZB9oGLliLYIJO9K3v0BbTh3r71HRwSM9iqce4b9VtgO
E8smfRHYtf8exf8G9o/NJRZ5h0Xg69nJtJ/hLFg5H27u6iUC3zi2vjkZw54/
7imK9hGBdbZdmk1o99dU0VJfEXgQfnJaC/u92vCLH/kC8POM1u5Yiv2gxxpX
vZRQEZgp6ZbNwP6xwch485d7IhCmm5BZFM+CWRWBqPl4EUh0W36MkYD9vXjN
JPO+CEiWS1l5oH16SI7LAxHok3IRUsJ+dN35DSy+HBGgBWClep8Fl5KWCGuV
iYCwplauPvaz2cG1LkdfigB1aYtuHLrZMaj+yisReMPSFR1DK27+d+XzaxHI
+2d+Igz747a3IxwuDSIgELK35E0qC1R+1Y0mdYlA+rP//tGx/7ZuDdn95rsI
iL1ds8oSfbVse+ZYrwjIZzScS0J3Ximx0xwUgfV+Re/kMllwXTLr66dJEbgR
RVukjP1+387QWgoXDWZrTziJZ2O/a2CzisVDg5VbWZ0m6HZDVY9tFBosS/l5
/Sq6af+31V4CNOCkX4/7g644uun8kAgNXLzTQ2tyWKB9gvKeV5QGzrGfvs6g
ixzaZWTEaCCt9/Wk/CMWPHYNbrBYiY+3Xtx8HR3n1yZbz6LB0Zs/7+94zAJG
wOMLg7I0uGyf8tEVHRl0uZFHjgZ+x31IHHt+fH2DH1GkQejz8XcT6HN3Az4/
VkMfu1oensuCqfiD8u+20OC0EvenQrRzksKlHxo0OOTgs6YdfTzji4I0oYHP
+Z/+rCcs2Fe4/vKtnTSQiwpgZKMbnnO0PdKjwYC5idg7tEHpJ6U6Axroivkc
HGbPf6r8vnIZ00Dm3rOItXksUGps3ORxkAbGUpvno9FZn9OvRBymgWnvhj+5
aNnWC99yLGgQWXFq41u0ZJdsaL8NDdZefXNiFi0w5t198CR+PwmrHpOnLAiZ
NN5y9hQNRB3vDxxHL/7NuhF+mgbmj2I2eKFn5t6r17ri83MXB7Pnax4cD272
naFB8oJ8DHv+NrHYq5fTgwaplmdHytADfDLhW71oEGXRa8ee3x1b8rfvgA8N
hDc3XmHP974tr9d096VBWpjjz7/seRstOSLMnwaB2WLJ7HngZ8a5gaxLNPDq
2H6HPS/cK7FH+00gDe77Hv68El0nJR3ZG0SD+Imaw+x546s1dUQylAaVs2e2
sueT+je+6dOv02BDSMAS9vyy4dfk/iU3abDG1VlHnz2/teQ5whNOgyWGd74Y
ozsqxRz/RdDgsNqxejP0MXkFz9+RuD7LVGQt0EO34NLobRrsmXfpZs+L3WZN
r/fF0OCitz+HHXra9kRMRywNYqDuInte7Fvrlfz5Hg2i35QeZ8+LuZVv5NTH
0+AspfIRe5577c79oupEGly11bNkz3uFFuVXlibRYCL7hTN7HhxjX/O+IIUG
fErh/WxLNbS15qTSgH5XtYrt1M1jvanpNDASkKSyLZ/AORGfieuRWpbHnkc/
4aHP3c7C9e93o8oRre60jvdmDg24ShcT9vy4/JOmUPBjGvw5F72KPT/W1TJe
6feEBs0VrxzY8+N3KUfXej5F83NJWqP3CXhuci6gwRmpTxqH2fP3M1e1Tzyj
wfTq/Jf70Efa4vSsn9PA6gYzjz1/H9DJ3XeghAYHNt1fugvtlFlpbVRKA6eN
j78A+tfyZoed5bj+pxv51dE+54fOkgoatP0XnqXEngd3/fPfXEmD7+JOz2XR
V3YJXdtQTQPNtxOq7HnybVH1JKlaGvTsWH6Oyv79wG93tmgdDapmXpJ/uJ6S
+6yfLa2nQcHB/zwn2b9v5AfVL3yggbj32Gb27xebV8a2/Gmkwcz8loq36NLA
7J6xTzTwvh9W+gL91rRp5lsLxoO+p0sT0SbF/dzNbTSofpVhF4Zulp5d1tBO
g5BN8xv82fPpidWy5V24XvslZKzQHGHOpok/aKChyHeXPT8O+nPJKmaIBtsZ
BSkLuP8ErW+fDBuhgeq9aNkhtLjiCz//Cbz+Tt53y9GqdXxZNn9pINDht8cO
7UBJ5VpNpcNf29BTtzEevOUMuf4fPx2+nWua8ETLz5+kHxekw3TqfO9B9NiE
wtqHy+mQ5u+0Qgzt3pZvoCpOh8Yy38YIjEcXcqoi9NbTQV4ucZsjxrOO9LQV
jgp0CO3jWc6Oh5B8JeXGBjq0FldZrERzxuwpaNxEh7YGgdN1GD+DLn5qsdSk
w/tVGqEy6LB9vavc9tDh466YyBcYnycMX2dEGtGhbmv33RtoE70M5cK9dCiR
GlC0RtO0T2+f208HNyvxuX9ZLIiV/XUiyIoOIdIdhurolBmuR7HOdFBRHc+/
g/mjMFFG61U4HazTh5KXpbFAZmG798tbdAjvkxVswfwUZmlXVBZFh1y9fQr3
0fbiqaold+iwRL0jSgktHimrmH+fDoI2R6V2Y37zCZaTSsulA7/k5AePZIyv
TkqLQj/QoTRVIjUR82v9Vs0qk+WicIS51eNsNO5vh7umNjdE4YvNeoOBIBbc
9Erm9QsThdurdm5LQq+5+rA4LkIUvGelD1mg92cUM9tui4KFy+2Jhsu4H/vb
fu5PEAUZ+dT24kAWOB6TiDR4LAr7R4aP3LmE+dIyrkntoyi0b20eP+fLAs/T
D0L2N4nC4g7Nl1vQSy5ka7p/xvf/1vxuGusfrXsvUnJbRSFw44f48+jY1nZ3
+e+ioHdfX9UX66V9ByRp0lOikGD0sv2WFwtqjBP2C9IZ0Km1bstvD1xPlb2l
vAwGrPRdlVOBFtwiv5ZTnAFHOqIdb6JNpIpmfq9kQJ/E+qp16LaRjwmdLAZU
73n688hZFoxe5RnMU2WARara884zeP7/7TbN2Yx+XPk7F73J7VZJujoDRiR4
AgPQ5w6tuhmnxQC1xbciZNGcazVUgncwINtO5foZN1wPVad9D+9ngNzTApsV
WB8+2/K0f98BBghT3nVOuGB+yJoxNjrEAGWtiWc16PhbwcztlgwYSBQ/44le
a3u/RsGOAc0L5eItzlgvLjQJLTrLgK6W1xHZTri+3Vb4zHowQFpRv+oK+mLf
kd5f5xgwPKxvdhxd/W60cNCHAd8260StQhvdo1g2BTJgY7pc+B2sX23VNdPS
Ihmg4ZZbH+fIgpMj7359vc2AaKvcFB+0y33r7UJ3GFC2x+CPOdqPGtDlE8eA
gggOEQn0vZY3K0xSGaBuO6+WdArj03Vzh+B0BujvsZsPRGduG3lWksmAmKjk
/+zRRRnLzGQfMcBWVnqvEvrz+QNhc4UMkNql41WN9XW7wo+Ojc8ZQE8N0MtG
93R5KZwoYUB/1um7keifevG1H8oZ8KgmsOYYepl4L1faGwZwi1sb86NF6z1M
v75lgJVPuNZvrN8lL1GSltczQFv646MutMLgeuLzkQEG2mEyz9H6z93O721j
wO8dEmau6L1OXDVB7Qz44frDzQZ9UPo2veQbAy77FdON0SeuFuWt6WHAIoVd
U0poJ20DTos+BnwxO6UojfaY/GocPsCAefdj48LowMMco7PDDHATvy3wF/uL
0CURmhvHGNDxc+2JYXREBTP0+AQD942ufif7fie5nWs//GIA4a3IfINO72j2
4JlmAKeW49oy9OMIh6qtMwxIX6q+IR9dOnPdNvUfA2relzYnoatypHLbOMRA
yDrfOxZdZ5u7sGyxGKS+00uPQDfR/zPU5RaDvpO3rULRbbVN97x5xeBiXl58
ILrb9/jQY6oYrDF/Zu+LHlSeVu/jFwNpnaKSc+iJvishK5aIAdPrTSz7fq3p
2BVfjJeJwYftM5zs+7kWDLNZQUJi4CVs/ssBzbOYuBeLiMFA0F/XE2jBwoaK
cboYuDl3nTvGvt/rlO3yNWJiIF4nwWeLXiE1ZW2+QgyWYHFng5ZuvJwTtlIM
xN5kvWXfnyYXLDpfJSUGC3sF5tj3r23cmmEwu1oMyv///rb/Aa+TCRE=
       "]], LineBox[CompressedData["
1:eJwt2nk41N/3AHBZZ2yJmTESlT5pTFJJyXrPV0Uoa7TZK5XKFiprUmiThEpZ
IlmyLyFZQ5JEJJFIQvatSMrveJ7fPzyvZ2be77nve+85555nVts5mRzj5ODg
2IN/Fv9zlfE3fNvqr5n/rN3r/jsWrP1RqiZ9x5osuZf07R56Lmvj0U9hTkTj
nrTkXXT2L/JhWcY5cj7LWCYc/Z12YvZZmB8Rb7L6fQt9Q6JWKKM4gFh2OsVd
Qz9hWcRyZASRDwnPxS+jy5XHN5nGXSdyHy5ae6PbtS9XJobdIozfS8+fXbwf
W5DtXXmbyNhW2J5EBym2uiYW3yGeEnMrrNA01bjihrwIkv6RnWqMfvQ/B+7Z
9LuktP8ddSdaQVdp7+qk+0RR3EV9K7rY6F+EXtwDciTmkdZa9AfrsHXRYbHk
Gm1b/ZLF8WxR2P6tOo4oJMwajTaw4Jzync/nKh8RvxC+tE9obmK59lFxAqFL
w0Aauk6r8vXWwseER2/lm3D0be11jnV5iWQsKj/ICy1tMPFsKj2JsLZ9v70L
3Wtsfjg4NZk4Xwn8ykI/NSteWJGUQtbmjAoLoLdbXtmtHfeUHN51i6/+LQtM
Tku03wvLJAp8PrcBLbidlEXqZJGTHV7jy9HjRS7LvlZnkRsNa5Wn61nwrKQ1
370ymwjXi/gnoHdUx/2LKc4l8GHppp9vWCCr02z0QyWP/PX4PV2D5n/Nk7Cl
MI/4afqm30U31jvo1Oblk9OWrQtb0ZYtSqET6QWEbXn5gH0dC8D8eI+afCGx
2tsxsBH9X9t9pcDUQsLVbeM5+5oFgx3/2pYnFZGbE7LJgehz32pX74wrJg+F
emzv1uLzmbTIjQwrIy2cz6ev17DgJj1KvVyonFDVWBGAfp99ZeVWk3Iy38Sv
MF3NgsODFt+lO8rJFytz0wNox8MCLpPDFURzf2QurYoF4Rongu+LVJGCalUB
mwoWdC2RKejfX0u2RhMJ02L8fjFCURYPa4nnxuSyoecsOKH627upu5ZMHeLO
CkBPujZqFZ98TT7aHDqfXYTz2+vbEOJVR2hX1g1xF7KAXdPxfWtsPanRmDl1
M48FatV6/FpnGwnffZ0CpXQWiLQ8ead8p5EUR76Xe5mG89vDGbEht5HwGHWr
GaNDOIpXSkw1kjFfzl2nn7KgR2391nHXJmJnr8KMSWFBcI6ATYzre6J7RGDV
ZCILWmPr8+dcWsjZ36p0+xgWOHsa2OY6txF3A4uE2hAWnCk8FsK5ppus8h4b
oDgvrm/jVUuUukmj/jQEOeF6+KSes7Czm0jUjzTwoN3+iLXO23cTSZvWUC5H
FnhqVkrNpHaTgBf/apecZkFglXT6kOJXot1eOEw9wYK4xo9vWrR6SPW8009D
GxbY2b60bDbtIcZ21+ZbrVmwZjJjrOloDzmQoX3QCv1ELFDsXWAPWXnQU9zR
igXp5kqHX9f1kB9Pr1fctmDB88+hgyUm30j4ta9xgwdY0DKgS02y6yVmjmnL
fxizYOw+a1eAay+pEHLvCUDz6/P5W1/qJQcLXwmvREN61ax4fC/JXzd/19wI
94sLGQj+2kt4mtb41xmw4NKc0isHm+8kWGqncY0+CzYKrrqiYNVHLG4JDopq
s0Cv5F85v2MfuZl0OLl4FwuOOnbO9/n0kZLx6a9H0VGNUW6x0X2EI7j0deFO
FvBG0I+KdPaRsIb7vvY7WPBZSmDH5OF+0n5jQLQdWHBt4y+OZwcHSBmHibOs
Oj7Pc7rr+xwGyFhD6p9Paiw4WfbQjOE9QOwoXJtC0LsNd6R6xAyQR+0FkbOq
LOBzCjVV/jZAJNokXT6osOByBvtJ4ekfxNBR6G+mMs7XL5/GAZ8fRGp/qLMj
+ohm0xzz1g8ilvLg3ga0VsM5wwvZP8ibiAVKxjYWLBmtmlX59YOkCd/3KdjK
At8N1vrFfoPkw1lp7ZEtuF/cc9yHQgfJMT8VowK0ZQlPnGT8IGlr4ZC4hFbf
mzbtVTVI7nj2DUig/5z+Ha1OHSKtHGO3TRRxP+ftqT29fIjwCh18JINun4+d
fLh+iNi96j87tRnn94a2zt+9Q6QrP+ToXfT5tDvjJWFDJOi51aWBTbjfpvuW
jyYMEWqqeVEper+66i7p/CGy75RXQQR6W333fd+PQ2RNgryANnp6aMMOsmKY
OEuOrMjaiPtpi/8Zpw3D5OsL8agb6GavlruxmsPkhglHz0l0joDX8ILNMDGB
zGZZtMv62ojyxGGSXRWqm6qAnz/WezHu2TDx2jeefhNtHsdx+uKrYRItlNXm
glalq2jBj2HS0xd3SR2dZmi2YdXcMNlb7M65Bi19zYXJITBCqqQmdfnRnAsp
o2XyI0SwS2xzxwacL5WaT7EaIyQ3bG9TFbrvbE+Vn8EIcfXcr5qJrhtY/oA4
j5AV7LHjgWj1NcqBK/1HyNeMJRvOojMsTV0Wbo8Q8mWk2AYd9v66TlnuCPkk
qLNdE80tlKwYWzVCdnPIySqgPXSqpPw+jJCmyw1fpNED/t0U674Rkih5xk4E
fejF/JTmzAiZ0d6ezYmu/8XskqaMkrxg2zc/5VmguXlr3T/mKCmyZWb/QMs8
ORNXqjpKNN73dDWjw7uvXo/RHyU6VvpydWheyScevhajxO3kkGYF+rxZpa3V
GXz/kYFVRejBW1/2aPqOkuH8Y++y0RZ1c8rSt0bJ2prLek/RDdzia/7FjhLd
yaNhiWggW4S/ZI0S97A1SXHonAuGv0sqRsnQTEfwQ/R/ead6o9+Pkv1nkpTv
oyNHg975fBslLtuicyPRFLnHzy2nR8n0rffz4WjPI+WJGjxjRCTrkNiih6M/
h0oxxkhLtfbMHbRV26zXX9kxIj+XmLz4eqMo/Xin8hiJcrqybvF6Wns3m5Ts
HiNjWuNn76HzgvZqRB8cI77Xx24+QMtWnmT5OIyRiMPX3GPR9+aviFl6jRGF
imr2YzS/cvw/9RtjJKfmcXoK2tul9MeK6DFidJb1LxM9+rS9ZT59jGyoN1xR
gLbp+1X2uXSMcH0Qp5Shm1eJPX3xboysue1V8QqtfXhj5MPuMXKe2213E7ow
Qt/fe2KMXFaafdiBpg9s2aawZJzkyP0t7UMb8FSuj6GOE4dx94xJdJCM0Wph
0XGiH2V6agGNmZPhu3ycVJMrPwVxPSh6zi2xWj9OPlHuurDRp+4Gz7zdMk5e
XNc/oop+nMcY0VAfJyVv5lfroxljim1Se8eJ54cBHif03JFTGZ2O46RC69LR
crTNsqnzLzzGiaLNUqUP6OpSzx0PfMdJkIlo/iA6VOJa24GQcZL0dLxOHPfP
unfJnC3p46S9lUPLE33De9PbnPxxcmn39vvh6Em5wru3S8aJ5WxGXCa69PIr
ecO342Tw7OOyfvQ+1T7zuuFxkhhzersN7vfn/WdWp0yPky+njwpeRK+M+DkU
ND9OBNSFbsWhB8e4/XcJTpCz4bdjv6H9E9c8LV8/QXR+z/W5YLzJELFdeOYw
QaQ7Oz5mYPyilQ68jnCdIEL2fy58Ql845Rzu5jlBNu4oquHG+Lezxk9O8Rq+
n/3VyhLd4RVjmp4yQa5YHPJnYPyk9HckJQxMELskCZ1kJYy/4UdcL41PEK2L
Zmc60c3/G1K3nZ0gA/t+bhfDeB3zcK5JmjJJLPhGSy+it5pIzN9fN0lO6pz0
OoLx3a7E3CjUfpLs3PDURmc7zt8zpqiE0yQ50kiEb6A5M9ubH53Dz3dNezSh
4+Os9ucGT5Ktl2POWWF+6Qmwt2pNnSS8Ja9k/TH/2Ol5nF4xNkkuCXaUDWD+
svsYEZx8boo08d+tVdfC6zfu19t8cYpUV5SU3UVzvpYQfB48RfawVayn0PHP
o2+9uT9FUi4mhKdhfuyJTowcLZ4iZ89bvZLFfGp3NP+xEsc0SRi6V6yyG/PX
REt5efA0uXhibMcHzNc2nqH7C0OnyUPK3CN1Q4wXXHtGM+9NE25Lu4uP0eb0
l5KxydOk9pnEC3fM97tVsj18aqfJFdPSldImWO/435RXpfwkb1rurAg0Y8Gs
iPa93KCfJFvAWDQT640bmwqcngT+IgPaD45rY31Tp/ixzz3kFzEbXTlXg6Zs
nbHcFfmLyApX9umcwfyrorynN/EXcY04Xa+H9ZGXVgFLpvoX2fSxrngf1lcO
+wq+RnPNkLfttLLzbizQOV9gGnFxhmgGOfD/88bnU16gfNlzFuu394a9WJ8t
Y+s3dN2bI5uPf7Z9i/Xj7lithPGweWJafLDOvocF4mP12n4F/8iqVxWnmkTk
IOrV8yVcJzngjZChQ4KmHKhL/W9h1dElMHkm/3DLCTlY3y3S6+PGCRHy614b
RchBerLoiXxXLmhc2qXIKJED7y+WzesDueFD4SmelO9y4KK+XT8mnAfu7Pos
sI2fDRyO4X637vHAl2tWQgXokNjx3IsPeSCo4Ml7ZQE2pHKmrDjymAdCvS2T
tguyoadWYnRdHg84bRN0URZmwz6zP6HZzTzQwi8NcqJs2OZY2lolyguKsY3u
HRJsqIpdLvCMwQtMkmS4bzkbTJo8SNJyXvjnqttTj3ZU2ph8VYYXuAIMNpVI
siFpLvaCgSIvhN9IPRIlxQZmkP+KNmNeiNGi12ivZsNc7E67oVBeWFcoJnuU
xQbNGY2wzRG8sNkw8sZntL+BcuW5+7ygUTB1Y58cGyh/5WS443lBTVb1wA42
G+iHlvasyOWFrJJdXCvk2bCJ1m5r8IEXdE/L/SzcyIZjwU622RJ8kHlrciFq
GxuSu07cnpHig4J/6jPcymwY3mZXoSHDB1YeNQ6OaNfv+1bXsfng1ktqJdnO
hotaql971Phgv0mayGcVNkTNc9vSrPhAImlqxZw6Gxqdo2zOxfPB69iUB5Va
bGCHivxxe8IHMfWfv4jtYENAZmCEayofrNiicvUoetuoa92ZHD5wv8gW5t7J
huhT+kpHK/kg+odPrtouNjjYz/MZ9/CBSHOB8g0dfN5XXOMN+vggPlFSrxkt
lTigvmeQDxgMp3SJ3Xj/by0uOpN8YK7Ma/sYrWyb3qHBSYGfzl4m2bps4Law
ymTLUKDy/A+hZH02WHm16LJkKfDoOq/3N3RBlF7vWjYFOt7/lpHeg/f/tE1i
tSIFWJE76LfRTeZLA8S1KOCie9fmzF4cn8cVKbo2Bbw4HzjEoy9H/CkQ1aMA
l6nWo1b09pb+YSETCrTbu4WoG7AhxrjcnNuOAu8kwzX/oWedt00ssafAZbf2
AHlDXD+hadcXTlLg2cjAj4Nonnf3yudcKDB9P040B316jwt7wp8Ck/ECmfuN
2FBzqr9q9AoFlvqINPuiV163tB6+SgGT3ZWCiej3r3XD+2/j/YUnikfRKjoy
/zof4fcNW9LnYcwGpYS64FeJFPi0Z+hXBFphwVUsO4UCMLxSKg8tU/CSdTmb
Am6KGxJH0CvETueeyacAR8IMN9WEDQwnmub+Igosmxp3X4MWWHfMlF1BAWOO
2CAzNG+A0BexagrsVPeRPYPm6Mo/8beWAsxnne8D0NORvL6NjRT4j7veKAM9
OplBed5CAX56xapK9IDB/jsJbRTYpcT3pwXdyZuc7NFNAW3rrDcz6DY7oy02
vfh9PpWU85nieEtnS3QHKOAU7FLCQNcvf7R7yzAFwtu2VfyHrvHQbV4xToG/
ppfebEaXv5+w5J3G8VY1dWignytEDYzNUOCJYdrEbnTeNa2zn/7gegiPFzRF
Z/YN/q1cwOdRZSBvgU7VuhOcxkWF44X7jI6iH8eoiUXyUSGAanf+FDpm7lu0
nwAVImUUHrug75nfYJ1cSgVVY89mD3RYjlKuiRgVcluW8Xqhbwh3aqiLU0F5
8LWaLzrQ4UrtWkkq9LT6u11E+9dsMF26kgqJYzJZ/mhvmdbOWRkqOMXEjS7a
w9f3RI8sFWSPzW5ctHO77NQbNr7+ZbObH9ph2zuffAUqnCu2KvZGHw07R4lV
pIJjeRTPBbTV6Mo7wduocKhEwNQNfUCvVspVlQohV74mOKJNnzgnH9akwsZe
s9njaANOiS27tKggeivNyAa926qiREGbCucZW9L3o7Wen9zN1KPChmYQNkCr
M0SblxhQYef7bW470Ntcn1sOGVPhValflzJ6U4PdQIsZFVJrbxmtR68NzP2b
ZEkFnxFu7aXoVT2Hg2/bUmEV1f/NAs7/ck1uMa9jVDDinjwwhhb+tY9lcIYK
RzN3hLxBU0z+5ii74PiKLikXojkzEjVWu1PBl//sUAJ65tgvk2lvKqi3X/Q4
j56siOnsvEiFYA1iaIseltI58eoyFTwPjG/VRXd/uOsTdYMKa1MrNjHQr3ep
JMNDKujHfPz1GPfH+Ve+Cn5xVAhv6s4PQLN0q/JKHlPh04CzrS06cI9hhWo6
FS7cbwqQQO80PdauVEqFu/2z0j64P6dbUm3OVlLBxszmlCk6wXy8L7uGCk87
jmWx0JyHvKYU3lFh6up7diPGg3Kb24Jy3VTYMkUREUM797SGHe/F8dcIGn3F
+LLy6AqJJwP4PHXVIjPQvseT1q6ZwPX333p1bbS6Y4mmFCc/PH7oscoB41WB
1w/nZf/xw55DUj1XMB7a/1WYMWTxQ3KVm+UuNMPPzSdEnh+i4kTnudBulxau
Cmzlh/r1nqm+emxQvEpP4NHmh7ULCgsnMd5mRP7vw+/j/MD7hVtqOcbrxOz7
Kj1P+eGHSuT+4f/hevxzmN2WyQ/+Zcvv30dv2iUt2ZDLD5sPf9HVRr9oi58v
Ksb7KXD9iwY2NC88Lbv9hh9+5+58r03YsMSgdNf/hvjh73GFDX6YfywHe4zj
2AJQ4P6DFYb5jb5G3sEqRQDUYs1WumG+DA27bp6SLgDVUtN5fzCf8nMOaU1n
C0CE84Fvl9AcX1Mkrz0XgGg+d6HQdTj/Meve5r8RAFNa4NPEtZh/lq/ZJDQq
AOH2D56WYr52E13+q1hRELibezamYT3wfgnlksQLQXAuW7XsDoUN+ZSzTxpf
C0G8CYUx/U0O5OkiDnbVwrBSXqO+t1QOxkJ+0ba0LgWdfPs29XA5WBMUtNHJ
QQQq9k8HPHGQg55DHe1a/SIQkJ55pxTkYPf35t/5jstAayFJIFlUDs67HjvB
GFkGh5lvI97343no2QM9hoco3HwWlxr3HM9f8w7eXL9EYbRT2bYtjAUHD+jL
/Z4RhQsGgpw70FW561tHf4vC3fQXX9Jvs+C+w/DG9r+ikCljvPdyKNb7bWe+
ZfGIwR7aC34lrO8e5DrrWdHFYM7m8JHYq1jfOXgwi5TEIP7alsvJF1nw6KN/
nuNZMThOlzwR7cSCvupNXSHuYmDYp2m+FC2f10XNPCcGj99GpvljvfksVMN6
zEsM4Kxt+HGsR+t1f1OdL4vBQa0R2+2nsL4tdrZ2iRCDVWtPXhq1x/HFWfO7
FYjBF6tM82wrPK+HCG8NLxKDE5kKQZvRn7xLrPOKxTBunVfKsWTB0YOS+dNl
YvBBdiklH+vjC6Ifrd1rxYC292Ni+SE87102yPf4JAZHTPONxs3xfHdCw+bC
HzEw7VcVeYb1uF4xG9z/isExpatXDNAPhJirXBbEIPE307Mf63n1nMmuE1w0
qFdlfVuO9v2TZH1AgAYitI1VQXtYwBUiaq0sSYNPz0pUPXVZIJjbb/lTlQa1
U4yCajw/WPB80JhQx89XXpd2Qqfvr5Qa0aTBJboWQwJtMP+ws1eLBtpdfoWO
eP4I3WVi2aJHg4qvF1tX/Q/Pa20vLHIP0eBe3JofcZoskPp7+7CLJw0Ml7xt
EsPzzu6evUV3vWnQzfaLqMPzkNsrqnipLw1Uo4pol9B1t/3f8wfQ4EUZ5+4p
PD95yLroPr5Og6K/u29/UWZBo6GR8seHNAjPmlz7Cc9nf5QEI/7G0GDVq6qe
B2jZ5bWTax7R4G3jlSPWaO9ekuGcSIOFHZU5A3jek7uwcS1/Bg3E+swiuNGX
4oXFNMpoIFxY9M4Wz4/pQXXORypoIHTRknMzuu10YMPVlzR4rfVvgQOtoPzv
ausrGpCDVZYJeB7teDPC4dxIA+5n39Mn8PzKm51iFfmeBumeC1qv0IqRx168
aKHBaRrvk2h0sE3nOeonGmzasvnjHrTSz/rR+K800Hm7MJqH52Hr9uA9r7/R
4BjPzflQ9LWynalj32lwwD6o/Qy6++qLY+qDNAgV/0pho29Kp33+MEmD8iU3
t6XhebyQ64Tq/DQNHmz52RCy2G8bWHNPZgavv65FxXWxv5b7wNTpDw3eebQG
qaH7dK7XUbjp0NAfw9+2Ac+L+jar1vLSoV1i4XEFutNgq8f/KHRoPlckkIZu
Meta7SlIhxWGLZoBaKODeecihelwudFLwBn9xuLq2xwROpRdFUi0RFce2XJh
iEaH7FALoobWPE55xydOBz0fM1iPLnLo/O8/CToMdyQKr0ArOeZ4giQdXB4e
TRVCZ7kENVpI0SGu8IkYB3q9u4XshZV0KFD005uSZ8GT85u9I1bTIV1swaAf
He3Xsa5hLR3rzY0Vi/0aZkCWz+A6vP7LGYXaxX5a4JVmXjYdUqfuOiz2e5Ze
OyS3Rp4OHGMMt8V+0LWbG/2IAh1O1F/Qz1rst93m/nB4Ex16416OL/aT/MM/
sc8r0uGN788ji/2m+bsZF8OV6PDVTThxsR91/kFAa9Y2OtTcFMhb7FdNxxyQ
f7udDmMN/aGL/Syn+A2XfqjSwWz7Q7XFftdgImcbjwYdrrxcmbfYD7NP+bhB
htDh4JHjc4v9sp60tADN/9GhhMteePF1yyz/T4d20KE4WHB80W255hvP7aJD
d4Nu7OL19hWsv3JHhw4eqfwrFvt1jc85OjJ16fC6X8V+sZ+nX/phU70+Hd7p
lfss9vtqKlIDB/bS4dCty3aL/UCtar/P3EZ0YJw8RVvsF5bW7lNcbUKHwoD9
dxb7iSr1csEa++ggEyDXVbjYn3v3r/OgOV6Pq3ymHL2puXmLxwE67Hkw8/k1
Oq01+WrYITpot6WGLPYz17X7dGVY0MF0R47gF3R8p8nWN1Z06LDuNV/sf0p/
XXe934YOI0/pZxb7o1G9891cR+hQ+4hpuNg/pQ80bVt1DO9fWDK/FC045tVz
4CQdghiyzzeggyeNtrufosODHRdfa6C5fq0NuX2GDvWWqQkGi/2y+XcqdS44
XoXAAtfF/i1H4q2+s3RY3VY6fgU9weX5ndODDpoHPkzdX+zn8v93W82TDut5
ws0X+8lHhX/37femQ75lbn47umtZg7qbLx34+2M6J9CtzPMDaZfoYOSQGyiD
++ulbD2Rvo7jmzXdutjv1gvp0mPcxPGVK3QnoRt/TpoJ36LDoMVD5ZfoL1US
p/+F0UEjcOnQH/Ss3fF7X6LocNJbxsId97tvnWdC60M6/HnncCQCzaMYktEQ
g+tBo5v2DC26JL+qNB73lySP+2+0fCznREwqfv+Lb1cFY7zJ4WXMR6bR4e+M
tHM6WsVRju9WBh1myrvsm9HaGkZSfjl0SFuqrLsa45ttR7Su9XM6BFumtlah
I8VV4lfW0UFspreYvYUFK/z2pIvX00HhjJPpIXRCn3Xh0gY63HD+ef0aOis/
sGGhiQ6JAfJfhtFvTFvmuj7R4W5X6Fwhxl+OUCfTuB/4/tCmFMdtLHCgPOFe
TWUA+WlsvQfzxRvO4Js7BBjwvehhfTha/u9Jhr0QA3IZf791osfwoT9dxoDm
gzRhVzXMJx35+luXM2Awf1o1Xp0FPhnVYbrrGbD71T2D1QTz1b7vq1z3MmDD
487u8J043wavUsINGbCq4JDYBNpEN0WxwJgBYmrJrXt34XrTPLNz3owBN0WM
BanauB7X/TweaMWAkauzkoE6mK/nuDOjnBjgKbxXIEqPBQVx/2m8vM2AXxK6
/2SMWfDfwk6vijsMqOHZYhOMDrU8VlQWwYAPHjnrRtEnlj/Z+uI+Ay7ecO19
bsKC5eHrFPIfMeDjXP/CgX2Yv4LYK5OyGcBN4aMn7cf96bhpyfUmBqQrnz94
BeuLBjX1apNl4jAc2gTSWK/MOjwwtQkRh8FmqkfadRbc8kzg8wsVB9l6syHF
G5gfrz0tjg4Th83/XT9QhDZLKV7TESkO3PaP6DU3cX30d0yZxYpD50T8ry+3
WHD66Ipw/SxxWLpxXEEoHPOPZXTLtvfiMOJj3WP8kAXnziQGm7WIw9Dc6PMW
tLBPurpbqzh8LO2z2h/NAo2HJY+z28XBZq6D0yIGn197p5v8N3G4Wt4WYheH
8Wq/NF1mWhxOXzXbe+QxC2qNYs2EGEw4Fk11XZeG66HqeykfkwmWu56duIcW
2i7P4lzOhCNqh5dQ03G+VhbN/ZJiwjDHFtEf6I6R97Hda5nQGc955XEm1pvX
eAdztzJhj88BDb5cnM/qM76HzJjwejCw3akI8+X2vP59+5kgLLevtgl9KG3O
yPAgE3p4xFZtwXo15k7Qmp2WTLCNK+KZRrPsHtVuOMaE7z0+Zx1fYL210CK6
xB0/XyW0emcZ7l9XSe8/Hkyw+fDk5QO0f5/t95/nmfBjIiFrEl3zdrRg0JsJ
y+uzbWPKWWD4kGLZcpkJrvEa/cMVmH9V1JOSwpngtrCv4GgVC06OvP35OZIJ
K7snywvRzo+sd4reZ0Kbx8EygWoW+FEDvnpHM6HvlPKtDPTDT68lTZ4wIVn8
sXx/De7Hm4cdgpKZ8MJj5KbiKxak/m+k8EUqEzrWpbz1RheliJivy2TC9qdB
nUK1GL8u7A+dL2DCaJfe1OrXmP83/Piy+TkT48T5+SPo3q+eG46/YMJ95rOG
x+gp3Zi6pnImhL+VqpKpY4HI8u/cSa9xPn6apy19wwLxBg/Tz2+Y4F4TVqCD
lr5EiV/WwAQzInXeF71hcD3xfs8Ei/Vflw6g9Z67XjDuwPsb5Rx+Ws8CY0fu
2sBOHI9r9vs29AGZSMaLLibkSN0b4X7LguPXinJle5lQP7SD7yDaUVOf06KP
Cfm8Gpz+aI/Jz0a3B5iwTD/wfhL68iGO0T/DTHh2jydyHH1dOEx98xh+f/nO
GdEGFoRVrrluP8EEvfjdY1vQj9g6rKafTBj5WH7PBZ38pc2DdxafV2+fTgg6
K8yhWm2OCYy/zYEp6NK5m3ZP/jEheOf3jA50dcbK7A4OCfgSlRAxia63y14Q
4ZIA/deWfJR3WE8xdhho80jA2bUCXCvQHXUtD734JCDWOC9IAd3jaz+URZUA
U6ez4QQ9qDir0icgAWmGbixD9ETf1WBJYQl4EDutZYmejZL8aCQiAcdFdn5b
/H3OgkH62kBRCVDxqaK4o3m5iFsxDa8vOJjjixYqaKwcZ0hAzl61r4GLv985
ZbdMVkICSk2M79xES66ctj4sKQGGNR9rw9AyzVcyQqUkQPzfDf9INDtI/G/1
SgkIpGiVLP4eabNaiv6f1RJQ8f+/V/o/Q0jexQ==
       "]], LineBox[CompressedData["
1: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
018349zSfIzIED+5dxOnP7sLHWXOmJFh8+YrYpz+1vh4KMp6Pxmc2LU1Lug7
A2ZC+jb4fuR1uznjpSWls7jSAZ8fsC3kjK++TZObvSMZ/uq72nHG3+z+8d4k
ZzJ8sFrWcJgzP8Rv1yu4k4Hku5rLijM++2V1HC+SYUw49rU52icqLy/jMhmq
c8uMjNExoh33lf3J8OW9YLEeOtXstNDpIDKk7TCI0uXM93Dy9ezbZAh/qae1
DV3LUHTaEEWGiFvR7aroKQF3DY10MqgNGJ1gorn/oz65+IQM599u82Zw5vfN
+zKlT8mwtV3Kio8zvnxVPNrFZPCx/3RsFtenBY9Q8/Y67D+D+qZ2tP3Oh/p+
77F/9UXkPqFP+256/voTGb4t91WvRftRbJJ2d5BhpRVXfgE6byHddd9vMpxV
3027g67cpvUzZJgMWoP5Ib7od14f9n8aJ4Nx242ui+gfM/8I83kynGQENB5B
C0/qCloLUmBuZ7HoJrS0esu1B8IUeH5Tp00RzXY/8a9zOQXeBrk5rEDrjN35
YidDgQzSyEcK2uXvl0fH1lPAetiMrx73Py8VF+l0NQrsvCDGX4EOPMUV9kuD
Ai2Jtc1P0fGDrIvOOhToXJR9EY5+33dez82EArvFn0xZoJW+0Xsun6PAloHy
sU+4vxv2raw6f4ECr0y/J1ehXYbWJ5zxokDp7QL5HHTenJHNYV8KmJc+iAxB
a4mHNu24S4ESHVN1A/ReE0b10jwK5EnccC/E8+b0Adkk7iIK6EzIKySjQ+xU
r82XUuCRGX9aCLrptPG2vy8pQDX7Kn4CbRMcmv+pkQI1ScWvxNDOrxip0WMU
eNyTreGM59/tt7K+YZMUUJ74MmqOfvpJ1T54lgLCkWRvAj3+zVj6MhcXzAfb
8QqjveZDI+1EuCDz4au+vAlcH+rCAWs2csEN9flfI3geZ6YLO+a7ccG9B9LG
u/G89m2u0OHy4ILPzN/9bLQN5ZSk8SV8fuWKAT+az+bN+9/XuYC1X9/1PeaB
Y0Jem1ZHcMHGingdI/TK8z8p4YVc4Ajc1D2YJ+5uL4p1meOCEJ3Yd8sxr5x0
OepRTuIGlaKt/SOcPBMrbMy/hBvapUM+vkOPTDhzpwtwg9nxTwI+aMNHsie7
pLnhg33juoEhzMOMYA1DHW7Ynvxi47M/+H5fDzYq+XODN8/fFZKYt8b1tsUe
DeIGAWPb8WHMY87PVhyPv80NfwZM41+jrX07ZoSj8OfHbV1c0VvZB+Rm0rjB
yEGNq/oXG6bdzVxrarnhEledoEM/rmcBA6GjAkvAZ/TlkA/mR1ctDYO4u0vg
xzvzbfswn87E77AfDOEBY9nN1TGf2KA9uS1MNYIHNr5ZMnsYfc1wc5VHNA94
XzukwkJT51ly3A95YP10SEjhRzaIWgl1r8jlAYPicsumBsxfy9oPGzbzgHzw
rgTBD2w4Gnjm8DNxXgiTXad88y2er12OoZNSvJD6yj3LDP1b3f7FNjleWDI9
tEcK7fbTTLaOzQtWBwZbsurYcFV36/duTV4YPjVr1Yj3gZg57sPLDvGC8PVj
Mqtq8DxwibHzeMgLf80MXvfi/YMdQp89l8oLJ3TE9xShr2f7R7g94gWDenG+
ILT6kFvdqRxeMPuvd7sKOvakgZpDFS8s0HNfXnyJ949jc7zG3bwQ/325vHQV
G175uT007OUFb8VcgfEXbJBK6dfaO8ALVXw++nXohh9NrnqjvNC390aJB3rz
4cyObRQqHHxkW9xSifubzaFsthwV3vEruKRWYF6/1LRbUYEKlxfL1/qgC2P2
9MizqeAp6W5+CO3Upi4uu4EKxhP//RJDf7QQui6mS4Wwk1v+CynH9zvvJyW6
Cz+/D/zPoH0jZguF91ChrdR30z60RlPfbwETKhQ1V8wJoeOMKy247alQ/T3a
MqoM918X9RHyMSqIvpN19kSbhDwJXjxBxdzwlHIIveTDvcoZVyqINUSXKqCd
97qyR65R4d+PpuvlzzEPnOx7NeRHBW/Hng8paJngg7a/b1AhhYuacQv9qXb3
3b5QKti0VvLaorfoyS10JlIhUHR3DBWtllQX+CaFCpl9u1vGS/F8XXQTeZZB
hbUsi6TvaLnCl4q+z6hgOFIz/hy9QsQ591Q+FSJPa156jF5+Zpm2ZTEVFL43
RMagl67B+8oLKmRXqYZ6onmuC3wVqaZCXeVH15NoUle+43wNFR65bhu0QY9H
8ng3NGD7G+of66CHRrOoJU1UsIq9Ma6G7je0DE9qpYIAF9GmiO7kSU8//40K
XVMnLgqjW+2NNtr1UKHg5UZ1KvpT+VTZ7n4qNBjHhy6U4Pkhkai/8TcVgpLh
5j/06/O7G1cM4/ikPVT4g678NHKQZ5wK/Qy9wz/RJSox/X8nqUDflar1FZ0X
pHu2bZYKAxrrij+js3sH5qsWqbBgoff5I/qRbnjgEy4afHTeE/UOnRynKRLJ
S4PO0KDpN+i4mR+xV5bSwETUaOEl+p7FTcUTQjSAU20pleiwHLVcExEaPFhj
PVyGvinYuU1LjAYaXxc7S9H+Tn418pI0cFfuP12CvvZ6ramQDA1ep7GTitFe
ci2dU3I0UG5v9OT4vLe3Y7cCDfYTvf84dmlXGHvLpgH/DqtlnM9zUv9wOV+F
BhV60i3P0Q5hHtT4DTSQS1yuWYE+NCQTHqhOA49kqe1V6P17aqTcttJA7wnX
UDXaNNUl3VqbBr2r72jWoQ0p4ht36tKAJ8ZL6QNa/9CLMpVdNFB67V3WhNYt
OaHP3EODVSnaI+1oreXCjWRDGvAGWr/+jlZ3Kzk4aIzPlU9q/UKvf2/f32RO
w3GZNhlBy/vnzqcdpEHO0UhbLhzfld3WgaGHacB99LaZAFpCm1vk0lEa1L9t
6xNDC06YKRqeokGPwZdeFTTVZD5nsysNGk+qG2uiKVkp22TdaUAxZFvqoyeP
TpiMe9GgWLl2gwN69EVcZ+dVGvwdbeI5i/4tpef4xpcGEce1zvqgvzVHXY65
ieOlEsxIQtfu3JIOD/B9f97aPYi+8MZb5UoCDVqVeM+RcH0p7n6VV5ZMg81y
5/SXo/337nuxNZMGAVnXf21H7zA92q5WTgPbVTt/pKLHmx7Zna2iwen1Dmov
0EkWw73PXtPAqOfUqi9oitWlMZUPNGhfeNEkgvtBpV0oP+sbDRa4P5kHoV26
W8KO9+D8a2k+noGWcVghntqP/b19N18t2vt4mvyqERqk/HafpuF+pHW6TFuK
wgdbzgnsC0MXXvrlwljNB9IqWrqluN8dm1eZ3KfIB+WHPl3vRi+/cu7ybWU+
8E77pcGH++k5n8UbSzfxQfc6owkr9IYboklLdvGBTJd8MBn336xInebp43xw
n3tn8GHcv1OeRW/pfswHbkWrm+yqcT7OWrNbs/ngom7cyzvo9TulJd/n8sGp
PRn95ejnrQ/nikv5wPJN0nup12xoXHxcEfqWD7I9pH51osmG5Tt1BvmgQ+jI
gWN4/hwc6DZOYC8F1R0mb0Pw/BJdpex0KGMpSBfaqkngefmJTPURf84PA4Hu
nwfwvB3KjD5kVMkPN/36yNLf8D5opaQZ8IofLlha8BujIcdwfPwdP5i/564s
QGfZRxxr6OSHMr6GmKvf2RD8Us4gYJEftmoZdgv8wPH027bsn64ACPD/5RLo
ZYOd6odhJT0BaOe2y9ZEX+q0q7c3EIC0ZPmNTuicTb7+DaYC0FPYV/UavbK3
buqxgwAY2f2bv9zHhrld+zvt/QVgcJ17cQ/mh3zq2dSGWgFYOHZBIgzzSa/X
tT/l9QLw9/eHnCI0c+SOWuZHAbA4t2x1F9qr7UnVjTYB8Pk+FqL0G9v3qPer
7i8BKPfiDa1CfzKwEsunCsL5ayDyC/PP8G2dwGg9Qfj8bPNZMcxXclxGHwIM
BCHzSfikBtrM49Dy8/sEoeBeo7EVusj2UrKJpSAcUckMeIC+sj6/culxQbCP
DJ+QHsH1+Elx+rK/IPhtWdsgiflNWZTuZF8tCGxS7dg45juR7NInKbWC4HCA
77QI5sEZ/eN/++sFQdxcPk8VXeNVfu5MiyBovIpJOoV26HG+4tUnCOoSLgI/
0LG5tXcjaULg4/Ny7iXmT9//3D+3CQiBDm1IqQvt3LdSQkpYCLbHfJSfQW+V
vBCfJCEE0iXXLq7D/Nrio/DoqZIQ5qeKuCi0oMn1irr/hODAMZ7Gg5h3/w2q
UARNhCBwnVmqO/qLX/sOYwshMDVw2H4L/ahYte7zIXz+Pay9FL1L9ltTzxkh
ePU7+dJyzNvew1oDC6FCEFDy0+sF+mhQv7JupBCovpj72Yzeu/ruGb8YIbBs
ojAH0BL7B8eXJgkBM+lxCwPzf0FF9CIzTwi6huTKDqH/3p5YtrFFCJoX41YP
oX8PS1etbReCknzrqXn0gIneGcWvQhC888p9Tj2pZ/m9WqleIYhZ2bZPGd0e
t8WbOiEEsrv/njmObiXZK3HNCMHS19Nl7uhm+6DW+XkhaDvF6riOdgw/FT1N
oUPku1afeLS9ZfnYEB8dnqfF+zehDwea7PnNTweb9pm9nPqSXXFvwi9BOrSx
tLv/oA9KChn2CNPhZL/tRR68b+3vsk1vk6DDQ0m9A5z72n/HyQdfsfHnG+62
3UDvvReR+0KZDuv4FIPD0XtqWXwVKnQY5lVfyqk36SuZFBZvoMMNhYzz2Wjd
vw8Z2VvpsFGOmPnIud+t3Oz4RIsOZ3RmpTn3UTB+W56hTYcjB8jCnHrTttyx
k8m6+PnyTfac+pKGx47X0XvowM8ezxLA++3m9NYVUXvpQE213bkMrd7mfPau
IR3+DvVlcOpNGzUjVt4xocPHA1s6OfWlDc4sj5tmdPjcMvlYGb0+tqz+hgUd
YlvK9Dn1JpXFn56+VnRwTjf4zakvKa/3/HjNhg6NBG1MB610WFDxyiE67PxZ
/IZTb1J8qd580Z4OGee+tXPqS2vG65Q8HOigcXOvuBlaQd7W59wxOuzmvye/
H70qIGDdGSc6rFpbksapL7m1qHnbO+O/9wvlP4KulO9+Z34a25/P1jmGFnK/
I7nbhQ72J6/tPIE+9ErLScuNDmU2oeLO6EyRgaJ15+jgt9eijFO/mLOP4l11
ng561HfrOfUmg5wdFssv0GHccegsp/4RQx5NpnnSQcyk2J9TH/llFD82d4kO
7jmKJzj1E42EvbrDl+mQfl1DklNvCvg7HfLjCh3W1vU84NRfWrTTulquoSNY
Q5z6jPxtM5W663RIWKAIceo55zrJl8v86PCFfWqR45fK2W+fBtCBstuhglP/
EfaykUi+QYeSsB5DTn3o8FvaiahgOswYDGRy/FSisDDoFh371fX/6k2LJxx4
vO/QQcLYo51jw2KGuWsoHcr3T6ZxHEutSHIIp4Oq3tAOjn9bOo9aRtBhMHz/
M873aaaJ6xhE0cG4csMfTnuCJl7f0Y6mQ6/lxSlOvalt57mvqvfpIDSs2Mh5
H8UI2bXysTi/FLUvc97Xo+f9JWY8HbZk5E9w6k2vN3rVLU2kwy2FmwSnv0Sv
s8QXH9Khy6bcktOfDp9ajo8m0yFMeDfB6W+Kq+qStnQ6nNpl7cUZH+PKr6bv
HtEh6tqXj5x6YYLQzYcVT+ggWpAxwak3aWf1EqlP6bDpj2SWPfrWfPjt6Bw6
uE6VAGe+fNmr03kzD/tLIOYhp17pOXjf82wRjscH/iZTTr1o6+7aYyV0IOpj
kjjzkRk0IWb1nA7Jngd1OfXQAkXjfKikw/yg+x/OfB49yjMsUEMHy0Pp05z1
oJOfq02uo4PX2xDdNegQ7sO3xt/S4dz3e1aynPWBIarjAx1MlBcmOevN6ZvL
0fTPOB8l2/umcX0Wr5POu99GhyeuXhmjaOqVt5Q7HXSAKKWtg+hUKYUE9y46
yPmn1XSgu6062nX7cLzXt0eXoPm3WabZ/cLxOKcl/Ay9SabxrPcgHVbw9htx
6tWBP+r4S/7i+21kyHL2m3XOJdqqU3S4XOrI78jZrwzVl+6bwf1D91OBDdpn
fc5n5zkcT0e3NcbolvEMl3QSA9bwGlpvQXtdjn4oQ2NAltIWAV5O+2xFz2xb
yoDj/6R+TeN++EEnVNNagAFJdqzg32g5nhtNkQwGpPc8kf2Irrl9gUdQggE7
j6rfi0KLJlg6zbEZcLRpNEMcre3TqC6xlgGbz3v3UTn7s8M+Lo11DHDwZA5O
4v7/XFHvwdmNDNg64bajGW3/TP39gCYDvkw8JG6hs6pEN7TtZcDH40zLUTxv
WpNDFyYMGRAsxfjXiSYHCLxdZswA+UragVq0mcESByNzBoR6TLnFo2cbxyPe
HGTAQYeyIX20/s/G6fzTDHAvD1kSiuffZaXbl7JdGKDxqzXBE53jqj+f7saA
JbR4mgNacuE56cF5BvwTSdmujh5ansrr482A+Z3RB1rx/L2rf0HU8DYD9DQI
ARH0t8crVHszGXBCuTLCHs970dGWnK5sBkQHbPm+E71HI1St7RkDnB9rzSii
c18t0XiXz4CLbj/uDmG+8O8c0s4pY8COI3XOHmhloRd7vesZ8GZPfdoVzCMX
3I46Lv/DAKeUoyZOmF8CDYaOb/2L/Znre3AHOmq1x/FDIwxo4/NZK40uaAk8
lvqPAWeuyqz4+JcNY1ufOKgvMOB+ubSaGvo015idhZAwaO4TMf6LeerI3asH
IlWFQa8sY98WzGNup2gHSjYKQ3EnZXYp2mdX2P6vm4RhHG6c/DqA63cqyVJh
qzCkfmQ98EF/tXljXqArDOtHhLRqfuF8lBc0aTEVhk+eWy7qYx40LLi/Z/l5
YTiuOUmS+onzYcx+UfSCMMQLT7YM9rDh+np2nqinMHyrFPAsQRc9KpIS9RaG
0YKbayzRcvHNwyL+wqA/tXblbcyvEwFCUYxIYbhbMx00ivk27sD1H/wFwnBo
4zfbiK84XnNOXlwTwmDuKPJz+2c2HNhvwJqeFIZnYwtmvOhXuUotQ9PCcElq
/G5dCxuinX6va58Xht5nAn5GnP/vbT314+kSEXhDvqpg1cyG+7kuew6JioAd
JcDNoRHnk9N5ZrGaCJz4GGNs/oENiZ+v5Z0+KwJvhVXNMzDvzzhus7s4KwK9
WaX3bZ6xQWo+1NrVcxnc6HXm9ovBPKwXXEflFoVNakJJxd54Xii8I6SDRcEm
0FM5zg73F2oqtyxtOWx/Ma5hrov3nYTV216GLodQscUDMTJseK+pVW3CEIOv
BfuTZRdYMOV039TuthjkNc5GXOpkwR3PJN4rIWLgrJVSPfyFBQpBj0tjw8Rg
UCVgxTG0eUbpqo5IMTgfbrPduIMFOX0dY+bxYpCRlXmL1cYCZ4cVdw2eioG+
y/Zv3U0s+HYwtkn9kxiUW547fuUdCzxOpQSaN4nB5yUnLWbfskDwcqbWuRYx
2CXKf8sDve1BWfKzdjFg1iq2uNSxIKa985zyDzEwnrw1c6yGBWaW0qJy42Iw
U/Y80/4VC2qM4s0FljPx/pB0J/E5C5xe/SznZTIBHCSlVdECGsqKFAkmfO/r
EX5RygITmeKZCSkmXL47pNZdwoKOP5/iv8kzIfqYnA+rmAVDQTwDuZuY8GJt
hV99PgtEq095W5kzoS7Ia8E9mwVFGnl9ZpZMoK8O1xZFWz2ZMdp3gAkX9EXF
8rNYEBcesGrHQSboeR2/N5HJAkX7xJq1R5ngWCcneO0JC7QWm4TJ7kyoEa+0
yc9gwVc3Sa/Z80yQ29Q3ewh9rffwz38XmOCnnW9EQ7+uHyoc8GKCQESrnF06
C/Y9oB5s8mVCvm9A3PI0Fthv0UpLu4vtyeJOTE9mwYk/9f++RDLh+rHEIXO0
S6LtDuFoJkQKSO/kRl+hXf/uFcuEtidOYg5JLHjQVitpksqEn0F/7q9/yIKk
W9ZOAelM+BfAutSbyIJHOn+Knj9iAr/R1Qux6OIMusWabGwv/fdnQXTLRcuQ
uUImNPf0ui7Gs6Bz7a+vqiVMkAzYHFSO7vnuufb4cyZIMBjN3uix3XF1HyuZ
MGWrxs+Fpkv85E6rZYJlasJ2iTgWiL0/b/rlLRNC215u/BHLAmkf6kPGeya0
GzmcyESvHVAivD4xwWphIXMnek+J20XjDhy/Azmtfg9YYHyau8a/kwkH6xmq
B9D75SKXP+9iQrJqdtda9PGg4lyFHiYoy6jpddxnwWltA4pNLxNyd1Vz5aHP
j34xCu1nwtxAr9RttK8VaWj2NxNzd6LrLnSwYJiW6l+cT9c9s1ajw6pWBR8b
YcL40aP7uNGJbD3Fj/+Y0Kpv/vJNDAvSv7ae55liwrSUYvRj9NMwp2rNGSas
D0xrDUGXz9yyT11gQuy/uGhbdHWWzLMOkjj45zhK7Ua/s3+2SOcShw2z14TU
0E3LtxvuWiIOUz8HXFaiO+qaHlziFYe8pjBdQXS397HBpzRxUNLZ7zcfzYKB
DVNbepeKQ+Qt6tYh9EjvjUBJQXFI/2x7+Bt6KkbysxFdHP5roM41ohcNM+X9
hcWhJuIBXy2ah4s4V7pMHIbDHt6qQAsUNlQNLxeHNrsQv0LO77udtGcoiIuD
TWbt6FO0pMy4rbWkOOSvTmh+jJZr9MsKkRKHTltTlXQ0O0BsvlpGHLa10Oc5
v7+nqplhMCsrDlf///f7/gcZteow
       "]]},
     Annotation[#, "Charting`Private`Tag$345788#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 2 Pi}, {0, 20}}, {{0, 6.283185307179586}, {0, 20}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7271934364133043`*^9, 3.727193498429016*^9, 3.7271935382590895`*^9, 
   3.7271935700563283`*^9, 3.7271936044477863`*^9, 3.7271936523575163`*^9, 
   3.727193684080558*^9, 3.727193736873131*^9, 3.7271937706357746`*^9, 
   3.7271938432847843`*^9, 3.727193901619221*^9, 3.727193953605116*^9, 
   3.727193998326021*^9, 3.7271940418978357`*^9, 3.727194124606475*^9, 
   3.7271941889344068`*^9, 3.727194362430461*^9, 3.7271944415751934`*^9, 
   3.72719449226257*^9, 3.7271945360104575`*^9, 3.7271945897944045`*^9, 
   3.7271946574172106`*^9, 3.7271947030726557`*^9, 3.727194776479336*^9, 
   3.7271948151321974`*^9, 3.727194886105839*^9, 3.7271949842165136`*^9, 
   3.7271950578246393`*^9, 3.7271953109982686`*^9, 3.727195410011983*^9, 
   3.727195525249728*^9, 3.7271956015580435`*^9, 3.727195711118511*^9, 
   3.727195825536945*^9, 3.727195907560121*^9, 3.7271960920478396`*^9, 
   3.727196269905121*^9, 3.727196405569133*^9, 3.7271964523598766`*^9, 
   3.7271965410891905`*^9, 3.7271966117800694`*^9, 3.7271966582773366`*^9, 
   3.7271967423414197`*^9, 3.7271967806798663`*^9, 3.7271968319579153`*^9, 
   3.7271968747765617`*^9, 3.7271969279195127`*^9, 3.7271970164004436`*^9, 
   3.7271973358728943`*^9, 3.727197395234129*^9, 3.727197463019452*^9, 
   3.727197555411496*^9, 3.727197600252768*^9, 3.7271976516039033`*^9, 
   3.727197698513239*^9, 3.7271977450777903`*^9, 3.72719785091965*^9, 
   3.727197920715653*^9, 3.7271979633560133`*^9, 3.727198008763089*^9, 
   3.7271980547746005`*^9, 3.7271980989372144`*^9, 3.727198169921528*^9, 
   3.727198215838727*^9, 3.727198318404009*^9, 3.727198353224142*^9, 
   3.7271983906934185`*^9, 3.7271984300906367`*^9, 3.7271984705091195`*^9, 
   3.727198511805608*^9, 3.7271985459253235`*^9, 3.7271986080626707`*^9, 
   3.727198646408739*^9, 3.727198737700918*^9, 3.72719877412473*^9, 
   3.7271988334833927`*^9, 3.727198885998563*^9, 3.7271989195284424`*^9, 
   3.727198961462003*^9, {3.7271990103423243`*^9, 3.7271990395884094`*^9}, 
   3.727199073827176*^9, 3.727199114608611*^9, 3.727199159669422*^9, 
   3.727199212810911*^9, 3.727651741767661*^9, 3.727651806668408*^9, 
   3.72765186527976*^9, 3.727652100006935*^9, 3.7276522126637907`*^9, 
   3.7277124826242237`*^9, 3.7277125412294397`*^9, 3.7277126020631695`*^9, 
   3.7277126555079513`*^9, 3.727712705335312*^9, 3.7277127547400455`*^9, 
   3.727712849676608*^9, 3.7277129506502113`*^9, 3.727713123036628*^9, 
   3.7277131712829285`*^9, 3.7277132522698154`*^9, 3.7277133123724427`*^9, 
   3.7277133455916853`*^9, 3.7277133885144234`*^9, 3.727713526787998*^9, 
   3.727713841772884*^9, 3.7277138969928565`*^9, 3.7277141057256064`*^9, 
   3.7277141591863995`*^9, 3.727717667554964*^9, 3.727717825501704*^9, 
   3.7277178677700033`*^9, 3.727717911974599*^9, 3.7277180012313585`*^9, 
   3.727718069003733*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"f37f97fe-26a0-4c56-8c3b-6f4b72ab1631"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
lvAPeg==
       "]], LineBox[CompressedData["
1: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
q4Vp4jE1MXkHRju8fWDFo0jcc8HR+LZYO5x956e0jrihqsy7dnU7DNf/CVUj
Lhdaem96SzuMppnJahM/2n/8jfLudjjOMzq2nZidUDh5yLodmOJGP/WJIwYX
yF5zage/lv6NRsT+a48aFQe0w5dytRQTYifPx56fI9tBkfHC2IzYunR+osS9
djh9iVLeS7x7/sFao7x2mMy7sWUfsbbxwwnfynaIeDfg/9drouekHr5vh+zS
65N/n5fsNN/VMdQODxeJJpkTL2SluC+caofpxSL+psS/z/xK0GZyQbZyRbgx
8acnu2vOrORC1dCTt7uI22fY43dUuKAzGkxyMKm3ut8l32pzIU5IqQ+In13X
N/hjzIVKtc35msQZzXGua49ywVvUvFCVOE7yS7y1CxccFaQ/KxOH2mN1+CUu
ZETqGMsRn3t4c6w0igs39p7qEiM+NTG0cvQ+F7at1ry7iNhCe4ueVD4XpqLs
r/MT618Jdzap5kJsW3zaT7Kem9/0xPm3cuEtdXP8E7GiyKbK7GEuDPzicegk
Xn44ZLTrFxeiDdmL6oknPq/VAckO+OB0rCuHeGDjpbPOaztA2FGAySZu8m3+
j72tAz6Kdh0NJ368wHdkzqYDzLz0b5wkdlWpiS5P7oCbZRf+CP8df3zgYmJB
B3h0pn7/ez4OJPKcufi/DkhM0ZXsJ96yXHMHfuyA6e4D83KJ+ebSR5+v6QT5
39/W6BB7aFZz2Fs7YaVzXh6LeMi9rzLApBMoU5UzDOLa4ZXx4NIJBf5L3GrI
+Y5qvGbwPK8T5hnPNCDxPKE0VXZlJygpZA5IEnsZVNIB7ztBp+bH6imSXw6V
zHzf9rMT1upe3PWQWC7lbGLZli5Ypt7dKUj8+PyeX6UvumCPi6lzEsl/Ck8c
BxIau+BQaU6yC3HMaEj9hf4u2JxjsBiIfezKk7fO7wbNJe1+nEJy3oz/MS/d
2Q3eu4T/N4+4SWZZZkl9N9yNXmekRvKzvtX6mDs93eDUuq3+Zz7J59FGl/y+
dUPQPfuwImKT+RUqd5k9YGu3IXULsarPNO8RlR4IXDQeuJHUh2k7x+xOpx7I
bIgU5yH1xUb4+7kSrx5YMBajVpzLwqoyH514/x4ILuKkehJHioe1WUb0wLoo
z8jhRyxcVZ/G15zVA2NBI77VOSzct2XoQO1ID9xw6Fpkl8XC7CXH5gocesGQ
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
pRv9lmUiI0LU86//DyXob6E=
       "]], LineBox[CompressedData["
1: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
1fzPO/dk6/8RpyKeFQ7WKuz/AZQKGQw=
       "]], LineBox[CompressedData["
1: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
0Jyjw4Cbx6euC3P3T5HypRtbGKCzJP0Qt/7Ul/C0PTJhQE/j0gZufTJ79oFT
a8aAojh39Wn0hsoz7YQlA7Zk9r7+heY0Nq7x3c2AwgCnE/3c+vzz9Nfdhxgw
S4k01XPr95ilns9hBmTHrQ7n1lf6hEJYhDsDhmjt67n1d/rvO/0aTwZIrLcN
esmth/wrI9adYsBg1nxUAfrlqlpK6goD1kb0NMZwz6Owz6Zi1xhwVlhoTRR3
vL/Hdi26zoCXFd2Xw9Gd/y07MhfJgIPid6W458Wkg0ts5y0GWIW/6zmJVkmi
jSZmMUBB4+W4LTpaXD9VuoYBN2wSd4ugV5zZ9lC8lgEb5mVfLEan9doXL67D
fJBPlRNA5xQE1c2/Z4DowMt6XvSbHU3Tnz8xwCi3onUYz0+e8KM7kvsxX767
PKpCu5EZhCyLD3KalLK80W9oIdc2CvBBUHtAowdaZfaQ2MGFfEDoGEy4on+O
qireF+KD0OU6invR3m0FZtrL+aAs9xlljA7Irow0UeaDN0W6piLo8J09Ml7b
+cD82V2dbOwPipJXGr6M4APTvoi6JuxP6tYZVFoJMcHo+9PA1djvhBb7zGxe
woT0UnqPDHqL9iONdaJMSNPU3LYcXa4mlyi/jAn8xGnJhdz+Spb0+yXDhPGa
ZW/HsP+KZTYpRnOYkB91/PAztGPj4aufLJggmOg+Y42edIvfsT+MCS8eJYuG
Y393/VQa80w4E7S3v4m6jF4Ver/0diQTrhQlLL2A3nWvVL4tmgnJkkfVfNGP
v7eN70pigtJhjyg79BGnFVFmOUyQ87llrYTu2nu7SaeBCaJpOeI12G/6ud8J
2dXEhEBWxpb/0IsCHhp4NzOhyZYMfIY2THiantvKhCRfk7nH6FutHd4q3Uyo
mtA0T0DvtJESlfvFhJgZGd1j6NeWSbsWipEwlGEfJIl2+6/nGXMpCSdPV40s
RS/UU1GkLSdh2EzBQQRtJf1kekKShHTHPlsBdNtQQ1KXAgmhK8ITp7CfHg7l
G8jTJmHdDeuLH9Hhc9t2ZOuSsOiqi0Mjeo3XjbK7+iRo2s9teYc+YStz/bYh
CdKJn9lVaJriWq1gY3z+0h6TIrRopXvgv7tIbl7OxXL7d7387zttSHh458Hu
m+h/H0xbWtiScPA6T2kEOvFGsPymvST4i7fHhKIVHVJeqzqTUNutkeePNphv
Eub1ISFBINXXAd3pJeE/40vCp87qnfboc70Hen6fIMGFcltnh371drhowJ+E
lnw1OWu0RQK5t+kiCR6TJ6xNNbn12iAzM4qEq8Hu9lroQ0Nvf7dHk6A043Va
A30sxX6TcBwJqw6eSVVDn2Fd+OJ/mwTepW+E2OiET9USVhkkOB6Y8pFCp13b
4xZ8lwTxWtqgBDpr/VBxWRYJiWrbDi9DP7knaL36EQl6Wk+uiaCbT9qE/y3C
++uz/xVAd6j2d2qUkDCg46bEQn/7ckrVpYyE4OYYBhM9bpJY876chDvF+zpp
aMHlPURmNQnxg5rLZ/B/SbzOd0f7GxJO9IlsnkJLnSdThepIwG0Y8AetOqBM
+TeQcHrae/EvtGmJ18l/2kj4cdHy+RD6Hw/idVAHCeaR17f+QO+WixYr+0zC
Y6FrHQNol9Aneau+kbDSsUGpD+1hZEaz6yXhurNsdy/ad6zdMqKPhOS1hpk9
6Iv/8gzP/CBhj3OfVTf6yqJIA42fJPSNBKz9io6skL9ycBTfX/JD9Qs6RWmL
4vvfmK/LD+h9Rt/tbPHlmyQBBg9bdKJzIt0q102TUOj+r1cH+tn0NYeMORLq
kgfb2tCV2dK5bTws0AmLlOO61iF3XpDOAv5MBZ9WdJPYRvPNDBbOO6PxE7qt
pinhNJMFUn7iRlx/DTw4mMNiQd2Rk/kt6AHNSf1eATR/nQ7Xo72XQyQWsaA1
WazyI3rylsRHS0EWeOzbac/1vPlDhSBhFrjsCGFwzUenvEtFWBB4NK+oGb2w
qL5iRIwFL883+3AtcthBaNUyFvAYjlFcS0j/st8jwQI9NaYY13KNl7LDJVlg
+Up0kvs/rBQsPlspzYLNu6T+/3+sse6e2YwsCyQFZLu4/h+78XqO
       "]]},
     Annotation[#, "Charting`Private`Tag$345836#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, Pi}, {0, 20}}, {{0, 3.141592653589793}, {0, 20}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7271934364133043`*^9, 3.727193498429016*^9, 3.7271935382590895`*^9, 
   3.7271935700563283`*^9, 3.7271936044477863`*^9, 3.7271936523575163`*^9, 
   3.727193684080558*^9, 3.727193736873131*^9, 3.7271937706357746`*^9, 
   3.7271938432847843`*^9, 3.727193901619221*^9, 3.727193953605116*^9, 
   3.727193998326021*^9, 3.7271940418978357`*^9, 3.727194124606475*^9, 
   3.7271941889344068`*^9, 3.727194362430461*^9, 3.7271944415751934`*^9, 
   3.72719449226257*^9, 3.7271945360104575`*^9, 3.7271945897944045`*^9, 
   3.7271946574172106`*^9, 3.7271947030726557`*^9, 3.727194776479336*^9, 
   3.7271948151321974`*^9, 3.727194886105839*^9, 3.7271949842165136`*^9, 
   3.7271950578246393`*^9, 3.7271953109982686`*^9, 3.727195410011983*^9, 
   3.727195525249728*^9, 3.7271956015580435`*^9, 3.727195711118511*^9, 
   3.727195825536945*^9, 3.727195907560121*^9, 3.7271960920478396`*^9, 
   3.727196269905121*^9, 3.727196405569133*^9, 3.7271964523598766`*^9, 
   3.7271965410891905`*^9, 3.7271966117800694`*^9, 3.7271966582773366`*^9, 
   3.7271967423414197`*^9, 3.7271967806798663`*^9, 3.7271968319579153`*^9, 
   3.7271968747765617`*^9, 3.7271969279195127`*^9, 3.7271970164004436`*^9, 
   3.7271973358728943`*^9, 3.727197395234129*^9, 3.727197463019452*^9, 
   3.727197555411496*^9, 3.727197600252768*^9, 3.7271976516039033`*^9, 
   3.727197698513239*^9, 3.7271977450777903`*^9, 3.72719785091965*^9, 
   3.727197920715653*^9, 3.7271979633560133`*^9, 3.727198008763089*^9, 
   3.7271980547746005`*^9, 3.7271980989372144`*^9, 3.727198169921528*^9, 
   3.727198215838727*^9, 3.727198318404009*^9, 3.727198353224142*^9, 
   3.7271983906934185`*^9, 3.7271984300906367`*^9, 3.7271984705091195`*^9, 
   3.727198511805608*^9, 3.7271985459253235`*^9, 3.7271986080626707`*^9, 
   3.727198646408739*^9, 3.727198737700918*^9, 3.72719877412473*^9, 
   3.7271988334833927`*^9, 3.727198885998563*^9, 3.7271989195284424`*^9, 
   3.727198961462003*^9, {3.7271990103423243`*^9, 3.7271990395884094`*^9}, 
   3.727199073827176*^9, 3.727199114608611*^9, 3.727199159669422*^9, 
   3.727199212810911*^9, 3.727651741767661*^9, 3.727651806668408*^9, 
   3.72765186527976*^9, 3.727652100006935*^9, 3.7276522126637907`*^9, 
   3.7277124826242237`*^9, 3.7277125412294397`*^9, 3.7277126020631695`*^9, 
   3.7277126555079513`*^9, 3.727712705335312*^9, 3.7277127547400455`*^9, 
   3.727712849676608*^9, 3.7277129506502113`*^9, 3.727713123036628*^9, 
   3.7277131712829285`*^9, 3.7277132522698154`*^9, 3.7277133123724427`*^9, 
   3.7277133455916853`*^9, 3.7277133885144234`*^9, 3.727713526787998*^9, 
   3.727713841772884*^9, 3.7277138969928565`*^9, 3.7277141057256064`*^9, 
   3.7277141591863995`*^9, 3.727717667554964*^9, 3.727717825501704*^9, 
   3.7277178677700033`*^9, 3.727717911974599*^9, 3.7277180012313585`*^9, 
   3.7277180722549114`*^9},ExpressionUUID->"25e87f8d-2b49-4cff-8778-\
ddedc0f628ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.920732554491515`", ",", "1.5898936958511605`", ",", 
   "1.9207325544918568`", ",", "1.5898936958501835`", ",", 
   "1.8181962041139437`", ",", "1.4455323108392797`*^-7", ",", 
   "1.8181962041155912`", ",", "1.4454842260843663`*^-7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7271934364133043`*^9, 3.727193498429016*^9, 3.7271935382590895`*^9, 
   3.7271935700563283`*^9, 3.7271936044477863`*^9, 3.7271936523575163`*^9, 
   3.727193684080558*^9, 3.727193736873131*^9, 3.7271937706357746`*^9, 
   3.7271938432847843`*^9, 3.727193901619221*^9, 3.727193953605116*^9, 
   3.727193998326021*^9, 3.7271940418978357`*^9, 3.727194124606475*^9, 
   3.7271941889344068`*^9, 3.727194362430461*^9, 3.7271944415751934`*^9, 
   3.72719449226257*^9, 3.7271945360104575`*^9, 3.7271945897944045`*^9, 
   3.7271946574172106`*^9, 3.7271947030726557`*^9, 3.727194776479336*^9, 
   3.7271948151321974`*^9, 3.727194886105839*^9, 3.7271949842165136`*^9, 
   3.7271950578246393`*^9, 3.7271953109982686`*^9, 3.727195410011983*^9, 
   3.727195525249728*^9, 3.7271956015580435`*^9, 3.727195711118511*^9, 
   3.727195825536945*^9, 3.727195907560121*^9, 3.7271960920478396`*^9, 
   3.727196269905121*^9, 3.727196405569133*^9, 3.7271964523598766`*^9, 
   3.7271965410891905`*^9, 3.7271966117800694`*^9, 3.7271966582773366`*^9, 
   3.7271967423414197`*^9, 3.7271967806798663`*^9, 3.7271968319579153`*^9, 
   3.7271968747765617`*^9, 3.7271969279195127`*^9, 3.7271970164004436`*^9, 
   3.7271973358728943`*^9, 3.727197395234129*^9, 3.727197463019452*^9, 
   3.727197555411496*^9, 3.727197600252768*^9, 3.7271976516039033`*^9, 
   3.727197698513239*^9, 3.7271977450777903`*^9, 3.72719785091965*^9, 
   3.727197920715653*^9, 3.7271979633560133`*^9, 3.727198008763089*^9, 
   3.7271980547746005`*^9, 3.7271980989372144`*^9, 3.727198169921528*^9, 
   3.727198215838727*^9, 3.727198318404009*^9, 3.727198353224142*^9, 
   3.7271983906934185`*^9, 3.7271984300906367`*^9, 3.7271984705091195`*^9, 
   3.727198511805608*^9, 3.7271985459253235`*^9, 3.7271986080626707`*^9, 
   3.727198646408739*^9, 3.727198737700918*^9, 3.72719877412473*^9, 
   3.7271988334833927`*^9, 3.727198885998563*^9, 3.7271989195284424`*^9, 
   3.727198961462003*^9, {3.7271990103423243`*^9, 3.7271990395884094`*^9}, 
   3.727199073827176*^9, 3.727199114608611*^9, 3.727199159669422*^9, 
   3.727199212810911*^9, 3.727651741767661*^9, 3.727651806668408*^9, 
   3.72765186527976*^9, 3.727652100006935*^9, 3.7276522126637907`*^9, 
   3.7277124826242237`*^9, 3.7277125412294397`*^9, 3.7277126020631695`*^9, 
   3.7277126555079513`*^9, 3.727712705335312*^9, 3.7277127547400455`*^9, 
   3.727712849676608*^9, 3.7277129506502113`*^9, 3.727713123036628*^9, 
   3.7277131712829285`*^9, 3.7277132522698154`*^9, 3.7277133123724427`*^9, 
   3.7277133455916853`*^9, 3.7277133885144234`*^9, 3.727713526787998*^9, 
   3.727713841772884*^9, 3.7277138969928565`*^9, 3.7277141057256064`*^9, 
   3.7277141591863995`*^9, 3.727717667554964*^9, 3.727717825501704*^9, 
   3.7277178677700033`*^9, 3.727717911974599*^9, 3.7277180012313585`*^9, 
   3.7277180722629147`*^9},ExpressionUUID->"2cc0c3b4-8624-43d1-91de-\
58c2dbd9e4a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ph", "=", "7.0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7271940978957753`*^9, 3.7271941054664507`*^9}, {
   3.727194161603546*^9, 3.7271941700906143`*^9}, {3.7271944204964695`*^9, 
   3.7271944212231607`*^9}, {3.727194469008395*^9, 3.7271944695637655`*^9}, {
   3.727194510278202*^9, 3.727194512971233*^9}, {3.727194564920385*^9, 
   3.7271945658207*^9}, {3.727194631175946*^9, 3.7271946315511894`*^9}, {
   3.7271946780370827`*^9, 3.7271946810604267`*^9}, {3.7271950339504004`*^9, 
   3.727195038966445*^9}, {3.7271953881061935`*^9, 3.727195390544958*^9}, {
   3.727195504726202*^9, 3.7271955052955847`*^9}, {3.727195578341509*^9, 
   3.7271955792541437`*^9}, {3.7271956891853795`*^9, 
   3.7271956897131243`*^9}, {3.7271958840353937`*^9, 3.727195887185787*^9}, {
   3.7271960658090277`*^9, 3.727196068900523*^9}, {3.7271962280974383`*^9, 
   3.7271962326671743`*^9}, {3.7271963643585343`*^9, 3.727196383679453*^9}, {
   3.7271964280272937`*^9, 3.727196429607976*^9}, {3.7271965200311747`*^9, 
   3.7271965206693325`*^9}, {3.7271965852123103`*^9, 3.727196588559026*^9}, {
   3.7271966387456827`*^9, 3.727196639355096*^9}, {3.727196713996437*^9, 
   3.7271967222666173`*^9}, {3.727196760590948*^9, 3.727196761018715*^9}, {
   3.727196807774762*^9, 3.7271968106068106`*^9}, {3.727196853263685*^9, 
   3.7271968538753843`*^9}, {3.727196905355213*^9, 3.727196909307206*^9}, 
   3.727196987591838*^9, {3.7271973145632997`*^9, 3.7271973175029364`*^9}, {
   3.7271973665426226`*^9, 3.727197369284901*^9}, {3.7271974399207745`*^9, 
   3.7271974431996202`*^9}, {3.727197535401792*^9, 3.727197535907015*^9}, {
   3.7271975690155673`*^9, 3.727197577419071*^9}, {3.7271976245110035`*^9, 
   3.7271976301271477`*^9}, {3.7271976728346863`*^9, 
   3.7271976753763494`*^9}, {3.7271977210918627`*^9, 3.72719772476671*^9}, {
   3.7271978302457495`*^9, 3.7271978309250183`*^9}, {3.7271979009678764`*^9, 
   3.727197901720372*^9}, {3.727197943667353*^9, 3.7271979443861356`*^9}, {
   3.72719798360797*^9, 3.7271979898786163`*^9}, {3.7271980313468266`*^9, 
   3.7271980351171885`*^9}, {3.727198075496128*^9, 3.7271980791359787`*^9}, {
   3.7271981498271484`*^9, 3.727198150405305*^9}, {3.7271981944139667`*^9, 
   3.7271981952635345`*^9}, 3.7271983349792614`*^9, {3.727198371529791*^9, 
   3.7271983722385626`*^9}, {3.7271984119674034`*^9, 3.727198412733065*^9}, {
   3.7271984531073885`*^9, 3.7271984534199047`*^9}, {3.72719849036539*^9, 
   3.727198494357015*^9}, {3.7271985272011743`*^9, 3.7271985278773966`*^9}, {
   3.727198585982636*^9, 3.7271985866053143`*^9}, {3.7271986295256577`*^9, 
   3.7271986299830823`*^9}, {3.72719875016877*^9, 3.727198755295738*^9}, {
   3.727198853902027*^9, 3.7271988666692095`*^9}, {3.727198897587399*^9, 
   3.7271989002186046`*^9}, {3.727198939057786*^9, 3.7271989408171625`*^9}, {
   3.72719898732648*^9, 3.72719904730832*^9}, {3.727199130453803*^9, 
   3.7271991405722866`*^9}, {3.727199189324813*^9, 
   3.7271991949364223`*^9}},ExpressionUUID->"11ab9fe1-49a8-4a0a-b838-\
5cc07ce132d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{"p\[Theta]", ",", "p\[Phi]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7271952162114925`*^9, 
  3.727195246522999*^9}},ExpressionUUID->"80e9f015-8ee6-449f-9b2e-\
98a49c92226d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.0011472438834037`", ",", "0.7853981633974483`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.727195236556715*^9, 
  3.7271952470900807`*^9}},ExpressionUUID->"29ae422c-7031-49cf-8b22-\
46cced4ee50c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{
     "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
      ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_", ",", "qa_", ",", "qb_", 
      ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", 
      "\[Theta]4_", ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kz"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hz", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hx", " ", 
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
       RowBox[{"2", " ", "hy", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"(", 
           RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKxy", "=", 
     RowBox[{"-", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pKz", "=", 
     RowBox[{"\[Minus]", "6.8"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]xy", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[CapitalGamma]z", "=", "9.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pJ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"phx", ",", "phy", ",", "phz"}], "}"}], "=", 
     RowBox[{"1", "*", "hv5"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Theta]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Phi]", "=", 
     RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{
     "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
      ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
     "]"}], ":=", 
    RowBox[{"HH", "[", 
     RowBox[{
     "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
      ",", "pJ", ",", "phx", ",", "phy", ",", "phz", ",", "0", ",", "0", ",", 
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
      "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "=", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ff", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"\[Phi]", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "1", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "2", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "3", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Theta]", "[", "4", "]"}], "<", "Pi"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "1", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "2", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "3", "]"}], "<", 
           RowBox[{"2", "Pi"}]}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{"\[Phi]", "[", "4", "]"}], "<", 
           RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "1", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "2", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "3", "]"}], ",", 
           RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "4", "]"}], ",", 
           RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pp\[Theta]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"pp\[Phi]", "[", "i", "]"}], "=", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "i", "]"}], "/.", 
         RowBox[{"b", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MH", "[", 
     RowBox[{
     "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", 
      ",", "\[CapitalGamma]z_", ",", "J_", ",", "hx_", ",", "hy_", ",", "hz_",
       ",", "\[Theta]1_", ",", "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_",
       ",", "\[Theta]3_", ",", "\[Phi]3_", ",", "\[Theta]4_", ",", 
      "\[Phi]4_"}], "]"}], ":=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
        {"0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
         "0"},
        {
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], "0",
          "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}]}], 
         "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]},
        {"0", "0", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
         "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], "0"},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "0", "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hz"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{"2", " ", "J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "hx", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"2", " ", "hy", " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"MMH", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"MH", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "phx", ",", "phy", ",", "phz", 
      ",", 
      RowBox[{"pp\[Theta]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "1", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "2", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "3", "]"}], ",", 
      RowBox[{"pp\[Theta]", "[", "4", "]"}], ",", 
      RowBox[{"pp\[Phi]", "[", "4", "]"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"SRM", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"MMH", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"FH", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{
      RowBox[{"SRM", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], ".", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      RowBox[{"SRM", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EEM", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"FH", "[", 
       RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", "\n", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEM", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEM", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], 
            ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEM", "[", 
           RowBox[{
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEM", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}], "+", 
             RowBox[{"2", "Pi"}]}], ",", 
            RowBox[{
             RowBox[{"2", "Pi"}], "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                   RowBox[{"2", 
                    RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], 
               "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
              RowBox[{"2", 
               RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEM", "[", 
           RowBox[{
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}], ",", 
            RowBox[{"Pi", "+", 
             RowBox[{"3", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "3"}]}], "+", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
                ")"}], "/", "2"}]}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"Pi", "/", "3"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", 
              RowBox[{"4", 
               RowBox[{"Pi", "/", 
                RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "+", 
        RowBox[{"4", 
         RowBox[{"Pi", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.05", ",", "0.08"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
            "0.08"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<Y\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<M\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"4", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.05"}], ",", 
            "0.08"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<X\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", 
              RowBox[{"Pi", "/", "3"}]}], "+", 
             RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.08"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "the", " ", "chern", " ", "numberp", "\n", "1.", 
      "eigenvector", " ", "of", " ", "fermion", " ", "hamiltonian", "\n", 
      RowBox[{
      "2.", " ", "Phases", " ", "difference", " ", "of", " ", "two", " ", 
       "given", " ", "vectors"}]}], ",", 
     RowBox[{"and", " ", "the", " ", "order", " ", 
      RowBox[{"matters", ".", "\n", "3."}], " ", "The", " ", "field", " ", 
      "strength", " ", "per", " ", "plaquette", "\n", 
      RowBox[{
      "4.", " ", "the", " ", "chern", " ", "number", " ", "for", " ", "given",
        " ", "discrete", " ", "number", " ", "DN"}]}], ",", 
     RowBox[{
     "nthband", " ", "is", " ", "the", " ", "band", " ", "with", " ", "nth", 
      " ", "large", " ", "eigenvalues"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"nthband", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DN", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vec", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eve", ",", "eva", ",", "p"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eva", ",", "eve"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"FH", "[", 
          RowBox[{"qa", ",", "qb"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "                                     ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "p", "}"}], "}"}], "=", 
        RowBox[{"Position", "[", 
         RowBox[{"eva", ",", 
          RowBox[{
           RowBox[{"Sort", "[", "eva", "]"}], "[", 
           RowBox[{"[", "nthband", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "                                      ", 
       RowBox[{"eve", "[", 
        RowBox[{"[", "p", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pd", "[", 
     RowBox[{"v1_", ",", "v2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", "v1", "]"}], ".", "v2"}], ")"}], "/", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Conjugate", "[", "v1", "]"}], ".", "v2"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fs", "[", 
     RowBox[{"qa_", ",", "qb_", ",", "dk_"}], "]"}], ":=", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"pd", "[", 
         RowBox[{
          RowBox[{"vec", "[", 
           RowBox[{"qa", ",", "qb"}], "]"}], ",", 
          RowBox[{"vec", "[", 
           RowBox[{
            RowBox[{"qa", "+", "dk"}], ",", "qb"}], "]"}]}], "]"}], "*", 
        RowBox[{"pd", "[", 
         RowBox[{
          RowBox[{"vec", "[", 
           RowBox[{
            RowBox[{"qa", "+", "dk"}], ",", "qb"}], "]"}], ",", 
          RowBox[{"vec", "[", 
           RowBox[{
            RowBox[{"qa", "+", "dk"}], ",", 
            RowBox[{"qb", "+", "dk"}]}], "]"}]}], "]"}], "*", 
        RowBox[{"pd", "[", 
         RowBox[{
          RowBox[{"vec", "[", 
           RowBox[{
            RowBox[{"qa", "+", "dk"}], ",", 
            RowBox[{"qb", "+", "dk"}]}], "]"}], ",", 
          RowBox[{"vec", "[", 
           RowBox[{"qa", ",", 
            RowBox[{"qb", "+", "dk"}]}], "]"}]}], "]"}], "*", 
        RowBox[{"pd", "[", 
         RowBox[{
          RowBox[{"vec", "[", 
           RowBox[{"qa", ",", 
            RowBox[{"qb", "+", "dk"}]}], "]"}], ",", 
          RowBox[{"vec", "[", 
           RowBox[{"qa", ",", "qb"}], "]"}]}], "]"}]}], "]"}], "/", "I"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CN", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dk", "=", 
     RowBox[{"2", "*", 
      RowBox[{"Pi", "/", "DN"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ",", 
     RowBox[{"i", "<", "DN"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "0"}], ",", 
       RowBox[{"j", "<", "DN"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CN", "=", 
         RowBox[{"CN", "+", 
          RowBox[{"fs", "[", 
           RowBox[{
            RowBox[{"2", "*", "Pi", "*", 
             RowBox[{"i", "/", "DN"}]}], ",", 
            RowBox[{"2", "*", "Pi", "*", 
             RowBox[{"j", "/", "DN"}]}], ",", "dk"}], "]"}]}]}], ";"}]}], 
      "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"CN", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], "\n", "\[IndentingNewLine]", 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.7271994630904026`*^9, 3.7271994648573027`*^9}, {
   3.7271995235265007`*^9, 3.7271995520065775`*^9}, 3.727199623230193*^9, {
   3.727199711287135*^9, 3.727199723413256*^9}, {3.72719983626322*^9, 
   3.7271998369898987`*^9}, {3.727200173334917*^9, 3.72720017817025*^9}, {
   3.727208378493712*^9, 3.7272083800719185`*^9}, {3.727208446441948*^9, 
   3.7272084470535746`*^9}, {3.7272085353294663`*^9, 
   3.7272085359701223`*^9}, {3.72720867266162*^9, 3.7272086764619026`*^9}, {
   3.7272087844860554`*^9, 3.727208784673565*^9}, {3.7272095961123667`*^9, 
   3.727209607009637*^9}, {3.7272096534133267`*^9, 3.727209654226056*^9}, {
   3.727210071838789*^9, 3.727210107252804*^9}, {3.7276523336945543`*^9, 
   3.72765234137122*^9}},ExpressionUUID->"6822683a-de43-4c54-b72c-\
00bca64f0211"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
oTMx4UaYe3XTYPi+RSJflonAW6uSV9XRsHN1Ef2fIhNDDZo+IcU0PDbxld+u
ysSY4949i6/QYK/VpGq8iIk1f47Mi1pFQ8DdZ+qHDEmfv5pe8WQhDXeVYzXT
ljNx6yhjh6UKDcOyqxfIrWTC8w9iS6aouMqfbTSwiQkf3aFI+QIqioMiTbSc
mLh6deufmkwq/oy5m+10YUJ6SYWDwHUqjPoUV1V5MHGs3W266hQVrvuGLIX2
MZG1YdvgvsNURLZXrTE5yISyi7fPaU8qvn0L2ZDhx4T/z20qnHVUCGzZbt98
gom78s5VmeZU6HxetlmBvIcPvq4Yf2pIRdC7XufQMCZilvQ4mXGpuGfxbnvR
eSZWfdv+ulSRiqqXt12HyHv85kmc2DspKpRzt+zelcBES1eW2cY5CvZ8SB4b
Smai2Mc602SMgsetzRFht5hYkLM9r/gfBZMTGgylVPL3ReE13zopWCl94MGD
DCZMmjY5xrZSEKX1eIXZIyZeqlOTfn2noJ4Yqap5ykR31tHGigYKVByX73R/
zsT6CwUWtl8o2Ot9qn+kkIln33Um9lVT8CS0/ExECfnu1amKcz+S812nzmO+
Ies5/iPwaCU5X+76ew8rmTh+ycdo1ztyvg+Xl+ITExUHUlQ731DwtbXxbW0t
+U41fxOhklp5ku3k2cDEtoWL08rKyfmk3bvGmpi4uXD9EwXy+xOt9IDzzUxs
MDxQJvSWnI/4K8b+zYST8Z4D58n4qxwX3cgm3+FQ9Xe8dHL+aO9jehZ9TIyo
v3PbTuZXH1r0qo58t+/99Q7KIPNXucG/cQ/5ri8vyyy58P/15Vq2TpDv/qTu
Pi/BRnK+DxeORPGxkM16mSX1g5yvtUZIhewjv7YL3cwm67dyUu7qEyoLNxVk
NraS9Y2S3qa5iuxT6+dvf32frH+91q38erLvXdVZ9GtqlJwPv9fsI/v80ded
55tnyfkc5zdNkdzQpMy6ukmUiqfePl4xJIf4bOko20SnYtWNiZgcbRYyihNs
R9WoiM4141jqsaD7wfNPvB4V9R/OPmkkOWkmVFnjpTEV+yYl6mZMSO4aa/S7
vpGMJ73JM5bkrjMnxXZu3EHFtFbiKJfktDPrlBLDD1AR48hVsl7PgmM2XcU3
nIoG7z2Z3+xZqKxyauVcpYITlmVykOTAhOR3zTapZLxcwx1xriwMjc/MCr8h
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
Q10zRIp9bt5HOx5WnEnNrpefJRbYJN9nbyLj+9TmdejNEkXmIVe9N5P7yd0e
Jmo9S3wzsPOnO/Mg9jTs8qGTs8Q+rWW7d7nwUJKbwcq5NkuMqyhvebqD/P7g
ishU3iwhL9W71MGdB3NLuegY8j5s+hs+kuDFg4mTuNfewDmitd37d6c3D9/s
V6YF3JwjDn/f/NXYlwdO2Vr1Y+VzROwHtWdNfjwsuYamixQ+fMx4dVTlFA8x
5zZO7XTmw7bb9z0OneFh2ZF7Zd98+NCdGO3w+iwPshN5KwtC+UCN2LbEPYKH
pMIHmilP+WC5e2zo/iUeVrnessml8+MVV/+I3j0e9K+W7b/YxI/DATFXjt7n
IaTUqSJyhB+82r/PCtJ5GP493/6plABizmSNWz7kYb9xGt/xVQLY0awdvDOP
h8GhiB8K2QKQMYq8mZrPw+NfAtHvKgXw9mJnSU8BDy4GNvs92gWgR6QJHn/F
w1edjZa6SoKYvaEeGVtBkvXG3q7qYEHynpzNrH/PA9c1Rf3DVUHsXtf2gVVF
/j66Zbj7oSAYqRZ/3arJ8zfg+3quTBCfpm9LZnzm4aZL7fHaRkGEOPAb/PvC
wxwv1US9VxCGWa4bl9aT42cOPXw0I4huwZLDgY08WKXx7DUkhJCyTeXK6288
nMtl7TZiCME+J/iZ6A8eaGl2J6+pC0FE7Gf9ul9kfiHRX/l1hVDgZjp+uYUH
91T7e8YGQvAuuK70rY0Hh3iBMeWFQuDKTC/ndPAw++eJa6aeEOr3bXPZ3clD
VT1Hol9LCOdfF5zM6uYBQ5nNLI4QTJUYNwd7ebB2r4o6JCuE/kMnSoz+kflz
4i0NRYRwr6KxJXiAh3l9Dh9ejgjCiWMk+GaIBz7RR1Wb2wQhfjxBXWyUh4im
5/rW1YIoqR5dvXGcPD9/nTobXgjiqOaWPQmT5PcFfQa4K4jv9bKZanM8KAiI
Ouw6IohYvaMf9vFrwsb3rbeXsyBWhX3pzRbUBLHz3KJRCCJraZz+CoomlPpH
W/+JCyLoitQzB2lN7Ge9vX/nDtmPer3rk+ZpQotxJL03XADtKz+NNctpYqtm
/mezgwKwHYpafpBBxutMCWcbCYBlTysJVdNElfGugZBqfhRKCX/IW6qJeMeH
cjpUfqTYzdZ+XaaJqc/WdNMhPpy+9L8Szj2ayqyP4yepE0kcuZ3ndGGwz3mO
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
ulLILxULkrk69kVsR6aeFAUb///f2H8BidP5jw==
       "]], LineBox[CompressedData["
1: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
DLWvDexnTWlIqc/VMsbJ/39/8n/L0Edd
       "]], LineBox[CompressedData["
1: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
pP3/fYj/A7eJDbM=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$77153#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    TagBox[
     InsetBox["X", {0.05, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.499592559330068, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.493987661723263`, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["X", {10.321975511965977`, 0.08}], "InsetString"]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {7.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {12.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 16}}, {{
     0, 13.53838276411646}, {0, 16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271996704524465`*^9, 3.7271997596346936`*^9, 
  3.7271998654310384`*^9, 3.7272002078282905`*^9, 3.7272084049221067`*^9, 
  3.7272084709455605`*^9, 3.7272085600506725`*^9, 3.7272087017141523`*^9, 
  3.727208807635062*^9, 3.7272096307043943`*^9, 3.7272096793801546`*^9, 
  3.727210130299398*^9, 3.727314728791687*^9, 3.727652281081789*^9, 
  3.7276523661864147`*^9},ExpressionUUID->"90a89bce-bab0-4d19-8c7a-\
21777d3bfe40"],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{3.7271996704524465`*^9, 3.7271997596346936`*^9, 
  3.7271998654310384`*^9, 3.7272002078282905`*^9, 3.7272084049221067`*^9, 
  3.7272084709455605`*^9, 3.7272085600506725`*^9, 3.7272087017141523`*^9, 
  3.727208807635062*^9, 3.7272096307043943`*^9, 3.7272096793801546`*^9, 
  3.727210130299398*^9, 3.727314728791687*^9, 3.727652281081789*^9, 
  3.727652374610648*^9},ExpressionUUID->"1c84e804-3879-4c6f-8a13-\
eeaf5a490bcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the real space fermion Hamiltonian ", "Subsubsection",
 CellChangeTimes->{{3.7272332240280604`*^9, 
  3.7272332621093955`*^9}},ExpressionUUID->"cd9d0fb6-7f8f-43fc-bb8f-\
baf56f97ea97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMH", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"NN", "*", "NN"}], ")"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FH", "[", 
       RowBox[{"kx", ",", "ky"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "kx", " ", "i"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "ky", " ", "j"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"kx", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "-", 
        RowBox[{"2", 
         RowBox[{"Pi", "/", "NN"}]}]}], ",", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "NN"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ky", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "Pi"}], "-", 
        RowBox[{"2", 
         RowBox[{"Pi", "/", "NN"}]}]}], ",", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "NN"}]}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.727233276157096*^9, 3.7272333275819383`*^9}, {
  3.727233361981621*^9, 3.7272333768702087`*^9}, {3.7272334141158185`*^9, 
  3.727233547614112*^9}, {3.7272338222522783`*^9, 3.7272338423899612`*^9}, {
  3.7273201626833234`*^9, 
  3.727320163417736*^9}},ExpressionUUID->"f00adfd3-10e8-4b3b-8fc1-\
f7f5e62d910a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMH", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7272335601595964`*^9, 3.7272335717814293`*^9}, {
  3.727233852680016*^9, 3.7272338603286853`*^9}, {3.727234790474431*^9, 
  3.727234791506129*^9}, {3.7272348288452945`*^9, 3.727234830205249*^9}, {
  3.7272354535773325`*^9, 3.7272354539210978`*^9}, {3.7272355497907844`*^9, 
  3.727235561492655*^9}},ExpressionUUID->"ea4f0a9d-f555-4e91-aeb0-\
7252f3b4f6f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.773959005888173`*^-19"}], "+", 
  RowBox[{"7.801901786489303`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7272355857260723`*^9, 
  3.7273147838991327`*^9},ExpressionUUID->"4585dfb5-7c33-4e34-926a-\
4c070a095974"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FMH", "[", 
        RowBox[{"n", ",", "n"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7272355017784586`*^9, 3.7272355421800337`*^9}, {
  3.727235602541346*^9, 3.72723561515897*^9}, {3.727235921182657*^9, 
  3.7272359327476816`*^9}, {3.7272362716104136`*^9, 3.7272362746661143`*^9}, {
  3.7273147980859537`*^9, 3.727314804807974*^9}, {3.727318720056592*^9, 
  3.727318721426689*^9}, {3.7273201799174614`*^9, 
  3.727320181949501*^9}},ExpressionUUID->"0daced59-bfe3-485d-9921-\
96c602ab9cf1"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., -2.7020650595180085`}, {1., 0}}, {{
         2., -5.706114719619143}, {2., 0}}, {{3., -7.883323256995074}, {
         3., 0}}, {{4., -9.917763142926306}, {4., 0}}, {{
         5., -12.134009883176127`}, {5., 0}}, {{6., -17.47131662813801}, {
         6., 0}}, {{7., -14.96092219326712}, {7., 0}}, {{
         8., -15.672183345864742`}, {8., 0}}, {{9., -16.654077604110096`}, {
         9., 0}}, {{10., -17.749760623938123`}, {10., 0}}, {{
         11., -18.91404852657559}, {11., 0}}, {{12., -20.13059790326815}, {
         12., 0}}, {{13., -21.395018513895476`}, {13., 0}}, {{
         14., -22.710684809843144`}, {14., 0}}, {{15., -24.08964474358373}, {
         15., 0}}, {{16., -25.559794978708403`}, {16., 0}}, {{
         17., -27.19226019779818}, {17., 0}}, {{18., -29.265796453136964`}, {
         18., 0}}, {{19., -31.28922820148228}, {19., 0}}, {{
         20., -31.049383276614687`}, {20., 0}}, {{
         21., -31.708174735716195`}, {21., 0}}, {{22., -32.59271053181432}, {
         22., 0}}, {{23., -33.59362285030865}, {23., 0}}, {{
         24., -34.61734241107552}, {24., 0}}, {{25., -35.78581615290636}, {
         25., 0}}, {{26., -37.80391365739098}, {26., 0}}, {{
         27., -38.07396509878937}, {27., 0}}, {{28., -37.765009531513655`}, {
         28., 0}}, {{29., -38.21257852613639}, {29., 0}}, {{
         30., -38.42597911468246}, {30., 0}}, {{31., -37.2103578300998}, {
         31., 0}}, {{32., -38.64472405084063}, {32., 0}}, {{
         33., -38.494729130266556`}, {33., 0}}, {{34., -37.25292293049296}, {
         34., 0}}, {{35., -38.17812125172619}, {35., 0}}, {{
         36., -36.810231828409314`}, {36., 0}}, {{37., -37.08133122959242}, {
         37., 0}}, {{38., -36.650205928492404`}, {38., 0}}, {{
         39., -37.621621337325124`}, {39., 0}}, {{40., -36.47857699027514}, {
         40., 0}}, {{41., -36.970489720424595`}, {41., 0}}, {{
         42., -36.59144548717128}, {42., 0}}, {{43., -37.69650086697319}, {
         43., 0}}, {{44., -38.143249847629065`}, {44., 0}}, {{
         45., -38.7190304626231}, {45., 0}}, {{46., -37.482415469558994`}, {
         46., 0}}, {{47., -38.30278449106482}, {47., 0}}, {{
         48., -38.91827181074669}, {48., 0}}, {{49., -36.88807800899374}, {
         49., 0}}, {{50., -37.52945158354777}, {50., 0}}, {{
         51., -36.820820480868996`}, {51., 0}}, {{52., -36.89940999038471}, {
         52., 0}}, {{53., -37.573577254052125`}, {53., 0}}, {{
         54., -37.438918769612144`}, {54., 0}}, {{55., -37.14898660717549}, {
         55., 0}}, {{56., -38.91741592153436}, {56., 0}}, {{
         57., -38.60290380665329}, {57., 0}}, {{58., -36.482440454230534`}, {
         58., 0}}, {{59., -39.83257410956206}, {59., 0}}, {{
         60., -37.637696895520314`}, {60., 0}}, {{61., -38.9816215580694}, {
         61., 0}}, {{62., -36.89430455150787}, {62., 0}}, {{
         63., -37.03709500004099}, {63., 0}}, {{64., -36.91662102110938}, {
         64., 0}}, {{65., -38.539267446478256`}, {65., 0}}, {{
         66., -37.02125939616059}, {66., 0}}, {{67., -37.33700725013567}, {
         67., 0}}, {{68., -40.21697456354479}, {68., 0}}, {{
         69., -38.13728201484137}, {69., 0}}, {{70., -37.17424461046851}, {
         70., 0}}, {{71., -41.56470431410114}, {71., 0}}, {{
         72., -36.87669290187802}, {72., 0}}, {{73., -36.33556675821745}, {
         73., 0}}, {{74., -37.741847198628896`}, {74., 0}}, {{
         75., -37.28947564799515}, {75., 0}}, {{76., -37.43830086801958}, {
         76., 0}}, {{77., -37.87234958281586}, {77., 0}}, {{
         78., -39.370964417126174`}, {78., 0}}, {{79., -37.59246284777908}, {
         79., 0}}, {{80., -36.77564762789642}, {80., 0}}, {{
         81., -41.36808920227511}, {81., 0}}, {{82., -38.77933045709202}, {
         82., 0}}, {{83., -36.89327108286981}, {83., 0}}, {{
         84., -38.91334324084754}, {84., 0}}, {{85., -37.395505957739765`}, {
         85., 0}}, {{86., -36.54412447323181}, {86., 0}}, {{
         87., -38.0853337616306}, {87., 0}}, {{88., -36.794849757301044`}, {
         88., 0}}, {{89., -37.21829921121316}, {89., 0}}, {{
         90., -36.474340384283636`}, {90., 0}}, {{91., -36.6559945124444}, {
         91., 0}}, {{92., -36.87367817723225}, {92., 0}}, {{
         93., -36.89785866243253}, {93., 0}}, {{94., -39.87393795677592}, {
         94., 0}}, {{95., -38.90128262090389}, {95., 0}}, {{
         96., -40.40380752538046}, {96., 0}}, {{97., -39.19136766510333}, {
         97., 0}}, {{98., -36.6266899106544}, {98., 0}}, {{
         99., -36.79138344332011}, {99., 0}}, {{100., -40.32631358867733}, {
         100., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0., 2.0543675227572584`}, {0., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJw9kwkwnGccxpepFI0R0ahcQ6pFRBM21rWsB+s+du2utS2lIWrC1BGkSR0R
zVGaqaOTDkmUtIv0SBd1RNliUEVazbFaaSXTDkZK7DoiPSa0nb5/38w33/zm
9z7v/5n3nW9PYoYkWZ/D4ST/+/73pefnxkPeigwO/iedz+uvcEPu1Bj0Mg27
FVW36W0LxobgxUmmzrxjxXgLslR/bJ7W2DB+Frsc3l68LLRnbIm5B/ddrh53
ZrwL6Q6H157MvcTYGpKx+FR7xQHGz2OuRXAlq9GJ8Qt4T6kV6Xoob4vE6vJt
6w+4jO1x8hh/Mn2PC2MH3C9cWLBK5jF2hNi4PFPb5sp4P0TLHo+WLNwZO6H4
qcDOyDIPxs6omZxcdXPmM+aiveaU1zNCb8YHUXxU/xfjUB/GLjj39Mwh5WZi
Huz6TulC24hdUWkm0k2GgbEblnYf1vw9SuyOFE6BuYHIl7EHEr78tPbCFLEn
rjaUKGdm/Bjz4efo3vSmkT9jL8QXmGvmfiXvDY/R+UHeTvICnN83lnfWldgH
/PjX9B5epPWAaaMs6qyE+SJgNEMdLPWh9b6wzIwaSqhj64t8kZcVe+2GBXk/
WFdzr7WlkPeDZe13pkdKaX9/vBjQuOQhJe8PiV1nSMUYeSGG5gf0/bzJC7G6
V6PnkU8+APxERX5rGPkAvKv8Wmc7QT4QDXE39eVbqX8grkw3ORnFUb8gVKQJ
R3rUlA+CXnqKss+WfDBy1n0XSnIpH4ykY6Gln2fR/iGoMh8xG+ynfAjML6N+
yxHyoVji/jhplU0+FFsX1X+lDpMPw0+lRQX7r5MPg+MXgjWz98mHY2G25Lc3
NuaH4+6OluV9EdQvAnpVdy/1bpxPBOINx4crficfidriIJO6m+Qjkf1Wzjf1
BeRFWGkWVx4/Sl6Edv3Ucz2nab4Y44L0cWkuY4jxiOfWsSmA+ohhWKuuu17M
fK8YhfPtJjafUT4KZYKyW4M7hSwfhQgj/dxKM8pHoaOrqz7iA8pHQZ1vzQ/+
lq3nSDC8/bkTbpk0X4KqbWsTyw7UV4L+eMXEyj3KSyAr7y4xqaf5Usz/6SDY
QecLKUYymmw/0VJeiqYB8/48FevTK4Vz44VbmlHKy1B4ejotOInyMthMbTq/
W8X6FckQvda6vS+J8jK0NS+3yuk8OdEQdKWmz+Ywj2gMLWTqaltofjS06tl7
9QHUPxqxnSfc5o3pfuToSDP8WJ1M8+Wozi72XLxEeTluaEoPdHhRXg5tww91
j+l/4sSgyL1HdSeD8jF4Mhxr+HDjvmOwWqrlTmqpfwz2fHjR89Vsmq/AR81G
j1UH6f4U+Kpc2l1YRfenAO/keoKbmOYroL2dZxJOfTkvw+D7IeXAXmHvP4I6
6Us=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 100}, {-41.56470431410114, -10.076294784515522`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.727235429090294*^9, 3.727235477333844*^9, 
  3.7272358894249935`*^9, 3.727236211931086*^9, 3.727237003710004*^9, 
  3.727315525711212*^9, 3.7273194571482024`*^9, 
  3.7273294950920153`*^9},ExpressionUUID->"fdd45814-37fd-4d70-b16a-\
0296db0e9db0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FH", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7272351635290475`*^9, 
  3.7272352355661864`*^9}},ExpressionUUID->"d096cc54-7a5a-4847-9f6b-\
0e00107eec3a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.758021233952636`*^-16", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"9.16807889409799`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"7.969319648637452`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.33775846355073896`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03129052312330047`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.334385079269258`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05031918169917595`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.5978752658739745`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"9.16807889409799`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.2819606487468604`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3377584635507445`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"8.148429847532057`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.3711537493230355`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04113731563326187`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.4224860613833448`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05266565519571824`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.1373694141451202`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.3377584635507429`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.61632859874139`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"9.168078894098016`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05031918169919605`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.597875265873961`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.031290523123301765`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.334385079269257`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.33775846355073696`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.1006820455072841`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"9.168078894098016`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.3257624165152748`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.4224860613833314`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05266565519573933`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.37115374932304`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.041137315633273996`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03129052312330073`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.371153749323036`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05031918169919615`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.4224860613833348`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"9.43689570931383`*^-16", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"10.349076098385837`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.85570178615302`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.23381186447306868`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.334385079269258`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04113731563326173`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5978752658739648`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.052665655195739944`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"10.349076098385835`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"6.661338147750939`*^-16", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.23381186447306748`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.11972669919669`*^-14", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05031918169917663`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.4224860613833432`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0312905231233029`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.3711537493230428`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"3.0531133177191805`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2338118644730669`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.2707530300536405`*^-15", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"10.349076098385833`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5978752658739719`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05266565519571794`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.33438507926926`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.041137315633274656`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.23381186447306834`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"3.197594099224599`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"10.349076098385833`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.1840168562548`*^-15", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.727233602238225*^9, 3.7272338839647675`*^9, 3.7272348165514193`*^9, 
   3.727234854146822*^9, 3.7272351747043333`*^9, {3.727235207162964*^9, 
   3.727235236371725*^9}},ExpressionUUID->"9b81d053-3d93-4b84-a9be-\
b2d61369dccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"x", "*", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1", ",", "2", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727235277894043*^9, 
  3.727235319102839*^9}},ExpressionUUID->"caa46a7b-f53b-4fd0-baf7-\
d294b6aa961e"],

Cell[BoxData["20.25`"], "Output",
 CellChangeTimes->{{3.727235311178975*^9, 
  3.7272353204786158`*^9}},ExpressionUUID->"9d9fb0cc-bd2f-4089-bd01-\
91428753fffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.72723650244776*^9, 
  3.7272365234265575`*^9}},ExpressionUUID->"c3e09e85-e7cb-45b2-8ae2-\
6b7208ca4c7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727237003803751*^9},ExpressionUUID->"01a47864-9cec-461f-82bd-\
2157bda1683f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "a"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7272371304462557`*^9, 
  3.727237148192822*^9}},ExpressionUUID->"64a269fb-cba1-492d-8e7b-\
9a63ccbd2794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727237150475052*^9},ExpressionUUID->"983ae78e-f3aa-483f-8d46-\
cb69503e2bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"ArrayFlatten", "[", "b", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727237154863753*^9, 3.7272371743862605`*^9}, {
  3.7272372845458975`*^9, 
  3.7272372876405716`*^9}},ExpressionUUID->"fd791e08-18dd-4400-8229-\
98e9b4a924a9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "1", "2"},
     {"3", "4", "3", "4"},
     {"1", "2", "1", "2"},
     {"3", "4", "3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7272371748400574`*^9, 
  3.7272372907043285`*^9},ExpressionUUID->"acab8150-36d5-48a0-a9a7-\
13f49b95289e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.727237202443054*^9, 
  3.727237208101486*^9}},ExpressionUUID->"356a4c05-8f91-4ee9-9615-\
a63ef75d94e4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>2.2 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 95426, 2212, 5117, "Input",ExpressionUUID->"375d6f30-217e-4957-a3a1-1e99bf7db312"],
Cell[96008, 2236, 104361, 1754, 521, "Output",ExpressionUUID->"22bbf9ae-6c24-4924-aedc-a51919917aeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200406, 3995, 234, 4, 117, "Subsection",ExpressionUUID->"589fb51b-a04c-4661-8b11-50119974fed6"],
Cell[CellGroupData[{
Cell[200665, 4003, 91081, 2106, 3999, "Input",ExpressionUUID->"59c747c6-ffcd-407b-85ec-c9ee2364a265"],
Cell[291749, 6111, 104034, 1747, 521, "Output",ExpressionUUID->"def24e58-0820-458c-a822-2c91fa71a835"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[395832, 7864, 265, 5, 117, "Subsection",ExpressionUUID->"35fc2a22-b430-4851-9815-abc62eeb4e99"],
Cell[CellGroupData[{
Cell[396122, 7873, 91120, 2106, 3999, "Input",ExpressionUUID->"61f18043-83d7-44bb-9312-c652adca39f0"],
Cell[487245, 9981, 105640, 1772, 521, "Output",ExpressionUUID->"fae74092-0356-4a41-b22c-423281dfc2d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[592934, 11759, 236, 4, 117, "Subsection",ExpressionUUID->"f3fe23aa-64b0-4981-b6e9-63df74f50e37"],
Cell[CellGroupData[{
Cell[593195, 11767, 91135, 2107, 3999, "Input",ExpressionUUID->"afd030ab-b185-441a-8e0a-73ffc976ea86"],
Cell[684333, 13876, 104779, 1759, 521, "Output",ExpressionUUID->"5c520f8d-4ac9-4f79-b130-fc172b03e270"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789161, 15641, 179, 6, 175, "Subsection",ExpressionUUID->"42a3d2a2-d8a4-4a19-b6da-e4b761255442"],
Cell[789343, 15649, 181, 3, 74, "Text",ExpressionUUID->"267f51f9-096d-4e23-b13b-6b5cb57320eb"],
Cell[789527, 15654, 281, 7, 63, "Input",ExpressionUUID->"846d91b9-071c-4919-987b-814896f7531c"],
Cell[789811, 15663, 183, 3, 74, "Text",ExpressionUUID->"ef349711-ae2d-47bd-9366-cdc6a1d57254"],
Cell[789997, 15668, 315, 9, 63, "Input",ExpressionUUID->"e4d8e291-d7c8-46c3-980f-474910d43596"],
Cell[790315, 15679, 314, 7, 74, "Text",ExpressionUUID->"3417a4d6-b544-4a1f-adda-ced0bffe6dd4"],
Cell[790632, 15688, 254, 7, 63, "Input",ExpressionUUID->"4fbb4773-91b4-418f-a5b9-d594c37b710d"],
Cell[790889, 15697, 191, 6, 122, "Text",ExpressionUUID->"9e1ce536-68cf-4b41-b600-2075dbaf876d"],
Cell[791083, 15705, 358, 10, 107, "Input",ExpressionUUID->"e0c6c9eb-1c84-4874-bca9-580c9b634f82"],
Cell[791444, 15717, 196, 6, 122, "Text",ExpressionUUID->"86ba80c0-9443-487b-91ad-39c444ef54fd"],
Cell[791643, 15725, 337, 9, 91, "Input",ExpressionUUID->"734931c3-7519-4f41-bf4f-8649b633b9ac"],
Cell[CellGroupData[{
Cell[792005, 15738, 95820, 2204, 4285, "Input",ExpressionUUID->"5cb60137-7e8a-4472-908c-7b433ef5666c"],
Cell[887828, 17944, 86914, 1461, 549, "Output",ExpressionUUID->"c96d6bca-e0c8-4b30-bbf4-212bbefd01ea"],
Cell[974745, 19407, 58712, 974, 579, 42841, 720, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5f780018-5aa0-4b02-9032-1394b8ddf380"],
Cell[1033460, 20383, 61829, 1023, 579, 50241, 840, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f37f97fe-26a0-4c56-8c3b-6f4b72ab1631"],
Cell[1095292, 21408, 31861, 533, 579, "Output",ExpressionUUID->"25e87f8d-2b49-4cff-8778-ddedc0f628ba"],
Cell[1127156, 21943, 3185, 47, 154, "Output",ExpressionUUID->"2cc0c3b4-8624-43d1-91de-58c2dbd9e4a2"]
}, Open  ]],
Cell[1130356, 21993, 3045, 43, 63, "Input",ExpressionUUID->"11ab9fe1-49a8-4a0a-b838-5cc07ce132d0"],
Cell[CellGroupData[{
Cell[1133426, 22040, 243, 6, 63, "Input",ExpressionUUID->"80e9f015-8ee6-449f-9b2e-98a49c92226d"],
Cell[1133672, 22048, 240, 6, 71, "Output",ExpressionUUID->"29ae422c-7031-49cf-8b22-46cced4ee50c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133949, 22059, 87896, 2159, 5557, "Input",ExpressionUUID->"6822683a-de43-4c54-b72c-00bca64f0211"],
Cell[1221848, 24220, 110057, 1867, 1254, "Output",ExpressionUUID->"90a89bce-bab0-4d19-8c7a-21777d3bfe40"],
Cell[1331908, 26089, 488, 7, 290, "Output",ExpressionUUID->"1c84e804-3879-4c6f-8a13-eeaf5a490bcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332433, 26101, 200, 3, 211, "Subsubsection",ExpressionUUID->"cd9d0fb6-7f8f-43fc-bb8f-baf56f97ea97"],
Cell[1332636, 26106, 1438, 42, 424, "Input",ExpressionUUID->"f00adfd3-10e8-4b3b-8fc1-f7f5e62d910a"],
Cell[CellGroupData[{
Cell[1334099, 26152, 564, 12, 138, "Input",ExpressionUUID->"ea4f0a9d-f555-4e91-aeb0-7252f3b4f6f6"],
Cell[1334666, 26166, 270, 6, 156, "Output",ExpressionUUID->"4585dfb5-7c33-4e34-926a-4c070a095974"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334973, 26177, 821, 19, 138, "Input",ExpressionUUID->"0daced59-bfe3-485d-9921-96c602ab9cf1"],
Cell[1335797, 26198, 9218, 173, 1130, "Output",ExpressionUUID->"fdd45814-37fd-4d70-b16a-0296db0e9db0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1345052, 26376, 246, 6, 138, "Input",ExpressionUUID->"d096cc54-7a5a-4847-9f6b-0e00107eec3a"],
Cell[1345301, 26384, 8098, 156, 800, "Output",ExpressionUUID->"9b81d053-3d93-4b84-a9be-b2d61369dccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353436, 26545, 381, 10, 138, "Input",ExpressionUUID->"caa46a7b-f53b-4fd0-baf7-d294b6aa961e"],
Cell[1353820, 26557, 161, 3, 156, "Output",ExpressionUUID->"9d9fb0cc-bd2f-4089-bd01-91428753fffe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354018, 26565, 367, 11, 235, "Input",ExpressionUUID->"c3e09e85-e7cb-45b2-8ae2-6b7208ca4c7c"],
Cell[1354388, 26578, 273, 9, 156, "Output",ExpressionUUID->"01a47864-9cec-461f-82bd-2157bda1683f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354698, 26592, 326, 10, 138, "Input",ExpressionUUID->"64a269fb-cba1-492d-8e7b-9a63ccbd2794"],
Cell[1355027, 26604, 941, 33, 253, "Output",ExpressionUUID->"983ae78e-f3aa-483f-8d46-cb69503e2bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1356005, 26642, 283, 6, 138, "Input",ExpressionUUID->"fd791e08-18dd-4400-8229-98e9b4a924a9"],
Cell[1356291, 26650, 787, 22, 387, "Output",ExpressionUUID->"acab8150-36d5-48a0-a9a7-13f49b95289e"]
}, Open  ]],
Cell[1357093, 26675, 152, 3, 138, "Input",ExpressionUUID->"356a4c05-8f91-4ee9-9615-a63ef75d94e4"]
}, Open  ]]
}, Open  ]]
}
]
*)

