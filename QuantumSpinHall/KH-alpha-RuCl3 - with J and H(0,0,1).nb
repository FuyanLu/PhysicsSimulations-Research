(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    714810,      13484]
NotebookOptionsPosition[    711643,      13387]
NotebookOutlinePosition[    712022,      13403]
CellTagsIndexPosition[    711979,      13400]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.718468907989884*^9, 3.71846892002048*^9}}],

Cell[CellGroupData[{

Cell["\<\
The classical ground state of zigzag phase for alpha-RuCl3\
\>", "Section",
 CellChangeTimes->{{3.7184690463734055`*^9, 3.7184691134872336`*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pKxy", "=", 
   RowBox[{"-", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pKz", "=", 
   RowBox[{"\[Minus]", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]xy", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]z", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Theta]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}], " ", 
       RowBox[{"p\[CapitalGamma]xy", "/", 
        RowBox[{"(", 
         RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
      "]"}], "/", "2"}], "+", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Phi]", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pJ", "=", "2.17"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7184691584073267`*^9, 3.718469258030373*^9}, {
   3.7184695899519725`*^9, 3.718469618540905*^9}, {3.7184696528151197`*^9, 
   3.7184696730717106`*^9}, {3.7191546113337407`*^9, 
   3.7191546182649717`*^9}, {3.7191546762775073`*^9, 
   3.7191547193248825`*^9}, {3.719160719698928*^9, 3.7191607410597105`*^9}, {
   3.7191611031210318`*^9, 3.719161137950824*^9}, {3.7191644283817387`*^9, 
   3.7191644488077307`*^9}, {3.719165232406958*^9, 3.719165248924226*^9}, {
   3.7191668367508135`*^9, 3.719166851010581*^9}, {3.719238494026471*^9, 
   3.719238505979059*^9}, {3.7192388187457867`*^9, 3.71923882556927*^9}, 
   3.719240919754949*^9, {3.719249773649143*^9, 3.7192498108255973`*^9}, {
   3.7192509180108213`*^9, 3.7192509388796463`*^9}, {3.7201957889000826`*^9, 
   3.720195804047458*^9}, 3.720195835541623*^9, {3.7201958884707603`*^9, 
   3.720195894040225*^9}, {3.7201959324401255`*^9, 3.7201959349547577`*^9}, {
   3.720196149263216*^9, 3.720196151078658*^9}, {3.720196601779607*^9, 
   3.720196602620137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pKxy", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}], "-", 
   RowBox[{"pKz", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}], "+", 
   RowBox[{"p\[CapitalGamma]xy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ")"}]}], "-", 
   RowBox[{"p\[CapitalGamma]z", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7184691238978567`*^9, 3.718469156353512*^9}, {
   3.7184693153927474`*^9, 3.7184694834033313`*^9}, 3.7184696822956715`*^9, {
   3.719154627968582*^9, 3.719154642304252*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]1", "=", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Sqrt", "[", "2", "]"}], " ", 
        RowBox[{"p\[CapitalGamma]xy", "/", 
         RowBox[{"(", 
          RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
       "]"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         RowBox[{"p\[CapitalGamma]xy", "/", 
          RowBox[{"(", 
           RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
        "]"}], "/", "2"}], "+", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7184696971819024`*^9, 3.7184698150533776`*^9}, {
  3.719154647542511*^9, 3.7191546745578895`*^9}, {3.719154739847042*^9, 
  3.7191547523615503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]1", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]2", ",", 
         RowBox[{"Pi", "/", "4"}], ",", 
         RowBox[{"H0", "[", 
          RowBox[{"\[Theta]2", ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot", ",", "p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7184698200367126`*^9, 3.7184698622465916`*^9}, {
  3.718469922676993*^9, 3.718470028638232*^9}, {3.718470243415079*^9, 
  3.718470273416379*^9}, {3.718470373692477*^9, 3.718470382470674*^9}, {
  3.7184704335938005`*^9, 3.718470562412529*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
84lQI+a3sMd+odJHv6L7BymO9usdOzaydtBP2Ced1p8WOVuKw95u18Bi1n/w
gOfWTQ8zEe47wPW7fbnB4g/6iXa8S3WcWD9R3wC+7Jf/debnaF+8PrS4ThZ9
E9h+DRz1lp0T1xxdc9Oa9insXyt/2hb2UbMgHHWSt23tc/ermpMfYn8JLY0y
WsnHbfgJnbutDfjF9nesU+jDJffUZrC8DzjsL+qG3Y1q1KR5xH7klu3vsXyQ
Pq0X4AnLJtyY5KlFOHSLVeCz9rmHtKXrSILHv/3eMzhKqgOBe16/v/0Qr5+x
v4jjpSF34WhI+qQ8Q1rXwNfEPn5unWJJ+ybaOftljhfL15QUne8PSv5G9qVx
B3yZHkB8A36n6czWsDumFMeAtwnZ0WWUlinFbeBu9zwG3fiqTeeVqLc88Kxv
we6roH6COvaH4tMR7L1m1KNgv9p8vzWry6G+gTpzg+O0f+y9JPRfPA9/RLUu
1UGs/6hvwN5E1/EBez8I/UF9u2VZ3WjfK7rUH9iXDxvmxN5nR39gvyvQbUfX
IdJ7KbDvlePYR9NYnur2sO+jF72zyK2RvjsB+/Bkl9Wzwv6QfoB9YbXG3CbB
exaIk0uqFswKFZyf0ncebl7dys5PUS9Cncp9aWtT9r4b/A15t3Wfz+XMD9FP
tHPnYtJZjS4qdL8X7XyNEr9fhvlFO51r7ewWfNGl8wXEW7chvjWXnTPp/Atx
e1Sk+H1AtIO4HTr5ntI7een3MVCHT5u7q/jSNiU6j0AdPjRVO4W9D4X5hf29
iKv5wvdGgY/wnhLPzh/RPurbha0r7dj5EdpHve6Iyo8gdk6EfQf2+zfrtGbn
U1jviP9NB7KUWybbkj3u2zzeci2H3R+GPeLtojsb6lurSOv5qDO/f1C1mL13
Dz4R98KVup1k97LgJ8Cjz/9dw8534FeoGzvXBvVk929hj3iYtMziCLt3B7+F
Pj+edIj7NUx6fwbxrThwns9GwftEwDdPiDPst0j6vifa+bRQ/F4n5hfxc+4c
U2M2v6jTQm/bK3XyZOcy4B/4kmuezux+L9qH3o70F7+fi/YRV12+tunD/FCc
58hx0D/dJq9KUM+wpvWIeHLpTak7ez8IeRDslc/Y3Uu4ZZyCc3D4f+5s8bgQ
b+H/W0d6174VjIvyQSWnqex9K5xrYF3H/zg+OeOoLO2P0FcjjoX0Y3ku4j/w
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
Xh0ciR/Pu+YZn/e04nVsZvclV6V1gGOihgst7NW44K+dYn/z+ynWO861b8br
nm01PZfqSzi/rv5SWLOTk+Z30MObo6cUsPM18IPn2vgmhDJdQfpTUp9Z1017
hLAO2UUyrs1mOrZsfwSO+wMhTznFzvy+AD6b/+5nczxTgoMftNNvW+Eytu8Q
z5L6Rl65/cR2+Q7EG+Zr0KdV/dj+Bd4qPEse756pyb2cGb10sKZ0f0f/VQ/3
GLdkrDX5D+o5XNHm/52HYr3gfD+vae/CTX+0aF+Dnn8YMWOFFp9H0/mLRM+/
/bpWlXPTp/Hintsuye94Nse3SnCMC/yMr/ogz86d0U/wY/V0hnqbNtL+g5+N
YXXLqp2lOPpj83Nng6evNN9BnaeX+2MHowpLaR1PkndwJW+f6vH5PsaLfq5J
+ReqEC09FwNe9ndfMjsXaz6u7ZJxYR7Rn0l91qbrFloTjv7UNFQk/etrQfEE
PNd3d9+zur/0+ySoO7nf50Yrh0njDM4vYgpmx5W6ahJvyF+25XsPPG4jrZ+g
7mR/UWZ7io4J+T/a6bAvdiyLG+AH9xI3VPRMOSw4xwQ+Pi71ZRj7/kOz3820
l/xuZnO8aqcYBw/o5z3FxDEnN0jPcdDP9i3zc+ICPlEeh/OUWdd6LdeJlO4v
aD/61zrOid9nsZ8in9o1yv+AvLs88QD7xxuuL5jwzJR4AO5Sttab7S/A8dwO
2weprHWR1h9wr/Li48jJbJ+Cn+C5jidz0vyP6xA/sN8o+f3K5ni4BAcP9Ds7
zz/c7RCiSfbNf9eyOR4jwdEOzn2SUjsPf9Naj/QV2h9+8Hk025fBJ/B/itcS
Hfh9HLwBX+0xNLB7f2Xax4Eb7opvsUGgN4D3it+fyHQF6RNJfvpso5PIu0xa
j0K++XtP/9GtLxdQ/oj+dz/cKDrK+yF4Rj7bL0hlA6u3wE/AQ+R+H/PFFxVp
vMA9YnPy/grOAen7IXsXuDnz+zv8B+1Xj6ttMXS3dH0Bn/Tpn4bKlWqqsyGP
PjvdSK+3kSLtR3huhLXcAdUdWVRXxLnYtz+vx/L6lvwKed+YsIonQh3e/Hsd
wHGvrPFYV/nkLdI8Avdn8jeWWq/ZbUL7BeyT941VaiG4HwI8w3jJPR0rO+IB
uEzBjDs6a2yJB+CLW580WNShNeF47qFh0R3H20jfz8U9mV21jyewvA/9BC73
9FpPli+jHeBm9r/aszwU9riXkpOxdVNreWk9CvlC9eeNhRkvzWlcwD13vTDj
8xeKM9DDeYedjxdvkH7vEbr6M7cvcteLKtLn9D35j4OP2vPrEfMLXZpYllbB
8gWMF3pscH3PV51G6lL/gQeZii6UuErr1fSdK+v4JJZnYV3jHsJzye8Gon3o
nJ8Z07LYfR7adyT2h3cbxW+w7ETPhf2sGfss5fh5Rzt0j2J2nhm73wX/hH2A
zM+lF1ItqD+4b1Ak+Z0+PBd4uJfsinfajrQ/4tz/quT38jC/wJXjlROE952w
n7o2nTB+ZSf1H+BJawy7fOPnEbwBX136KYvxhvaxr7k9Xb+R3TtC3ECct1G/
cnrEynxR831Kfdf/vU8Br9Qz1x9gUpWMdYf4NrHkeQPH5y9oB/GqpeR37tBP
4NXxDq+3KErPJREfSp7PTmL3puCH9Duz+YGXHXj/gR8CP9Z0PmvYKF3iE3hy
RdnPe5aypNPgz8ndTePZ/YHm5xEJkvMItA88yeLP4d78eNE+/L/iyYE37N4U
6S6J/4zNPhvM7j0Chz94DeQqmM4ED8C/7BhQx+7pYX7B81pzjxsH+HUHvwXe
7UZOvnJMAekx8D/uyNT09nx/mu+n+J1o8Al8+o37qcaCe1zAjx9RdFgT8490
BfjkdlTe+snup+G8tdnv1gFXbYYjnuP8pf+C0o42gvM74O/P+7tfcblO5+A4
78h7MfDc1qfa0vgvOU/5jt+ha4Z/leAYF9p5d+/sihQ5bcJxzr5HpcidnSuh
P9BdZo0rbYXn6ag/r/eyPic89wc++9mF2pgi6Xmi+N5uoyh98qfv50tNqR3U
Nx4HaCTKjDah+Tonqc/ESepFmHecQ1Ufex3NzkOB0/2BdvJqmr+l90V7SJ47
/vbs83cvtiJ8uuS5JgZcgUu9GvUn96a3dhR7n88npmbFen3CcQ51cIzz+mc+
ulL9ILE/pf7IVr+HtD+w3zPvZnSInsB/JPYTxipVbRDgsB9+6MBy1g76+Uli
/3KoYRJ7LukEib1eYkOXlXw/6X6sZB6nf+o6h/kV8EbJvLcKu22uz88XxoXz
Dpn18Tfu8PwAhw5vEW1fxPH8ND9nKZWcs2C8OKc+kh19/WCRtN4F/7k5+WFt
q/7Xad/Ec+uyn+xn5w5UT5bgSW36u1wolerw1ZL+5JktsJAdLc1TlCXP7btf
cQobF/AUyXNbjFp9iPGAcY2x6b536EM9zmryOI7xCRz6vI3BwEQ274jzOE/f
tPJqzkor6byjHc7bZ1AwP4/A0Y7GivJcPX4eMb+wNzTxS9YX4LCXsZk0fCPf
DvrvJrE3Upm8SDi/ByX2X13+NAj9wU7Sz9Lv5X/YPRngXyTr8b3cGrsIPm6g
nzh/eZ/39YnSemm9Djq29zR1s7NvikT/VceGPfSSxZm0a8J8AfWu1dnut1uu
l+ZlOA9Nfj67+BjfPvYFnOull7rfYuehaB95VlWFtmGPBdL4DD7ldBZ2CP6n
+v/ssy0k+yz6b93snIjic7PfwwKu+R/45mbnR3RfRXKesmGA5c1tSrakP3Hv
65NP8IOfozsSjnOl4sDDI9eWd5Le55S0YzVk29JK9Q6E416czBSLc6z+Axzn
TZopPXezehHax322yiv6c9j9NOC4D+bYoJ8ZyD8XOM4jet5R+1vE9xPt49wn
6l9mMqvXAcd51sCvsvFCHOcvg/sZtGR1v/861wCe1ux3ozCP0BWWkt9vao7r
S3CsU+DTB+1ZvkKwX2O/G7336Ua2X6CfiEtTXrbYzvY74IhjScNHZQn3R/jh
tBXhoSUsL/iP38f5L7y5fypI/BO6BXniuEE13sz/geM89G/KujLDCkvqD+zD
7h64lT3TkPgfJrF3cMz1bM9J8yac+yj5HDvO7kWjfeRB3gouc1jdGP0Ejvs2
sK+T3KvZN8RFntXNgJtK7sOsWOcbwvqP/qCdAqfJOnz71B/gL6YvnbFD8J4I
cN2RcyrkomtJZ+K8xrvFIe8HvI5FfIP9lE8dfv4cKkt6Evbf7587I8/n1xhX
89+7gc6Evp0SsaZ8Q7Aa6VXYxx9p7ObcX5niEvI7T2/vdHmB/qTfi9EdnPeQ
72fzeyMLmt0bAR48olP6lntS/Qy8StHHW5inIP+ymB5bv5DPr5vf9yiT3PfA
ugA+dEBarjafpwNH3bh+XP6vIUrSOjzyr8a/VXtYPgg+gYeYD6kW1s+RZ+Vq
bzvJ6hKwR5417/oHC3ZOARy6vcO4kiH2fF6M8WJ9eX24Ocnur/R+BfC675Y9
+/P5FOyR7y//c8J3oaDOgHPMT/1UleWyjSlPhD+4v8kJWiSo/wBf9Xn3k9+s
/tPsXpNNs3tN9B3vnMul3Xh/aB6XTCVxCfbQb12iutpmZevQc3FP9f2U1m1y
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
zLvB9X+FbywX4mqsC4Pnlj7uZ1ttQ8/Dr111lOcnEV9BD0vGTU9SjK/Azd01
27A4H/IBL3Lp6/Lhlug3YZfafF66/sQ5E5ID4oTsuZuLmBzwPLjzZv/vLF+E
eAB6pfKq6tBx4T2QA3jJz7ktw11NJXXrb415/S2+S3XO1i8+vxfkVnc9cQ5f
T6xbr1vC63UxX4M+ePaRz9fQTvSv68Ln7Vj7Ecfi+e8ffjxn8fN77tfAS69P
6MX82mY+fsEzV/RbHJSiTPE5+Ov3+7ecFPQEcSy+u+BMm35nhfk17BWe37LI
MnqP4N/Rfjz/sqq2ltWHQA7Qw2233j5g8sTz4DcuyetJIH/w7mkH7gUJ4yWQ
21Xwy5V7tg66UuiMvDTVc04aePxW9DtnjBdwq89OPTcJ4/E8tzPgxRIztz/n
F0phZ8C9TDrnKn8rlWL+C34h6Pp8Zv+Rb6H83uteT9m6qnzfmli36bmxttmE
aBNalwdf0CliNotPECeAb81WN+spxCeQD+WXzsvlA32APtvO3Hjni6APkBue
n6T9InCMIDdwqo8qedqL2RPoD9Xd5U5bIrFTproF8Oidg96HCvqDfgdXtfuh
6REg9iPlZ37+t98xjpR6uayPEdqDeRnihAt+3ZYnX9Un+wA+Z/O5GmYf6lu3
Uq8nTq4vrqhvHQrfxfj99PWJNvvuRB6vgkdYL//S/Hybeten6otP6nu+vvik
7jrXFL7OtYzHV7Q/oktB4lwhvkLeBvzgrc2WrF4F8TPV1Ty1NPmQZkf5HPBJ
369cit7TTjaTx/kY12rtbiSzeBL6Bh7vVPTpmDAfRz0SeIR9WZsTQnxoztcT
ad7BzyF5zOMB8OdjbWfaCfEA6pfou+/aZ6uOec7PHxHr/zs/G5byxj1NCj8L
O9P1Q9abgYIfhBwwjmwaxeuzeAbrCOAZibufsXgGcgZ3/xAdHna5hQT1POCn
rdJcPwrfxXo05TEKhhWev51HdXrwg09mdF17TtBnjBfwEVpfz7G6OMR14JlG
qyayfDL8MvxdjM/cscwvX+D2Crxsm2Gkn34bWSX3v+Ajp3htYv4XdQLgITe1
vFhdE+whxu8o50f3IgR7iDwtno/b3yzy0np7qoMCH3b40HOmV5AP3hNw3T+1
SJAP+pHWx9utvPXEJVuK8Uh1sHHr764W4l7oP7i67lRvj2B9CfQT3PuvEceY
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
W3BXmdbjwMe7NHf9GFjmjO/CX4S2SoubqK9C52rSfsZPM/WdLCqkaA/4/fmx
OoVOprRvDuM64PsNzW+Pzf5vP1oU349Wd3+ZId9fRvew8PFrrJ5UcW9gGd2D
AO7yJL7QZo8h/RftI5sfurD1C/Ece8jZo+v6fgWDRb0Cz7a5OYndZ0H3uXOu
tEYzKleQD56H/O/yukGdOnkMa57HwPMYL519C1LMQ8Rza8EXZ3l0m2mhTBx6
/rmJw2+5kTw5D16wzkfx/ibouU64QaYtkwMfj7Q+VXJ1SWmhJv0v+v3YtW7L
cu+K9/fRfoHuQ5eydvrU8acjuD/Fd/H8Rv1Np1n7m9TJMzvwPDOdw8x5yEVp
G2YP0V/gB9pFrGnzQrwPi/aR1bmnFXwyv6cVHPLf6t/l0zh98Z532JOZMYay
L4J+4nnY5555nwbv/CTaB8h5zqqjLor+C3L4PPvut94K9g162/Pa3RJFe0v1
Tnz/GvSfxi+vI0X/Qh8u7NO+PMNCvK8Q/NuK9T9Zv0DOGHdPfEOfOw3HeShi
/WcOr//E+9FfhqOeShTfD770oI2jhYJ+1p2/kH7y/90bKtdD8lOcF82W+y+0
E/1VNDbsELt3FRxykF3ePov1C+QGORfwuuW6+zHX8/2YkD/ej/uqFtWZd0gq
5PMOOl+UyzOA14nheXAn2c39YwW/AA75+Dx6+64gXuTQq1Ael+L94Nq8rgb6
hn6ZGluw64Bgz/EeqgPpWHrU9+M8sm+Qfxrfd4zxiHaG3mq2RZKoRv2L/33E
6wrQHtoPzte1wfFf//J1YfRL3XVD2EOMlx/nnj1ldtWnTvxsxOPnFXXiZ2ce
P+P9+N/jb5uasH6nOJCPu29bY/wUz1OFHWtUWml5qKt4fjL6vQs/n5biBK6H
DhUmv98Djv+6Yhijy96zos484iyfR8yvZx5H54Tz7+bx+8v+B5Pk/3c=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnQXYFsXXxvfZDrsxUBQxwe4WBbFFsRVBUGzFbsVAEQMDW8JAMLADRQUT
sbFbMRCwu7/7997j9f+ui5eZZ3Z2dnZ3duac+9znTIe+R/Q8PI6iqHsTRYnS
VcsoWrkVRe3yKPq+iKJY+f2UPq3yzVSxvyq19Lel8u+rfqx8N+U/UP7NNIoe
1u+rdM5COqenyr9VO2P1e4LKb1U6RuWnq+4rSg/VXzuV1apzvf6eUv5SpQ/p
Whvp3B/qKFpMdd5Q+Q0q319t9NXfYvp9gNK3lC4e2n5Ef5er3Zt1H5OyKNpA
6Z1qY7D+XlKd8WrzKh2/Tfnp6ucLqv8q96Z0X/0tovy9qnsx96L8DrHbpc2H
lN6sftyoNhdVnz7VsReUHqs2t1H+VuUvUH47ytX2A6o/WX/X6dzjqij6TelA
HTu/dvl5Sger/s4cV/lJqvOP8icp/5CuPZFnpd+36Pejyt+gshnK36f8aOW/
VP7+kL83cX648jNV/qDyN7XcZ97D+2p7bOE+3aT0dl07UR876V4eabn8unAt
niHvanpohzZP0Pl/hH5+o/zujAG18Zvy5ypfKT9UbX2oZ76Qyi5Q/n3lF1D+
QR2/XH+fqJ091N7u+ptX+WGq87zqzKn8Z+rLLqrzmvIHq3/zKE31ru/T8xmp
686l3xfo951KByl9UH8zlL9T6ee69meq87bamqnrTVd+TqX36twRkdufqToX
6hqlrnmt0mdUNp/+7lK9r5S2dLyP/g5U365R+oXKu6o/w5Wfov6UKu+l9Cre
O2NP7Tys3x/p3FvVhw/1N0X5K5V2UPsb6Nz3lL9d6TmMBx27TOeUKltXbV+q
fKH82sp/r/RdHb8x97f1jvLPqN/3q//3RX4Wv6re2TpW6vo3qd4SKptT6SCV
7cQ7UX5uHXtB+UOUTtfxDvp7Qec3ei67qE9z6/enSsepziTl51W9l5Q/TOn1
Kn9OZfPr71219ajSi3M/uzsjP8s5lL9D+XuU/0jHntfvq3O/m/GR39WDuq9a
z+UYtXu8+vx75PxQHds9jO1DdM7lOudA1TtD1z5T5Q+qj9dwLT3bgfq9hfpz
m/JHKH8Gz0b5v7gXld+h/KnKn6t27texldX2xyp/SuW36PdBKr+UuUHtn0Lf
VH6U6v+r/lzHWNQ179I5V6rsAR2/RX1+JnN+QbVzt+pfoGNfKf++8p1Uvr3q
HK92T1Z6ps4/h3Gl/N1q5/bIz+sftX+t2q91/JDM99FRxxdQO3epnUtU55DE
bb6uY9/o94fKv6n8cqrzsfJvKH+1zn9F6Qc6dxX9faHySbqXCWp7RuL5+U5d
61Odv7TqPq5j73Mf6t8vfEuq8KPSROmX+vtE9SeozvPMYUo3L31d6l+h819V
+Ycqe1TH3lP5XSpvaJd5RykX/CBxfyeqzuyW61ypY8/q8Os69xX9fcmzV72/
dd67SqeFdml/4fC9vq3yj/X7LJ17jdLJek7Xq83Dld9XdRZNPZcx57xQek4Y
rr/FVO9xlV+reo+UXlN+VBvLlS4/Ued+HeZJ5q4XVd5Lv+/W3xdhzmTM3alr
XUSfla6l8sdCm/M1zp+jNvdKPPfervpDK4+pdVX+kOrMpfNO1Xknq/zfyPn7
Vf6J+reJ0jt0/EnOVXqC+nSjzu2kvqyov0kqv03l5yi/U1gLFtb9PqHyofo9
Ldz7hcqfpuv1VXqF6r6k8rEqP06/2+k6Nyufqt3nSq9RX+j4lNJz0UVqc47G
dU5WG0vo9y3K99e5S6vOOOV/VRsPlv7ef9F9XKR6L7L2MR+XnqeHxf7O+d6b
ltezm1RnN/0+s+U2T1d6ic4fz7yhc9snbv9Y1RmnNmOds6zKv4987q5K83Av
Z+ucx0uvvb+rjSeUn6Z8ofMeLT1fDql9nTGh/2+o33qk0QZKL1a7/2TuG/28
IfL81JXrqfx0pQNYt1jbw7Mmz7NvW2tbXntXUd3X1ae5VH8z+q7yvSKv1Scq
34f5S8dHJD6nj+rvrbLvlPZWO8epbB/9HqS2tlfaWffyN7+Z35RO0T1swtxa
e+6jnLlwFV3vg9TPbT+Vn6ryfuH5ZPrrEPsZLsbaoTZ/0bHjW752d96t8uep
ndEaT6NanpvaqX575BzVP0y/j1Tdg9XPO1TeUeWvqLyb2t5Sf5fpnOv4FpT2
zz3GPladC/X7icwy0imZ5ZxOrMuVZaYxkWWo4frbHzmqtkyyCuud6rxYeH4e
UfhbuEvnnMVLU1ufxb6v+3XOykrfVv3Ndd2PwnX3VL0BrHc679rS+d90XlfV
+SR2X3k2F3O/zK26ThfmGrVzoM49RWUvIx+q7KyWz2fsMIYYs+er3tWMzdLz
PfdyltKl1eZS+ttQ562nvt3HOqn0DeRd5kOlCza+l2Fq42mdM4rvQOmTmWWM
0zPLdePDN3Gr2toxdlu1jn2n/Dr6O1v9u0z1ZyvdWdf8JvY5c6eW53jWq+tv
DOtv5DkDmWdc5PX7Hv2NVv4yXeNu5ZsqrGGR17SPkcnU37cbH79U5Sfr+k9l
lqPOUNoz9VzJPImsNyHMmX1jPye+63vD+sU6trmOH6OyM9X+67reFcpHSk+q
Xfe0yvLk4jr/ReXv0zlHq8qhSl9MvXazhj+fepyfr3YuKf3d7FB7zkdmXVV/
a8aed3lPyO+kpyq9sPI3vk7t/iKXz1bZczo2VuXnKF0j9hhl7C6h34tnnluf
zSxHn630XJ1/B89W556Zew16K7cew7qJLjOH+larzt+q/67qD1LZCObXxOsm
6yBr9Rax18JxOn9p3iFrIuuN8rflnl+YM45V2bl6J8sxT+aeg5iL3qK89Dxz
tPK7oeso/17k8fahnstCSm9qPM42VPpObnn9QqWj9XuiytdrvF6hM/DsOhVe
i29XnXv0twJyjdJd1f6KyHdq/279Xl75BXLfN/ePzMDzYR1kPTwE2Vh1F6k8
vzHXdU38/niPW7Huqv4NSusg+2+g+rsoPVJ9nwf5Q78PV34O5T9XfoXa6TyV
9YP1ld9Z6SU6f0rmOXxepfu0LNNvhizO+qz6RzBPJ/79iO5xJdVZRP2fnVr3
/JnnUvrbPzm2nHVIkN+QSWYpXbZlueB1pS+pnV5qfyfkSaWn1F43WT931fW6
M4dzfV3jV+UfUDqU8d7yt3G/+nkS96e0Kj0vHaA68xbuwx7MSWHO3x1ZgDUo
rD3X6xqbq+xwXWcUzzH2nL4Nwp3SgyPPW6zffGNTw3fEc79U1+qt49uqjS9V
/ntsfeAFtXc+613uOZ48a8DglvX3QyPL1Oe1LFfPzL1WfZtZzkDeGKv7HaLj
F7QsM5+rtKW/Q5Tvo/tKlP9J9fvkXht7q+zF3Of0Vfqezj9L5aupbyeqzUOY
q1X2be1ndb3KVtU9n8waqrL+Or9SnT/V5o36/Qc6NnKL0kzlx6jetWprPbXd
V+ftr/p5yzIMcgTrRj8d66djO9NX1b249Dr5EzqT/s5AtlJ6lNo9j3Yb398p
4R5PUP2DlO+u48cpfyDfhfJ76pxtlD+8tty1iP52TKxXoF8crOtWes7LsLYq
f25lXQad5mXVWZZ1M4zP6YmxkU8Szx2zwxzC729bXpdZk2kHWQSZFtmE8u6p
39cWIc/1PixcxrvmPN437/pZ9f9hpatmnuOY6/5rh/qcd4PO/wo5XcfmKi3v
Mn8+oTpDlN+O8cq3pPzGrDuVv0X0bMYP/eD+L1VbOyndRH34SfmTVf6z0klK
h6reJjpn78rtLa9z/01cjn4+OXX7nM89bRH6d01puWkR1d9BZdvr78XaKb/B
Mo5hbCmfqO1l1caOqdfKE1X+lvKVyvspf43uabraO17519SvhXTsBJ6tykvV
WV75VPmMdablazBWkFN6pJa3twG3QR5rLB8hiyCH7KvyP5VfGrkxtRzDWFxK
v38N9Z+vfS/c0yfhXNoEV9kqNf61ApiArr+i0r10/kXhmRfoi/rbFB2gcP4d
1Ruq/EbMY3rme6idSxPP0azLyyOz1647LJz7qK5zrvJbM171d43yX0f+Lq7U
7zeU/pS4znIq30ttXJ/4u+2gY9+obFbtb7ZU2Rq15yrmrD917CKVj1P5h5Xl
0lFBNuVbQJ9/kzU6yM9gAawTrBdLq/zryjISmBPy+bWJ+7hR4jpbRJbZRqrs
I6WPqZ3BKl9H5cvr9w9KV1Z/Nsu9XiR6Nstk/sbXpW/6fTZzhNL7de5ZjEnm
MubGUOcYnT9T6aJgFYnH/wr6fXTtd0H5pUHWQuY6Tv1ft/SYWUK/Z6vuV+ih
lfWclZSft/rfWjd/5fWKdWx/5Xuqned4lrH7syjPXL+35Z3yjYAtqPwIcB5d
Y20d30npDpX7/pTSDRPfF23tlvt5d+NbDN8I3wLy1HapZaoLKusa6Bw8G+5/
3dBv+j8dOV/HZqXGtXLVOVT59ZBTY8uLyIezdI0dlX6FfFm7zlvhO+Xaq6nu
c8hxys+JLKi/dZXvpXMmqd4ByCG19Z0NU8uL2+j3trrOMP1eU/04iG9Kv99E
Fk89hyyg/qyvfDt0DPVvtOqto3RybZ3pytKyFHXQq4/V/f4c2kRW6RVZ9mwa
Y0jkBynfW89uu8Zj81iVLZJ4fUbfY40ert8DU68HV4T8jpHrU4f1EnkEuaSH
8nOGPO/7SGS61GN0wcR58C/kIOShrZT/ojBes6PSPdTnR1QeN8bV+yv/E99P
7WfyRm0850Dl/0A20u8B1NH9/aP8g2Eu+rzwerK90q/111f5XZU+y/PXNa8G
Mygsj/+t+3+6tm59lcoP1fmj9Gx/VP4Jla+lNh9XerjKb1T5zyo/SvkHlP9T
+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
PMxd4M/sg3tW5P3m/g9G51Eh
          "]], Polygon3DBox[CompressedData["
1:eJw1nHPAJNfThXvUMz0T20421sbcYGPb3NjJxtrYtjbmxnY2tv2Lbdvf8+yZ
74/7vlV90Zjue6tOnbpTb7HLGjvXi6JYv1UUTf7v1imKhfj/NvpxvaI4vFsU
NzeK4lyOHYZ8FcWGg/i3J22fbBfFf9R/hL4W8h9VURzNgDeiP0D9Wxybh/aT
os9YFsXl9P+b9uPQ5lLk2Shjoa9A/cz0vY32L6LfiX4r8hOUf9HHpf0SyLPQ
fjT05agfQPtZ0cdAX97x0Z9GXx59G/SnkP/jnNvQd9JaUVyEfABjrEb9Ho7P
Pa7BNQ7k/7Zc42fU1Wkzhm2pP4Tjk/IMPqT98+iTIJ/OmK+jf0ib/zjfjfR5
FP0S6t+g70Dqp0LfH31O6j+gfmQtY76P/C1lJ861LPUbMP6ctB+f9uuhz077
M9HfRP+c9p+in4v+Cfpv6Jsjf0//3ei/Ku03pv9UHPuL+5uR+utoPwX6n+gD
0K9Fn8bnjT4T+vXoY9L/QPT//M253pHoHzD+19SvjFzj2OjIF1I/jPF/RF+L
9s+iv4g+L20eQJ+XNvdR9zX69lzPXNSvQv0mPKM5GO9E5NeQ25x/BO1von4k
z/puygjkNn1PpX516leh/aYcm4PrOxX9JfS3Gf8T9J9otzb9n6P+Jca8h/7X
Inc4fhr9j6P9E7Qfn/YL0v5Y9MfRr6PNvbR9AX0jru8p9CmRn6NsgP4E+inI
49DnU+R1uY9jGe9Fjm1M/dMcmxr5YcrC6Acx/rO0fQR9EfQh1D+EfDzlKc43
AfULU/88+obUP0n95MiPURZD3wr9Ua+Vsjh6i/bDaL8e+lr0b6Mfgn4y+gvo
d9F+BHrBfY5G3XDEg7n/ZbnGkcg7+W0gf8w9ToC+CHVbodfofwHPaxb63Ej/
xSkTI+9I+9Opf5X/U3L+2zh2JGPfQfsp0G9FP522M1J/fv99uZn6Qb18a+v7
niOvT1mJuik579vIO9J/GNe7KMdWof9rtJuG8RZhjNmQX6dM28zv/zbjPYs+
OvrptN8BfR+vl/7f+rzp/xvH1qfvF+jLIf9KWQ99avRluMedaX8o7Wfy+6H9
Vuj7oC/FeN+i34U+HePfTP2DXGMX/Tb6v0/9v9SPh/6Kcwn1e1G/N/r59F8a
fV/0PdHPRv/G94X2R3C9O6C/gv4y5+/4jiLvh7wP93+r7xDnO8L5Avll2k+E
finn24dr34ljh9B/RfSxnUud76g/A/0VxvqdNhtxPd/Rf+Uy3/s2tH8B/Rzk
Pzi2CfW/oK+JfBbjn0b9KugbtfyQ+P6on4rxrqa+QZ/h6HOg3874P1B2RK/R
bjjXuwn1m9L/Brrez/3O5DeGvCp9T6T+Xupn4frq9OkhH0V5kPbX0OYi2g5l
nKXRN0G/gfPfxBgXIP+LfBL9e9QPpe8fHFuHMX+mrIv+FvortNmG8faj/wDr
Ge8v6jelfmP0Lah/jP5/Uj+nzwN9bfROI+vNuj5/+l9L+2e4v9/o/wX9V0Jf
h/rrqJ+J+pL2C6KPTf1D9P9enfYLIC9HWZz2E6EvizwJ179rY9RjLCZGfob+
y3H/M9BmEuQDKVdSfwjt10ZenYYt9JlpP4/zH+f8HXlzylbIw6m/lvqd0S9A
3p0xF0Z+l7rjeT5LMMY8jayx4/bvf2/G/hX9T+Tp6HM2557O+Rt9V/R5+/ez
C/JN9O9xfQei3+i3x7F1qd/J+QF5HY5t7buM/CTnexJ9UDPHHu9mfVwCvWT8
lZAryvXOr+i/cz1N9MvQD0B/Bv00xjmO8Rf39+IetvOZoM+Lvi3yQpSZ0G9B
H0T7ZZ0v/R7R9+Hep6jyLW3MOCdwPeOXmVv+x7EzGO90jp9E+w05tqTfTjdr
99O0u5H223NsRuov41iDYxtybFXaPs7xl5A/5RwTU7c4Y12LvrDvL+0f5NhS
nPtXyiHcz1Xod9B23V7Wzo3o/xjyDrQ/WPuBMcdEvpjyDfpEtLkQebwya+ub
6Kdzjofp9wP1JWMuhPwI5Xf0MdEHIR+sjYR+LH3mcm1uZz2cDP1P5B8pezXz
e23Xyve8APVfop+JvCXXOAvy5dTtwvVthj4t+qXOfc7F6DMiH8AYv9F+CPqs
1F/BsV2d/9GPo+54v2Hkdzj+WREba0Pav4n+sb8H13MG+nvon6Nv6fdQxh6a
h2PTcGx15JUcv28bzs//W6rYAs8x3knc37vUv9GIzXIG+oroM9NuGB3+YPwB
lLvbsZm0nVamfs5W1rfZkFehzIU+OecfzTXd+Zm2O1Jepe5m+p5XZo11rX2r
lfVam881Sbt1sN+f8x/yws75/J/f3wd5QUoH/TTaHM44M/OMqlbstZmQ56e+
6fNE34b6JdGnRn+Z8e/3t6PNFOiXM/5x3Pt21M9daIBwz9Qt5fys7UH73Wj/
MW2/di7h/Gdr+/ZiX/ost3W95h6O5tn8qx2IvjHHJ6f9xbTZ0fUVfTz04X5r
6BuhT+bci74D+lroTvvn8mcI+qNc09ic6xGuY3v0B9Ar9AfRt0afjTIubRdw
/ujEPn+R632a6z2hGxtdW/1ZbTZtD9qPaGfOd+4/mfbna+ugH4N+UJW59jL0
/bS9af+K8yXj7FtmDXUtHU79vt2srzvUssa71h9Bud/5wzWZsXbxmPYb+pPo
+6Nf3oiNfhZjDXN+0v/QXqliU2pbPqY9qG3Vje26GdfwirZUN7aWc7Zz9whK
w++BNmcy3vbdfOvaLNou01S51kX1KdCvptRpf5zfB+3Pq/JsFuL6PkSehHJi
I3PWUG199HN8dvT5qps5yblJH0dfZzPq/2nEh7nSuZkx5yhy7Ar08yhfNLJm
17uxX13btGm1be91fuR+H6fPWei3VrGF9UnORh/KeIsVuaY90C+h/NLIGrtS
lfnxS+Rfub4pubbnKee2c817dTNfb1eLzaPtc2+V9dJ1c0HK0d389q/Sf0z6
3k39t42MeT51F1Ga9cyZzp2uGa4dPsNrXGs4//hc/1BtVv5/SPkKeZxG5uDP
9DGK+ECboN9extf5FH0O+k5Uxpb9k3In8pmtrB0z12JPTMyxWZH/otyFfCnl
f64lXNOcjNctY//O6pqMfgp9ntHWrMWfOZT662t532fmfGOiT1OLDTYm+uhl
5qZ3KVPQf1u/Q/rXtI+Rf6Y0kNdpZP0dt4zvtRP6WPTfkfrdi/gP+pubUX8M
8mCez7u0X7gV2+NDyqv6T9QfTf2IRuyHbTi2vfMNx27SxqL+XuSNtUn8HZ0b
9ZWamU9/0v5rxkfSV/oL/Rb0hWp5H37U3kW/mvo7nXsot/tuoA9m/H+7eT8v
QX6L33si6q/Rv6P/+Mh/a0+jL46+KuP9R7ueviDlZH1H2pxL/Z7aQ+i/+40g
n+/vxnincuyRWtZofZiz0J+sxefR35+A/lfQfyz6zOu6Q/1Y1D9KOa3MejQL
xy+lzdjOZ663zZzDc33Ynz8XoM2WnO8LfyP0Pei/Bv2X5hxv1eNz7of8HfX/
FMEMSvruT5sraTs3bfahbk/0i9BnQ99bG6MTbOAR5CMY/yr0s9FHoh+OPoz2
19J+Htof5JqMfh76zOi7ox+MPgJ9IPqB6AdWsf+0fQ+m/7RlbNWFKcdyffOV
sXeW0ydDn5l77DaCHRygva2Nx/1vhn4Q8uzUj+23rZ/fi1+of7i03wBjTUGZ
W+yCMp/rJPpqyMsz/mKdPDef39z8XxV9Z+rPoX4m6nfj2GFV3t9NOX4o4x9a
5X3dGP0Q9P+hz07bBei7F/pb6HOgv8T17G29awLXexdj7YH+NfWrUv81/fdD
/476M6m/nfrdelkjXCsupf/+6Jcz7qFc3wN9/+sr6leh/iv67+n8JuaB/jz6
7uift+Lf7M41rs6xVRh/JZ7Pltoo1P+hT0HdZI3YY9t73iL+2U60H0q5sBZM
Z1fqLub8x1B/t8+C/i93s/ZsTnmZumnKYCO7uV5yzT+1c7/7UAZ34m+MQB5I
m6OpewV9S/S3GpnfxWvElsQgxCJe6sT/1A8di7GfEZNrZ34SD9LH1dfdXAyl
G5tJ20kMRXxjS8rujVzTCjyb0dDnR96XY1sjP8t4U5Z5R7Zw7UA+rh2fWt96
c/0z7fJG7Nn5KdM38o2cwHjzoE+N3m3GHzlHm78RjEN/Y9VufDuf+Wr61s45
rrfN4CH+XhVjTeM1doNpOC84P2jL/9NJnefwXA+jz4Y8iXN8H9/w3vVB9EWe
9p2k/4TUL0rdMPGRRuaAWV2LKefxfnxP/WvUzVvFN9hQ+5j+E2rTUr81v+8s
jLNIlbH0kfSV7C+2I6YgtrBQFexHn1Tf1PerLpbWv99rqL9Df8P1rhv/bI1G
npHPSgxILGj1RvxLbR5tHzEn8aXz0ddsBCNa174+U+RJ/X07eb6e6yjn307s
H8fyGfusn+J5/NRKnzWp+4xjj3CtLco9VXxEfUXnv/WQD+oES10cfQXaX8Gx
o8vMcTdQd7lt0I9Fv8a5T7xP3NN3EP2yXubQk9FHoF+FfmWZ9XMD5Gsob4jp
umYin03de5TFuJ67aP+Q35h+biN485m0maWMjbxOJz70BtSP2YhvfbYYKv+/
43lNRt3v6FvT/iTGP68TDHs9MadGsO2ztIn1sxlvA/Sj0W9B/9H1nOexUxX7
5APGuY26I8UYW8GjV0f+mWt6tIhP94u2bH+Od05ybrqg7xMsib692EInvrs+
/JK0/72Pr4sBDOrGP16oEf9hcDc2urb6QL8h58pOxrLNMt3gNf42+nOjsPMq
bcU8xD7O4fxzcf55/J47mZ+0ledsxD7+oBtf+lCe10e+X7RfTIyG+9/ebwN9
ab958blOfAR9hVt4hpV4Ifd7UTs2+bD+/PAsZSp+v9Np/3PfP9LH0de5pJc1
5BB9BuruR7+QMZ6g/ejU31Vlbnqgjze9T5t767GJtY1vcT1jrBc453OUN8Tw
0McVw3R+RB8D+cM+XtOqUjcL+uvIh3Js1nowOrE6MVxtMX2Ca7vB42as5xye
69VusGwx7df0h5wzkTuU69D/7USucQ8DuJcHObagbRljgm4wbrFOMc870Z8T
U0F+j/qJu8F/xZLEZMRmXhFzLoPpiO287JqCfhBjXI9+O2W+ejBasVrx6Mnq
waDFohuMvy/yOZQfusEfnKv3RH+zm9/D2Ma0RbAE8XVtYzFwsfBzfb+awYSM
lzzrHNbMmn9EP57gtyumLbZtvEEsVUxdbP0/+h9cBDMTO7uwk9iKa55r/baM
sQPy0X5/6KNVwQbO9P5o+zrHdmzm/Z0ReUA334vH3uivN6Owb58h8t/aaNqr
tJ8b/XWe16+8F2fQ5h2vtZu2M1C/gLZSFazkKH1C+r5K+3faweTF5h+gzKu9
qQ9N2/u7wfY8NhL5IW0Ofo//xOTQ96XNMkVsMG2xx3vxW/RfjOU8gv56K+/Q
tpxvd9rPj9ykfoZu5oMe8idF8MmHaT9vmXv23meoEhsyxmWsS4xbrPu5evDj
q9Gn5/mfi/53lZiOeJqYvfEoY0DiVa5x//bX+1HfGuUhvxX0Z+rxEfUV79bG
5/qP4dif1C9RRdbeHi4+WeVcX+l/VJlDnUvFYMQvxdD04/Tn5ujPV+M2goFM
XuX98NucnvJi//z6ImJuYm+TUr6vB7OZxbXBObydOeqD/nwwjv4ev8c96NN2
4wvPgH53fz2bRCwJ/b5u8EO/Nd9p323xzEnrWdNd20cy/gI875ecE9Bnq4Kl
azNrO4+KcbSDLxlbdI1xrRFDG7/K+X0XtNm03Xas8u3/gz5dLzagtuCmzeAT
4/pNU7+DNgdtH9Sm5V5fRR9fe4NruacdDE0s7cs+HrSkWHkveNohzbzfKyB/
RvsV64kBfke/tWm3fi3z95X6ouJK1J/CeEuUwRvWq2WOd64/oR1s1vn9ROQN
jRvVEnO5RoyxCp7lGuZaNpg2b1N3lvYAx5roaxTBDFrt2NfGLnetJYagv7U+
+m7oq/Xx8c3Q9xE/18bnenayL/8vZPy928HO9+XYPtq4+tjoh6GPLf7g9448
OvLFtP+HMTav5/v1O9an07czpjlGO3jIEPGHfrxDTFNsc1fqS449pS1Rzxh/
a3twbC3GWruZ+KyYptjmqVz3Mb4rVWKL35WJN/7rM60HjxSXvIzyVi2Ypvjl
fK5P6N+WiW+u47rZSMz3G6+X0m4kpmG8/KMq8Yg5kI+i/QRV8FhtHG2d5T1f
LTEf8WFtSG1JbRJtk7Wo36uWGIrxg2Vo8w7yRdqLZWwObY//tRLfHK/Ku6xN
pG00Ff9Ppv1rtLnKdZrnN5TxKo5fRP0WtF+jFptA20D8+ORG7mHNdp6Tz+ul
WuKzXpfXNy76s8iXid/qr3Hs6nb025Hvof74Mhij/v+ZZbDHy6m/k/rJ/L6Q
r6U83Mh8vi3yEa3Y6vrYT7Tix+lb/FYkHuV1er2HN/J++74rL6K9iHwsbTZA
Hoc2z7Sia59vpb1Jfa+MvIT4pOuw35hYDO13L/NN+W35DMTPNxcjqCVGd30r
dpL20q/1xJdeL8OdkEOhDztfO7GFZekzP/Li1G9QS4zlVPQHytjm2ujGqxZp
J1a2pv6M74sYhnM7ZQX0e9D/qcVmmhv9yHb8PzH0cai7Cf1J5Ptpc1Qrfrb+
9i214OE7cOyGRjC7W/p4x3FF7O+L+3j2mciP8ntMLZbnOalfQ3unnXfMd23v
er5RMR+xn2s4dj76dJ3gX9qL0yP/1kqd/s+W7Txjn/WRzcRHNmvHtzFG8oPP
t6/rv+jHLNiLbaJNqW15FfV3Ufca7ffj2ML6GLX4KPoqHc65dxF/oELeuh1f
0hjddrQ5zN+futspjznnUj8tddc1Ep9+RBuFusk5fiXjzYj+hrYV5QDqb+D4
I7R9H/0w9Der4AX3MtbN2nbaBto3zvnUL9KL76yPpK90DfUj6T+hNqR+Ff0v
o/4Kjl9K/SV9X8gx9nLub+e330L7Gvm1Ktj4nYx/k7Y1bV6rJYY4bTt420ju
/2WOXYB8uLGXWjCox1t5J3w35Bg82Qp+5ft6t/iTWCTHHqiFE/KUc6JYtHMz
5elWMDltBW0G7Qj5Ls6l62iTI09CeUhskzaTtoN/nSP2aB/kicVomvER9RVP
YMw3auHsPI/8PcfXRD6KNn87N7TD5XiPNnch/9CvlzN0CfL0HHuR+s+on8Fv
kd/rI/EF5KsZ/2TG/LiWmPkLreBE4kWn1BL/ubCd3157XLvc71f8SYz4EOTV
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
x5iVsStjXsa+jKkaH/Eb8VvRhtaWlhMkh8f9W5am/22t5Gxro2iruB790EpM
xdiKc5xz3SlFcom1h/Ql5RFrb5uzK0dHm9h8BNe7b1r53sz1dY5xrtmvSC7q
/3OW3V9kg27y6Y5shRNnPMGcWzkL7rdkLq45uWJy8h3N1TV/zetxzhKvMad2
v/71mc8mp2T//vPQvny3Su6y+YD6Dxt3k4tuzrnr0TtVcqdPKpI/ZIzQWKHc
A/PHzLGUvy1W7Hqqn6e/J0dXfvVZVXLJ3cPL/byMIRlLksPs/lpitGK17mFk
fqd7Mrg3g3uMaX/og+qLimmJb93QzV4+5lSZW6U/KhZmTpa5We5b4f4VcnDd
r8n9AN5qhv96XJm9MK4ucsz9AWahvN1MDr7xUnmr2sbGsN0fQA6yXGQ57HJ4
jYEbC3ePOPfbMnfOWNeLzfChJ+fY1c3ECMyvN4dJ/pHfqN/qZ93Yas4Zzh1i
gfKV5GzJ3TJ/Xd9gZeNDjDVfL2u7a5prm3zhb2rhUMmluqcV7pIYoFig/Gyv
RQ64XHDjFfITzfk39989OYw9uueP8405WuZqieHJP9Le/LGV+d/cVzEgsaDN
i/jrYjxiPZsVwWvdT8i9fuQkyU1yvwC5ZXIE5QpqU8v3O7kdW3ulMra7HAfz
TeSPu3eRnDS5afP3Yiu7xrvWT0f765rhSJo/7/4GUxVZ/20jbqgtLgdSPr22
pPnzYrruHyW/U77p+/Q5qxWOslzlq4rwpc3/cK8k47/P9edw5/KPi/Db5uol
lmFO3lvd+FT6VnKe3D9G/pNYqnvKuLfMSRybtJU9UeTT3de3Z41JuB+TNr22
vZxQ+VjuaefedsZY3f9qjV72ChPzEPtw/y9j3eZMuZ+INoGxX7nR2grO2fL3
5V44l2vDGV+R+6Rt52YU8qXdI0N+tGvqQ0W45K61xu/kcumj6u+Jvx5VJKYy
t3NVJ7G4gf14hfupiLXKIZNL5n4sYm9yAOUCuh+PXAD36TmiDGYkdmROmPF0
cyzNtayayYfU/hpUBg8wdmF+n7mExoQG9hIDNxYuh8r9Jc0pM7ds4f74xiPH
6dvM2s5er7EV45XGD8VHlykTfzJ2o82n7eeectrnxjtfa8XH19eftpdYjZw+
7VFtHvM7zmvFFlq7l3idcTv5UdrQ2tJiZO63pw2jLWNOsPEI/ZG/WrEPzY3X
BpCPKbde28D5zGdhzqu5r3Ia5TaKAfi+ud+l+QqPFuHP64/900rM19ivPoq+
ijaUe0fJYdylv57oT7veHlgGT3VvBueLvfrrneuNv7G/tXE08Tn9hb3LYALu
1WC+rb6sObrm6roeul5pIw/vZH11X82L+uufHEy5mGLk5ouu1st867xrPpDc
hFFYZ5F8A3MSzTe4tUj+v/xMc5tdv80PMF7tu2sMzlic/O1fa8Fn5KebY22u
tXuUub+fOaLyDc0xkm/qHkDOrc6x01axybTN3DNQfqO2zigstEj+kPxyc5lc
b113zZlw7fAezE86rq+bU2H+gDEIYxFyxCau4g+vUmb+MZ/U/QDF/sTX5Cv/
H/X74ac=
          "]], Polygon3DBox[CompressedData["
1:eJwl1X1MllUcxvFbEhEkl4g1M2VO8GVmTUASFQUFRQRFkHxJUFy62RbUzF5l
ZrbVellYTmeWpqW9b7UyrWFppjlzrX+spshihqCZKRYZZutz9vxx7TnX91y/
8zvPuc9zP0OX1VfUxUVRtITiqSAxim7tEUXbekXRwIQo6uan9ImiVpMd2Czh
Tqw7KYo+6hlFt/WOokFUK3MZ24Il89flp2MXsHi+TO0f1h+mth/+s9xIvAGf
w+fgCcbr9Ky+gdR10VtyqXIptFQuRe6ktR+Qy5YrkJmPT+NXUyG2XraLsvUr
l73TuvPU/YYNwQqx0Vg5tljtd+qOU7JeP2B76IpxpnwWfrfMP8a71JXQ7da4
lz+h90q58zIdtERuQzgPe1jKd8oWYsnW26XmKf4q/ou6Lylb7Sl+lL3MlFsp
d4dcqVwedh8/Dt/KTw57lm9Sl44XyS3E2iiDz8TT9F1uvWtYkboKrEbucewJ
quTL8CXWPk5pnuUr9luNNZtPMN6ox1rrVRmLRCes9WPoL5NPZ43bab65BpkP
ZEe4LynCe62xSGYqXZQ5j5Xp8bxcK23B+veOPdPwbEer/TM8I7kEtVf4GWr7
8u9Rm3W/l79Ar6sdgvWXX8D/RW9ixZSO1fL3qD0c7oXxv3oM48tpk7oWyrOX
feZ66LNPXT22Su12LA77PDwv4wyfY9WVUrVMDdXJvWwuQa7JfI5xT58jZa4Z
f2bcx+dmfS/5blX4HnVnaYa+zeYqsA/DOdFV3+00thBrtOcN1NPzy1BbSr3M
d1mzAV8g0y27m59FY+xlOX/eXkqsPRv7ifqGe4vviI/d8XDXa/iDeLLcIX2H
hrvGL6Nc48OUau4ovz/8Bo0PYCOoWN/xWG/jRtpvT5v5A9RH7mtsDFXyd8nu
jI/d3XCHr/sO3ybG1g49xlIVnyP3WriflCb3t9xePJJrCncy9A096SuZVbTe
9G7f4zIW5zyKZc5hA/nn8MFqj2G/yxZYfyIdDGdHWeZa5Fbo85jzzZSbaI0b
+US5I55XKbYVexg7Yr1KNZewHTRX5gt8uFwrXyqXzp+UK5L7FfsknIHcKWw6
1sZ/Gt452BqsFDvHzw7vTyyX9tvbo5Rp7rT9Nco943wXy1zGp8nU0Bn9+mHD
zeXpm58Ue+/V4+PwarWT5A6pWUvbnMuLWB1N7RV7/4X3YD1/jAboNxebaG4F
fzO18PNoktwtfLsekf3MCedn2MHn6fEN/yRtx943f4Ze5XPjY++K8M7opDf4
qTQYq+Yv0jZ+Ag3AFvGbwu/Nd0r1PeIVZ4c7EM7aOVeE+4E9iA1Piv0upoSz
Db9X7G3sP+yo2vFYLfZOUuy/qZ3Pp5Jwd8N61lpNz1p+pzWelvtY7U61j4Rn
IjOBDsisoc1y78o9JPeS3MbwvsYH6ZElN8p4Zvh/wZtlUvFmrDKcqdoB/E34
ZPMv0Dpr3J8Ue2eFd9ccn+W0zFr/AwHq5M4=
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVVEUgPFlWdoty1HgoCJwEMQVnFhxFcyGtwbmoBdoiA8SUiSKmjmz
Jk00nUSEYNEgKcioBoHc/oEyy7dJvjBCCAl8DPwdhLv3962119pnn33uycaO
y+15ETFonMqPSLx9b0Sa1BVGFIuv4AlswDJsxSq8kIqoUHuRZ3k1v8Ev8Sxv
48/UPsABfIivsB/f4Au8pvaq2mF+kzfyL/ztgYg/zlDvTKPiSflVcc++iO/i
v3yhQL31MfEqrsktyjXxH3Lv+ai+n7yb3+bjvNceE/gEJ7EPp3Bdf7Pe6WR/
/C9e0tfCZ+R+65/FEbklPsf79f7CD/sjNtW3qp0XL1vfEM95z2/icvFXnuNp
nuPv+HDh7t0PYR++xG58jvexTu1TfouX8Mf8Oj/Ku3iW38FKbMY01uNxrHWH
Nc5Q5kxHxP/0pPb4bs58ODkHnjeK+D1r1fwQv8sP4mt9pd4rY4+cvlTyLGtn
xbaOR+6hU+xx0YFV+qUig9riHPrFadMZIz/5/qZjFsvt8dme2mLF9EluW04q
PvKtvN3/4w69zVYd
        "]]}, {
       Line3DBox[{2131, 2373, 1432, 2844, 2845, 2846, 2485, 2902, 2986, 2747, 
        2272, 2715, 2562, 2563, 2486, 2987, 2273, 2806, 2912, 2915, 2274, 
        2132, 2916, 2275, 2133, 2878, 2917, 2276, 2658, 3021, 2376, 2487, 
        2277, 2659, 2378, 2489, 2571, 2748, 2869, 3005, 2488, 2719, 2721, 
        2720, 2490, 2716, 2988, 2278, 2847, 2717, 2718, 2492, 1849, 2749, 
        2279, 2491, 2381, 2494, 2280, 2493, 2888, 2918, 2495, 2281, 2810, 
        2913, 2919, 2282, 2134, 2966, 2384, 2283, 2385}], 
       Line3DBox[CompressedData["
1:eJwVzktKglEYBuCvSXTTcge6h2gJiRj9YFBml4F0VftbTTh3DY3LzDbhBmpQ
loWk5KDHwcP3vh/ncE6hfltJFyIi4WAp4nclYms1YsBEnrK9HPHKeDHiXB/K
Fc7kovnGvfPv7lepy1ds8qEfci0PzRptec+dLp/6EXd2Jf2JLz2vFyjrPda8
dUGGB/t9u0v5jx25Y2Zpsk7VrmG22JWfeXRvQ78hR80uNWckcn9+Ru7O36Dk
fIMX+5E/HdPUv80TWvKPeco/TuAunw==
        "]], Line3DBox[CompressedData["
1:eJwVzr1KgmEchvG/ZlZ2FBmRU2trJ+AShYiVZUo65KudSGu1VkciFK2BGuTo
Eq59g9nP4eK675vned53rZbstlMRUUR1OWKai9hejXjFn5zno5WIda7gGff2
WzzY77jKb5gsRQz0/nxz7hxj+d27x2jrH3yCK3nPnU+5hmt9X3/El950r4WS
/oREnuHSN+p6yvk0yvIWL+AGGZzZOs5WeIPLthEW0dWb9gvO6gdyQR7iBZvo
2Q/tO/K3fzlFYvvhOjryLzfwD9wYLHw=
        "]], 
       Line3DBox[{2151, 2409, 2410, 2972, 2150, 2726, 2400, 2727, 2401, 3008, 
        2578, 2579, 2544, 2317, 2538, 2318, 3012, 2152, 2790, 1496, 2789, 
        2319, 2153, 3033, 2791, 2792, 2154, 2973, 2414, 2415, 2155, 2971, 
        2402, 2504, 2403, 2156, 2405, 2506, 2406, 2989, 2157, 2416, 2816, 
        2417, 2990, 2158, 2418, 2598, 2419, 3038, 2861, 2159, 2623, 2320, 
        2601, 2321, 2160, 2626, 2954, 2322, 2625, 2323, 2161, 2955, 2324, 
        2325, 2162, 2956, 2326, 2327, 2163}], Line3DBox[CompressedData["
1:eJwV0Lkyg3EYhfFXYbJow9gjxBZxDcwYYqJTKrVBClmJ5QaSS6DVqehTqF2B
SmVpcAN+X/HMOed5v3/zFY7rh2cjEXGE23REORPRwAb+8DwWccOX9M1sxLoc
cFX9ml+zy/oLt40rbjV5z63Inn3A91Diutwl92gv60Vc2Pf2t/uSvS8XZZbr
Jm/c27KDAv8lF2TGvaW/yo5vKnoTebddOS/7bnt6233O/tDfRyPS/Kfe4nMy
Zc+6n+JJ38Kv3nR/cK/abyjihJ/ghhhPkptJ/ps+Lc9lw7s7/seeQg2T2HH7
B/ajKKw=
        "]], 
       Line3DBox[{2190, 842, 2427, 637, 3000, 2189, 635, 2426, 634, 2188, 
        2350, 2608, 3015, 2882, 2187, 1228, 2682, 2430, 2186, 2881, 2942, 
        2827, 1226, 2185, 840, 2633, 839, 2184, 2977, 631, 2424, 630, 2183, 
        629, 2423, 628, 2999, 2182, 627, 2422, 626, 2181, 727, 2507, 3022, 
        919, 2180, 1300, 2607, 3014, 2903, 2179, 837, 2941, 2606, 2349, 2178, 
        835}], Line3DBox[{106, 1383, 107, 1384, 108, 796, 1385, 109, 1919}], 
       Line3DBox[CompressedData["
1:eJwV0Esug3EUhvEj0brOMTRgYiDWwLB1KUUkBiyABWh9bS1A69piAy4Da3Bv
XWYGFkEMSAz9OnjynPe85598+YbXN3MbHRGxgrPuiKXeiGWUeyL+UhGndik5
jTe7Ib7uixjkE12Ln5Fpv7NvYtHc0D1yE08oeZvnIhZQ19/zA969WUXipiD3
m7f42M0N3+EWr/orHtVf8pF+rCtiwNyJF/0Fj+jP+VC/zR9IMIG1dMSB/Y7b
irss9uWKXDZnsCePy3PuW/I851Czn5JLmJZnMYOq/WT7+1H07hc/2LX/9g8L
5i93n8jiH9f1M48=
        "]], 
       Line3DBox[{2206, 1461, 2205, 2799, 2929, 2299, 2800, 2352, 2611, 2037, 
        2300, 2610, 2885, 2930, 2511, 2613, 2301, 2612, 2736, 2737, 3028, 
        2908, 2512, 2733, 2302, 2855, 2734, 3027, 2735, 2514, 2586, 2764, 
        2303, 2513, 1998, 2739, 2738, 2516, 2304, 2515, 2436, 2517, 1463, 
        2688, 2438, 2518, 2993, 2305, 2207, 2778, 2931, 2306, 2865, 2779, 
        2932, 2307, 2801, 2886, 2933, 2539, 2543, 2308, 2829, 2689, 2740, 
        2690, 2520, 2741, 2309, 2519, 1651, 2866, 2310, 2208}], 
       Line3DBox[{120, 853, 1918, 119, 545, 1742, 118, 1091, 398, 1637, 117, 
        1146, 116, 1389, 1144, 115, 1388, 114, 1387, 943, 113, 1386, 112, 
        1093, 2014, 111, 939, 1949, 110, 854}], 
       Line3DBox[{2210, 2872, 2947, 2209, 1467, 2211, 2440, 2521, 2994, 2311, 
        2856, 1285, 2934, 2522, 804, 2614, 1046, 2935, 2523, 744, 1235, 947, 
        1050, 746, 2442, 2979, 952, 2524, 1103, 2765, 2437, 2525, 2873, 2978, 
        2212, 2439, 1470, 2213, 2936, 2312, 2214, 2832, 2937, 2313, 2833, 
        2895, 2938, 2540, 954, 955, 678, 2541, 1150, 2781, 3031, 2780, 2867, 
        2314, 2215}], 
       Line3DBox[{2217, 2874, 2948, 2216, 2446, 2526, 2875, 2981, 2218, 2441, 
        2527, 1474, 2691, 2692, 2894, 2939, 2528, 2693, 2834, 2694, 2447, 
        1327, 2830, 1657, 2831, 2696, 2697, 2448, 2835, 2863, 2443, 2864, 
        2836, 2838, 2837, 2449, 1965, 2839, 2444, 2616, 2782, 2783, 2615, 
        2445, 2876, 2980, 2219, 2877, 2949, 2220, 1477, 2221, 2450, 2451, 
        2315, 2857, 2858, 1669, 2859, 2587, 2588, 2529, 2742, 2743, 2452, 
        2617, 2786, 2787, 2785, 3032, 2784, 2316, 2222}], 
       Line3DBox[{2224, 438, 2982, 2223, 427, 1673, 440, 428, 1674, 442}], 
       Line3DBox[{2229, 272, 1898, 808, 451, 1755, 571, 437, 2092, 1250, 449, 
        271, 1108, 2015, 270, 2228, 2961, 269, 2227, 2960, 268, 2226, 267, 
        2959, 2225, 444, 1754, 569, 443, 1753, 568, 430, 1665, 430}], 
       Line3DBox[CompressedData["
1:eJwVzjlOAgEYhuHfBhgtbWztbXDftxMYEgtCwMQD6DFMVEjcxS16BQpkcNfS
xjN4BE3cKh+KN9//vd/MZPpX1wtrXRGxjJdcxGIScYEF/KHdE/HMz7snuyPm
5D634n7iU3nODXA7mYiW/shn5Rn/jlP02Wvcg+1Xr7oTz5+4Z3HPV7hXz83o
dUwj4X7knb2RjdjWp/Tjzv8gp3/LW/umewsT+hHGsed7N7ZPfkwvy1G5y7f5
q863/EfqvnRv2N9sS2hxH3rGXpIj9mvuS6b2YXmIITT5Xv836D5AHkXv/AOm
lTB0
        "]], 
       Line3DBox[{2257, 874, 2472, 664, 3004, 2256, 873, 2620, 872, 2255, 
        2371, 2619, 3016, 2887, 2254, 2471, 2532, 2470, 2253, 689, 2951, 2531,
         1061, 2252, 662, 2469, 661, 2251, 2985, 659, 2468, 658, 2250, 657, 
        2467, 656, 3003, 2249, 654, 2466, 653, 2248, 1254, 1329, 2126, 1328, 
        2247, 2475, 2704, 3025, 977, 2246, 2897, 2950, 2652, 2474, 2245, 
        869}], Line3DBox[CompressedData["
1:eJwVz0suA3AQB+DpRqlNVwRBWxKnYOUERSJdSDgA16iVKOpxAhIUtRIra6GK
erOqE7Dy/Lr4OjO/mfafZucW8vOJiJjmrd1HKiLBQUdEd1vEq2zNXOZdVu2M
yPMi35RtMcu5bIpnea/ax4b82HeeZJPmRZZkVdmjbMJc5Mj8YO7yXkU/zr05
6/aKHPuyP1b1I8mIO/tBfY0Me3a/pPQ/asO+X3/JALuygre26WFFdutmWb2g
RNPNmd2w/oQhbtysq6feHGvNXLfI62rD/Qyj+k8+qNul/Zcdv/fNF4f8A5b7
N+s=
        "]], Line3DBox[{2635, 1169, 2421, 625, 2976, 2177, 834, 2628, 1907}], 
       Line3DBox[{2656, 1183, 2463, 651, 2983, 2244, 868, 2650, 1923}]}, {
       Line3DBox[CompressedData["
1:eJwVzj8vg2EUhvEjUiSdSL+A1WRr12JsgjJaSkSXVtKklejgz2rG3obFSkcS
g8FSHQSLpBaNTZgqwe8drlz3uZ+TJ2d6fbtYHYmIVWRTEYWJiElkMIWNdERO
vygvoWxe5iLexyM+MEBF/8t/eLa/wi98zPmxiFG+stPXDcxvvKa7081zHQvY
RRP3+i87Jfmb93gfQ3mTf7hmp+uvLWST27iR3Cs/yj17DW7xDje9teUn+QBH
OMSM/Qv9g/cT8ytOcZncjJ6+Zf5EG7O6Phf41tuZfCOf85y/ruUO/gHJBTPw

        "]], Line3DBox[CompressedData["
1:eJwVzr1KwlEYgPHXJAsqEN0DF5u6gILGIAoT3HMIMSyxsRpbasndAm1ISL2B
biEwhT4InBr0Qvr9h4fnOee8h3MKp5eVVioiSthZjnhCbS1il3to6AN+QUuX
OVYjZnqPU1hCGnNnBV5wZyXiPRPxyFOzh3pfH3HN+a29E11F134PDV3nc/7g
MX7MfVo/6wku9Bk3+crZl/7VI/7GtS76ww1v8dBeHw/WM7Rxl/yP/5L/Ydtc
CcdYt+5jA5vuvfLAO286l9zlPGfN3ut/vawodg==
        "]], 
       Line3DBox[{1339, 1493, 1494, 2917, 1340, 1580, 2967, 1581, 1730, 1582, 
        2968, 1583, 1360, 1602, 2973, 1603, 1905, 826, 2957, 1885, 922, 923, 
        626, 1621, 1516, 1381, 2946, 1631, 1740, 1632, 2014, 1094, 1744, 1033,
         3027, 1747, 743, 949, 947, 1049, 750, 1310, 2863, 1245, 2091, 1678, 
        1754, 1679, 1921, 1543, 2962, 1774, 642, 1690, 653, 691, 655, 693, 
        2570, 667, 1713, 1556, 1428}], Line3DBox[CompressedData["
1:eJwV0DFLQmEUBuATaEnOCrWoU9EQNjq4NQaBQ2voFEEFLUZrS4sVhEM5SuVg
BS1ltkmjGeL/8B9kj8PDyznvvd93uYXaSeV4ISJ2KScjVlIRq1wuRQzTEbnF
iC/yNM0FOaDInXlLflOiZd6WV95tcMo9I/uW3NElZYINlnnXpeWe7kzW2adq
HlLj0HcdyTEj3Q+/PNHh3P5Rtp31ICe88MqF7ll2OeDPWdeem8kbXYpb81Rm
9Rk2ydG3z8/v0PXkB5+ssc6bfWb+X5z1D15jKgw=
        "]], 
       Line3DBox[{8, 882, 2659, 23, 1271, 2848, 38, 892, 2664, 53, 2156, 352, 
        68, 2169, 363, 83, 2183, 378, 1140, 98, 2197, 395, 113, 551, 2515, 
        128, 1102, 2765, 143, 805, 2615, 158, 2226, 173, 2236, 460, 188, 2250,
         481, 203, 2264, 598, 218}], 
       Line3DBox[{885, 316, 2494, 520, 319, 2500, 528, 333, 2600, 774, 2601, 
        229, 780, 2603, 241, 932, 2682, 383, 385, 2432, 261, 1146, 1145, 2932,
         1396, 1239, 2937, 1403, 433, 2451, 434, 271, 570, 2530, 450, 576, 
        2532, 468, 994, 2712, 501, 995}], Line3DBox[CompressedData["
1:eJwVzj0vg2EchfF/h5akXj4DEtqEWBiUwVcgEbEYKgwSaulQ8WwtiY2ZL2Cy
MGsQJF1Vo+ZKEDYWEr8OV65zzv3cd56hYmlxOxURS5hPR4xmIq4who1sRJ1z
aPdE5HnTdsNTWLBd69NySd7BszcObctyW17hW70jv2JVv9M/5Tf3vjjTG1Gx
P9gT/rat8Q8POzuR133bL4/g197Hf1x2591ZXt/r/isnvGv/4CpmbDWe5QJa
8rk3H7Evj9sOuKlP4EV+4jn7kXyKY2zZ7r07IJ9hsItvqvaG/ULv4BKT9rr9
HwUyMRE=
        "]], 
       Line3DBox[{1345, 1326, 2076, 2075, 2919, 1346, 1440, 2923, 1354, 1445, 
        2927, 1363, 1500, 2955, 1880, 1501, 1883, 831, 2958, 1615, 1512, 1617,
         634, 1624, 636, 1739, 2992, 735, 1636, 937, 1742, 740, 1649, 944, 
        2740, 1042, 749, 956, 678, 1773, 680, 1054, 2743, 1053, 1897, 966, 
        1755, 1057, 1899, 865, 2964, 1900, 1546, 1902, 872, 1707, 663, 1762, 
        2995, 1709, 1719, 1710, 1431}], 
       Line3DBox[{1347, 1578, 2966, 1579, 1348, 1441, 2924, 1355, 1446, 2928, 
        1364, 1502, 2956, 1882, 1503, 1607, 1798, 2998, 1799, 1616, 1513, 
        1618, 1806, 3000, 1807, 1625, 1809, 1808, 1626, 1528, 1638, 2057, 
        2056, 1918, 1650, 1748, 1651, 2118, 2119, 2120, 2039, 3031, 2038, 
        2121, 2122, 2123, 2041, 3032, 2040, 1410, 1539, 1898, 1540, 1683, 
        1816, 3002, 1817, 1694, 1819, 1818, 1695, 1827, 3004, 1828, 1708, 
        1830, 1829, 1711, 1559, 1979, 1560, 1720}], 
       Line3DBox[{1427, 1491, 1925, 1552, 1421, 1487, 1791, 1696, 1821, 2983, 
        1820, 1417, 1483, 1684, 1811, 1810, 1411, 1478, 2982, 1672, 1404, 
        1472, 2948, 1397, 1466, 2947, 1390, 1461, 1383, 1457, 1627, 1520, 
        1377, 1454, 1785, 1619, 1801, 2976, 1800, 1371, 1450, 1783, 1608, 
        1794, 2974, 1793, 1365, 1447, 1598, 2972, 1597, 1356, 1442, 3035, 
        2078, 2077, 1349, 1436, 3034, 2071, 2070, 1333, 1432, 2096, 1561, 
        1721}], Line3DBox[CompressedData["
1:eJwV0L1LglEYhvEn0BKqtd2oySZBhb5GoaGglpwaEloEw01oaIxA0KnFwYyG
QoLKwcmWIGiJhv4Uh6bod4aL+7mv5z2Hw5s/PT9qzkXEAW6yET+YzUesoGf+
RixEPOqrKRcj8rLDf+GP7+OVe8EV94me74K/NL/jXr/Q2+Yp7vSm3jJPcOvs
ei5iDQ19jLr9Bl/Amf6MqvmYX5ZDdyzJE36EX34fWXcM7DKyxj/gg3/ituRh
eg+6zm7qO3Ibe9wAb+k7vWhXkWXs8v30druSPk3/A9fmf8PKKCs=
        "]], 
       Line3DBox[{1125, 769, 1764, 1715, 2952, 1425, 1489, 1778, 662, 1113, 
        1112, 1922, 3019, 863, 1416, 1482, 2961, 1537, 1408, 1476, 2949, 1401,
         1470, 1648, 1394, 2993, 1464, 1647, 1388, 1460, 1916, 1083, 2756, 
        1084, 608, 930, 840, 1375, 1452, 1737, 2991, 1509, 1369, 1449, 1735, 
        2990, 1605, 1362, 1213, 2970, 1596, 717, 1074, 716, 2667, 895, 714, 
        1343, 2988, 1002, 1726, 705, 883}], Line3DBox[CompressedData["
1:eJwVz71LwlEUxvHjkAZBSwRBFPhHZFu0NRUoSZMg2tJSDb1MRUsNNTQ7NDg3
FNFoENKQQnOTY0QoZGKDYNDnN3x5Xs4993Kzlb3Cbioi8lhIR8xORsxhnp+h
tYmI26mIHF3U3dBHeY2umC/rvjIRXfSwoX/HizMFeRMtFLGlb9Mlex3zVbuf
+Nb1UTI/oidmXf6Av6NVnOkGtKz7wQA78gjb/BC/2E/23JnzRoN/sHdMD3V1
8yZ/mtwnX+KVP8e082m5gzf5Chd263IfY7t/uNY36L3uia7jOfk3PvAP9oQy
CQ==
        "]], Line3DBox[CompressedData["
1:eJwVzT0vQ2EYBuBHE1rxA4wimA1dMGjF99JKIwaTdMfQRUQkJiEdMPsLJhbT
SajFKDGQg5KQGGppbCS9Oly53+d+3vec4ep2ZasnIlYZ7Ys4zkaMyIQJ5xsm
eWKKW8bs6nKaZCCiIJ8p0iBvP5SLSO1OzKfMmgss2L3q13QtfljvjdjTley+
uTBvsK9ryXvdH/+8uP+oT2XW937tq91/O8+waZ6Xbd2cvDbX3K/JhB3nXXnH
ARnffHO3yTsfDNKvv5SLLLHMOIfen9u1efD+jCPdlfmTsjsrfNEBSWkxlA==

        "]], Line3DBox[CompressedData["
1:eJwVzi1LQ3EYxuFnYTo8STCJYUaL4DbEJhoEJxYZYlhaWtoQYU0NWlQw+LZP
YDEaBF1xYWowGcQ4mMlm0OCK1wk/7pfnPvtvutbcaGQiYgsPIxFzo8hFTPId
FOSCXKQ3ScQHLaGom3I/4X/oL1ayETPyPP9M3+x76d72ia67L9EXLNg8ui/S
Mzlvc043bZbpBfp812bV5kpuo6rboV+0ov/DEDV53/abVuVbWseY301wx2+7
N2kHLezZXeu6/G76vXyU/nf+EBPeycr3Npf0VXeMA30i99P3+SFO9e92A35c
P0CZn/X2Gv3EPxREMVA=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
OM7qj/vLrlH3l/0/Up7+Qw==
     "]], 
   {RGBColor[1, 0, 0], PointSize[0.05], 
    Point3DBox[
     NCache[{0.42875033932890305`, Rational[1, 4] Pi, 10.413022197970424`}, {
      0.42875033932890305`, 0.7853981633974483, 10.413022197970424`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.05], 
    Point3DBox[
     NCache[{1.9995466661237997`, Rational[1, 4] Pi, -18.01302219797042}, {
      1.9995466661237997`, 0.7853981633974483, -18.01302219797042}]]}},
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{357.412832088235, 196.67673350451355`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, 2 Pi}, {-18.00159804391774, 10.401597788214108`}}, {{
     0, 3.141592653589793}, {0, 6.283185307179586}, {-18.00159804391774, 
     10.401597788214108`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.48769173083864814`, -3.274321092184629, 0.7006983380502945},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.718469868713341*^9, 3.718469928693194*^9, {3.7184702352263203`*^9, 
   3.71847027452195*^9}, 3.718470563473029*^9, 
   3.719166878839588*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0nQd8FFeWr/XAYezJ8U3a2dl9O5t3mbHHOY9n7Jmd0ERjHMAJSRjbOIAx
GDDGYMCAMTnnnBEgECIHAQIRJXKQBMooJxSQ7vvODdXVTUvAeJbf76ib6u7q
6nv+3znn3qq6988v94zt+ubLPbu9+vLPn3735bdju7363s+f6vEum1r+n6io
/9M1Kioq6edR8lzx1P7R/6Llj/1PU8//Vf60lA895Nv6H/q53qzsv6j7b+L1
f5M/LXx73S8Pt8iG5yN89AHzpgNhL8kveaHpb0qJ8NKz4T/nYIQ3TTAvveO9
t1PTb3o3wksd9N9b/Nvk+aSmP/GM1x6Tm35TqXnpJ957OzT9ph9HPoT2ET6R
IH+/LZv+pdnPtvO+d748+4E8+6a3rfnPXpLH/yvPvh3hCL7pNXTzeznofW/L
CHv51pfY9otmv3eD9723N3X0f/tjCbp5rvf1d97gLiId0r1Nf9VSefi+vPKN
G9xZJEjtzsZ7R9ukq8O2vdn0zgZ4O4vk8UhHe6PN0cyXxnpfeqPuvvvmvqCt
9wVfvcEvWCt//YQ87O0i0tsjbdvb9PH8s7ezFje4sxvVyXPy9zaJ+jFNf/0P
5OFbTbX3jX7VzyNs09H+Tvn6rtf5+hYqOjr6lhv8+kjbRsrfr8lXvXadr+Il
vktv5zGisFfe+M5u83Zmd2jeExW1Wh6/Ift41fetdj/N7cPt5+b20dK/D09H
/m0rvZ29LM90lP3npnfRMsK2Ffrvt1TrVtHqmVbmSF7hMRZ7C+uFfYj1wwZg
H2EfY5/YR/l//1bRL9/cj9Gy0ALRgTLqh6ot+3kW64y9hr1uj+U9HnvbY/jI
fu+n2HBsJPY59gU2FhuPTcQmYROw0dhnZj8v3Nzx3RZhm07RUX+nAuyxnT3a
F7FXsW62td6zRy1HOxAbjA1r5kgnY1Ox6dhMbDY2x+5jhn2d9xrob/zwb4+w
bbZpco6ePCjH38m2dvjx97bf745/KDYi7Pgn2FYOP/a52AJsIbbI7AfhLmkl
TC61r/G7TBS58d/zlQjbZsjflvr3fFUr9wXMKfdN7B2r3j5Gofp7+D3sTI7q
Dn3cs2x7z7fHvBiT41zuHfvKVtEt1Cr9A5bbN/BmU13e+A+4I8K2qcEfcLtq
EyZ/55B3efVWfShf9YQksh4TJqJppmGdE+xnblEr7A+P43Ftq+iWah0v3qL/
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
sNaYGZ9TgSfzzP8fTEfQZ9y1v7vuMVOHiSjD5xGWd1xP02HbfuDVK/bivtb6
lG+HJkTtCuhwUZdXlVByuAK61p7xaELULUTTLUTQUi4FJS19QHqCH4VIuj6C
pGWP3o32OXZaBbnZ3kq61EraTYMj8xrJVDj5SDrPSfpkqKQvuvuvraQv+O7B
9kv6ZLikk8zduEeR9eGd5o7cg9uDkk7eErw3O6Kk5e4pZL11nbkR091lt3H1
9SWt77oLuzlzvk/W8nm5SVNGOyZPMzfyu3u59c38yPozN30DxcdAN2MHxcf7
FB/vfWr28SZxuttHRtavIOvO9A+f72Ve64Cs273RqNoi69bIOvDyVStrrKO5
ylmfXf5jCbK+jKxzVeDRS2b7PadV4Ndp+rlMRb/7weiQOZldnP5/N6dpN9VW
pMrDRW27NJd+jwg8NlTgfiKM1su0wstVtS6qtcJFr3VeF9YNNYvIG2tkc6Pt
Ioo1VsvmKukJNroAfm1pzR7RelS0mVXAXuCqK5Fm1C4TPhU3o3b//DFZvklF
mlP76f1myomTduaB43uDsw8ctfeeh6t9f5ja5VZjmY0gCcXvsvei/1Vqt4pf
4e4fXBh6n/o8W27L52fOCo6GyEQlem4aN1nJxGBVIkFcZg37CMX3c4q389T0
IJC/QS8yFsV3RfEvo/gXUfxzvWyP8ruqbfdG1RrBB15rsIK/qgWvFdeOXmRA
hviKZYhPBX4jgr8YFPzdqfr59rv0lKohQfyvFPz3bAUeVqKYYP4Vb+pGd5GF
LrmCem/pad2OnhRXXPb6kE7uemSvLjgaIsJvITcFaLG3EK1LMBelG7VHGbnf
4ck9vFZxgR2p2xzZ29wp76TupkfKNnOblfnkLrNH6gnrZI4z5J6P3N3cgzci
d5k26ZybSwfJnz4QlPtxO6dOapjcZbaVg8g9JZLcfTOv7G5K7utCJ+LQcnd3
29upGOJ8kl+5JBjglywMTtAh8/HIFEzy+Vn2Lnxdt0wPzrk11k7H5CbJG+rm
VJO6Bcl/iOQ/sBN3vEuQf4seZnckH4PkX0PyL/VV6oXeSnXqqVQHez1bazQf
iG20mm/QmteC08PaVXZYWzRfgOZzVOCRTBV44Dy1yynRvHfzksxV64T7wy+v
/e82p/3bvdsq3Rlxd8fLm76V//oEh8FDRhGLKgpUaWWxqqg2fWd9uqZWRgcb
VEM4By2Fg5ai/hZa/j2Dd202A0CdvWHXmz4o3zc3WK6d2C/bTLhZagEovg4A
bqK/rBPByf4y3ZxhR83kcLIfAeCMD4CTdv6wcABkYqnDDgAsxc4b4CaOk0mm
rgFAZqBJMFMQuVlobgiA5WZaIg8AbDkQLAUCmX9MT1Eks9TM8wFAzJ8GBFNm
mBkiJ7oJqoBgtJ1UcDhVzqdA8AkQDASC/hYC2Ucv4v47QPAmELwOBNFA8CoQ
dLEQPAsE7d/xYn8gRhho1Axo1ehrluiMtq2EgTIV+EORCvwuXwWeyDYM3H8O
Bk7CwDEV+OVBE/vvNSW0rr61dm+ybDcr/t0arnot+hYiel5rG3YuPbZVcP0S
txidfD4qdOy8sDxflVQWUdKXqaorpoNdW1uL8q/qDOBU3zJc9Q3VsnJjA6pv
kAlRKoKq9ybLsqrXu7TTHV4JV31OZNUXualmUb1M85xvJw7OPdO86tPdNJdW
9Wet6t20iH7Vp8pUanvN1JdHksw0iYdQfgqqPxBB9Xs2m9n0tOoTm1e9nnln
jVX9ajMJl0y7JhNxeaqXCbmWWtVjy1D+EpS/aGEw9MvnZTq2mbPNFJoyL6pM
oznRhX6ZSlOmXET5I0T5433KH22UL/voTdf1PZT/9hCqHZTfDeV3Rfmv9KO+
70N9/75SHd/Tylet3zKfcdLXz72L5+UcEPX9n0tDpK/fc99ZSp4TKnDXUaSf
orfJqhY8+pfZ+isj/3ciRP7WEvnb6KvlnfztkkX+e2dD5sRtYWd2lN0UlOVR
/RRS7Jfq7mx1TbXVf72qrwtG/QbpzjbU6iKfmh8GnJlKaIRqoAoCCIODDwlv
8qhwHNyMgW6CSP8soIIDViZT9rqZly+azwkSBX4kzhokck6b+bSz7EzMF48H
Z2MOR+KMnc73lJsB1s7OnJZspvZ1SMhssIfszKF+JPaFI4Ht3hSGBLZ9Q3Cy
SZmPbtPayEjoZNAEFjLj6NLFJhksDE8Gc8xUwTJ/t0sGMrvsuKlmHu/RPiyG
gcUQsBgEFh/ZGSb6jKQTABbv0vXtARbdwSIWLF4Di5fB4kWweA4sngGLdmAR
8LBQYVjIuHu1weJPpXZ4Mk8FHs/yYXEcLI6gvQOmp/qDLw/EtyMkBdvfReVt
df/XXaFiA7+3gpR/uvaAm+z7TpVXmkMZdFmXQeV0ByrpDlyhDKqpNT17mxBa
NENES2GBXXk0VAZpuGppqLc06F2BQtQ9qgYYrsh0uAW+aY5zfSBgJcBQDAxF
FobLFob8CzY3nDUTyzsYZDmAi26CeWBITzWTzJ+381rLPk7TNTh1yCyscSIl
FIZjdrryI2EwHACG/cCQbLsGe7cFp0p2MOxKlEJx50YVdd+Nw7DKzMSqYVhh
ZmTVMCwz0+8utzC4HCHTK8+fb3PEXDOZfUiOmG4mtR/rgDCT26vP6CYMdUCM
MZ/vR54QIHoNN0C8BRCvA0SMBeIlC0QngOgAEG0MEFFuSYrgXcp0D9rTPWhN
9+BPJcBAl/i3dIkfs2NA953xw4Dt1du33BMdMmf6X8nEtywT/ktdQpm4I+JY
kFvGq2crN/VCcLDzAjVILmAU0j8oplKSbFFBtqiquaKuUCmRLez4URNUNEie
aJCa6Wq1HNxVsLgKElcrrJW7dvxE1ZEgJDnUYFdgQk/7DRN6HneYKIeJMn9y
CGOioAkmZHmMLJi4KCuY+JbJ0EykmkVmzh4NMnESJk5YJmTZjDS7EIOfiUN2
QYYUYQLbDxfJO4JM7AlnAttppxH3mMC2rDfTTuspateaz2+IM9NPayZWmWmo
PSaW+5iw01LLHPKL4WIhXMg88rKPOXbqcS9JzDQLPUyAi3HCBfbFVMPFSLgY
brkYbGcQGUCi+BAuPqDn0BMu3oGLNy0X0XDxKlx0gYsX4OJZuGhPz6G1TRSB
122yeLXRslHvY4Nuwx+Lg+Ojj9nhovvM+GjgV4eRX4rRxPe+PBTflL/uAmD/
uSzfdDNu3NO/nnKPVv65Er9uYchQOaW56nJ5AZmikK5DiSqzmaK6ppZMUa9q
6xpstlAGCnhoEB6caR5q9IvUTVfF9AgSYEQ9HESjPJgx6sgYdWSM2mKLBlYN
HlXgUQkeFeBRDh5lFg9wVSUgUgweReBR6MMjP92sGpMr65DIwj4gkiWL+4BI
JnhkgIesvaQX+QGR82F4nPLhcRw80ux6TMeSzcI/R+zqMrI208EkswiQrM+U
vNOs0eTHI2kLTbF7s/xsPx3b7UT725qhY72fkJXNEyIT8stiGYsgZMFCHx2y
2oIsgTLbLFwzeaZevEaNx8ZByRhLyOcQMsIS8qmd22IgmaM/hPSFkN4Q8h6E
vC2E0LfuNhhCBtG7sIQ8DyEdIaStJaT1m959Q3oCAgFEzot1pHPRjn51wAFS
ACA5wfHU+04BSCqAHLHRfR8djd0qKpSFvxKTb4R1MOTR62Dc4V3EIOauzHGr
QNqh1Si31oO853xhpialAFIKIaWYmqqUTnZ5daWq1KmjDlrMoFq96WgYWFp6
sEgq0aS0FEiAF0yC2SOIiZumSCiphZKaYksIVgUllVBC8lLl+twwnZ6o/1Ac
mSqBkmIoKYKSQii5bCnJh5I8KMklieRASjaUZEHJJSi5CCUZUJIOJReg5AKU
nIeSc1By9phZqUz2cRJKTkDJcShJw1Ih5dgBs47c0WSzetlhSDkIJSlQcqAp
SrYpu6jf3XpNAk/2q32JYaVZUETLfrlZH0YnhqVmxZ9FSH/hIrNPWStmNtKf
Odes1zTVSn8SNmGmkf5YkT72BfIfhfQ/oycxzN4qPGgcPQgn/c/pQVA0vUcv
oged6zeQfizS74r0X0b6nZH+c0i/Q28KJit9ra7XgxdfBvStmaJ9ehDt6EH8
hR7E/xTZcdVstJ9pPqPHVc3JMxlXCvwyGQ6SLEVfWvxft5nC35mwAFwzLb67
XvhV36WWb4etW3OeiJtdmqfVfxn1F5EnSlB/GYVTxZVqiqdaCLhKrmh0ucLm
GkHgVid/Y9RQV2t0gnBF1D0ag3oQqK8wprNEme1dw0ENHFwptgxglXBAz0Zx
PKoMKyVjcHyqBA6K4aAIDgrh4HIYB7lwkAMH2XCQBQeX4OAiHGTAQTocXMDO
w8E5ODgHB2fh4AwcnLYcnKCjcRwW0mAhFQ6OWQ6O7jfrKR7eZ9ZUhAMzFy2u
SNoaXItML6QjlhhMC1vtGiyyPpJeh2WdMqN5pJEVy81KV6J9t0bSIqt9WadM
Vr2StcpmoP9pon9sMgxMFP1j42Bg7Ayj/9Hof6TVv3x+MD3pj63++9GT7oP+
e6H/d63+u1v9v2b1/wL6fxb9t0f/re2tyYR+Feim9HQgWmz6PlB60M+g/7Z0
Gv5Cp+F/6EE/lW/0/0iGCjxwTutfv18PLh0y+r9rj8Yo0o1LN6n/r+m/tzWl
f3d9qJO/WxHCLUb+VujUIN9U5wpNysqz+i9E/8XovxT9l1dXkQFqVDW1Uo2t
lSQDXK33MWA6Erc68RujUqq/ok8bV8uU1/WWAZeW6qiWai0DNTBwBQaqLQN0
XBTHocovW/1bBkpgoBgGimCgEAYuw0ABDORbBnJhIAcGsmEgCwYuwcBFGMiE
gXTsAhych4Fz5IOzcHAWDs7AwGkYOOVjIA0GUmHgmGXg6AFzXTjB/QDhX5YT
TSb879tllhWVj+2hf520zaya6OGw2VvsrYXatlGYiUCDKZIoltav4W3xceJZ
L2Gs8iWMFUrP1hrVSq8INxc+Zs/XSy0aPrApwgc2EUbG+/j4Aj4+Fz7sTVGf
kh8+sXwMgI8P4aM3fPSEj3fg4y34eB0+YiwfXeDjefjo2JeyyK6c0PptXRqp
1iF80HF4jo7DM1WGjz/Dxx/oOPwuTwWeyJIrO70JLk3HGj5+BR+/2k++2Gte
06WN7k7c5ImHr0ZIC3405NHNpOPnwq2J86Z3js3cvZdKwX2u0AwF5IJGQUWR
RqOosoz0UEF6qCI9XCE91JEeDBp1oOHDI2Tw6WptkI566VYIHrcIHgaOKvuR
ugoZk6qFj5oyY7LnastHVSgfLQSOqJ+oEvAoBo8i8CgEj8vgUQAe+eCRZ/HI
zgQN8MgCj0vgcRHLBJEMELkAHufB4yx4nAWPM+BxBjxOkyZOgcjJY2Yfx4/Y
YTzKssOkhcOkhUOkhYOkhRTKI80Hlrzb8LE3Ah+yBO+uLSF86CUsZZVRD5AN
ZnHExGsh0euyyRJ7a1f7CFlpltuTxRO9tLLMppUlbsziHr066SzBBpsOOlOx
KaAzCWwmCDbYONAZAzpfzDDYyHcPI60MsdgMBJv+9Lv7gs37YPMe2LwNNm/S
q3idXkU02LwCNp3BplN/Sip7K2zrYI9CtX49PK3Ihf5g04buxJ+Lg9g8fkmn
Ff2+++lz33vcnK67i373rw7wPNn8tq9/+bxyp93mAygqZMIzd3VSp1bBZcwd
PW/I2+QT3zXw5J4HHjOonEMMzweeyxUlAFRGbqkgt1SpcuCppLaqsj0LOhkG
oPpgfmnh65NfdabhcQT9u0eQBpAUU0uJVYNdAaEr4FNtEaoCITo2Bh+sHITK
SDGlWAkpphiGimCoEIYuw1ABDOXDUB4M5dhzfVkwdIk0cwmOLsJRJgxlwFA6
DJ2HoXMwdEYMhk7D0CkYOgVDJ1PtxCLfUqlkl2Nkl6NklyPYYTLMYaqsQ+B0
EJxSwOkAOO0Hp+RrUWqhkrbLksO7txmSdkLSDkfSpiBJsiCsrNkbQlK8j6S1
ZqFYj6TVZvlRTdJKH0nLLUnL9BLM+vMLKNTmL3IzJN+tJkPRJCiaMMcQNNYS
NBqCRtm7ZoYKQfTLB0HQR/TL+0FQHwjqBUHvQlAP+uVvQFA3COo6hKIMgl4c
aAiSz7f5wHRM2tizfpogOb3xqj294RKPR1CBGc2VxPOoJeiBM3TMT9AxtwTd
BUG/3m9ee+io/jVf+/Ig3dEUSHbGItdRad8qeC+YjyXbOTGL3R6jY3u20Jy0
zAakvPIiMpEBqQiQSgCpDJAqLEjVtpNS6wNJOiy+84MthaKWQhBg1VGn1VUb
0+qqrZQbiTU/WDUMVYlZhsh/qgKGyrEyGCortPxgxTBUBEOFMHQZhgpgKA+G
crEcOMqGoUs2F2XCUCYMZcBQBgylw9AFGDoHQ2ex0zB06pRd8PuH6jjpJ81W
aMfg5yh2BIYOW34Owc9B+EmBnwNh/OyDn72+VJREj3036WgXAO3cqleDb6G2
bxY1y6LwWxPNUuSyOPymBL0keQtZWTnqx0F81vnwWWNW7g1HSFYtl7WXNT7L
Q/FZSD9/PgjNo68zB5tFPTcTm05ymjbfBop/DtKEjZllaJKPD6eMG0pXZzA0
fQxNA6DpQ2j6AJp6QtM7oyjhHE3DLE2f0MUZaD7f/kNlaOqFvYvZOTZDaJKb
dLwyzuUjaPpNlssGgQeB6X5guieVNHQEmFJ4fsB8/MFj+m13fnmYvtJ8Vro9
hCR7Rt2dK/G/8TsapTMWpSxQygWlfFC6bFEqBqVSUCqnoKsUlOxUiTWheamF
HSx2QwFX9chXfa3UnjCl6sSuKI8sTSPpqYbUdKXSYlVhsKoUK3OprrxE9lsG
WqWgVaKvPiy+LBeSFYFWIWgVgFY+aOWBVi6WA1rZoHUJtDJtisogRaWDVzp4
XQCv86B1DrTOYmfOuNGc/6dOkqJOkKKOk6KOk6LSKPNSbZl3lF7QERg7bBk7
BGMHYSwFxg7A2H4YS4axZBjbB2N7YWwPlrTLfH43jO2CsZ0wtgPGtpOktmFb
SVRbgGwLkG3GNgFZYoIc08YNcsesLDCfsN5HGRa/1lKGrYkzC8/LyuarVlnK
IpAmn18EbQssaXOx2UIaNgPSpkHaVGwyZeAkt1j9Lz3S5OMjyFtC2qeQ9gmk
DaT66w9pfSGtt4+0HuSuN6AtFtpeo9P0kr3Z4lmqv/Z0mtr2CZLWuoclLVbp
ixU90jr6BxQg7Sl7g8XjdkDtIUHtJNUfqP2aTtPdoHbvQfsa2353Wp7fcXO0
/b5J2iJcs2iYd/2odvYKFv9dcrGuAvy+fkty5imIS1enLXGX6KjkQFwexBWg
+UJLXAnElV2pI4FdJYEFidPVYL1HXZTB7lYPO4Azpkfb6qQchDhSl8dbleGt
GuO7VGWF4a0CK7fprKwU1khpJTBXAnPFpLMirJB0dhnmCmAuH+bysFy4y4G5
bJi7BHOZWIZl7gLMnYe58zB3DubOnrea+p46SSY7Qa/qBLgdB7c0cEsFt2Pg
dszidgTcDoPbIXA7CG4p4JYCbgfAbT+4JYPbPnDbu4dfuSdJzh0nQdtuS9tO
aNsBbdvFIG4bxG2Fti3QthnaNmGJ0JYIbRtJaQkJ7CZhg8y24GBbT2qLB7Z1
Ymt9sGGrV1vYVhnYlgPbMmwpsC2x86cuBrqFADcf4OZhcwQ4bCbATRfgsCkO
OGwCFeP4ubaRfqxGUSwKcMPobg0BuEEA9xHA9QO4PgD3/hiAA7p3RwMc0HV3
wA01X/8CxWJHgGvX3wDX9n2Ae88AF3hDuauDvYFsPYANbwF4+2OhUftvs6kV
M6kVL9haEd7uc7wd5PkhtpHmHk7jvadNGL39yxNndvGNJoct2viQc5fIuBFt
DzkzC8u+i6fV0bwMdcoil2mRywW5fJC7DAZFIFdcXUOiqyPRXSXRGeT4rx+7
FsJdCxnLsMGg3iJXJ6Wjps1k3xoy3BWM3RrSKg1pFRWCZXm53MdVZmkrhbYS
aCuGtiJoK4S0y1gBtOVDWx6WC3E50JYNbVnQdgnaMrEMaLtgaTsHbecyvDrp
NAnuFMntJHXjCWg7Dm1p0JYGbanQdgzajkLbEUvbIWhLgbYUaEuBtgPQth/a
krF9ELcX4vZAXBLE7SbB7SLB7QK3nRa3HRSS20FuG7htBbct4LYF3DZjm0Au
Edw2yphfwkb+bBDYNmyQLpsGDeDi4w1oawFtDRa3xoKGrVptQcOWr7SgrQgF
bRG2QGDD5gLbbGwWsM0Q2LCpFrZJ2MQgbGrsnOB88p9RTA6FtsHQ9jFdswFC
G8VkH4jrPQ7aIO5diHuLNNedFBfzmfn+LhSTz1NMdhxoabNjgpq2ty1t3ey1
+C/Z+06eBbf2FSrQ2kzjGfh9HikL3H5zUQUes7g9CG73g9Y9dM1+DWr30T17
EPQeOa4CT5L+/qS7cLd9eeDMLpoeJ7zeKaSAd7HydyHuDMRlqpOXs9W54jyV
AXHZlrg8iCuAuMKqUOIqLHHVEOVRpxMcyLXUyP3CjGXUadyMUVTW2qnCaiks
a65Y7DD2ryrFKjV2qhwrI8mViln0ikGvGPQKQe8y6BVg+aCXB3q5WA7o5YBe
Nuhlgd4lLBP8MkDvAuidy3LS+ak6TaI7TaI7RaI7Sd/tBPwdh7/j8JcGf6nw
dwz+jsLfEfg7DH+HUs1xHKATlwx7ybC3H0uGv33wtxf29sBeEuzthr1dsLcT
9nYkQc+O3XLSY7vFbxvobQW9LaC3GfQ2YYmglwh6G0EvAdsg+G3YKBcerifh
rd9gTD4e7wDE1q4LArgaWwWAKwFwBbYcAJdhS1eKa5ascFNdLQZEsYUCITYP
COcsNRDOBMLp2DQL4eSFQQjHA+E4e3PMGHp2n8+2MfQ/1afCIaXmx7D4ESz2
g8W+sNgbFnvB4juw+BaZr7u9QPpVOnVdKDWfg8NnPobDATAonTp37lY4fNNy
qG98tBx2uqICHSrM8z8X0qnLp9SEwyfh8PF0W06eIs3B4b2Ww/tJeQ+SBh89
4Ti0MzA3CeJ3IkAXqWd36w2C6FaYcoP2rwQvmLMrLH1HnQDAM0Wmas4CwBwL
YD656HJVNWmvhkqzTpXVNHgAVsFXdRBAk/Z4coskQbvYZg3sabPsXeGRglVV
y9ld9ksGFPQqsHLwKxOrMOiV6KmjisvcTywEvwLwy8fywC8X/HKwbPDLBr8s
8LuEZYJgBvilg9+FbIfdHer0RZAj850Cv5PgdwL8joPfcfBLBb9jum935JRc
fn4Y/A6B30HwSwG/Axa/feC3F/z2gN5eMfDbC357wC8J/HaD307w2wF+26TY
3JYk59u3kf22Wfy2gN8W8NuMbQLBRPDbCH4J4LdBDPzW6ytK13v8xYs5/nhc
B4Nr4W+NGAzGrbX8YSvjLH+rQ/hbqeyA2GKSodgiGFyAzYfBucsMg7NgcMYS
w+BUGJyyKMjgBGHQXoE6Fg6/MAyqEbPsKNMP1Efw1x/++lJ9fgB/PeHvHarP
t+zCbtFUna9QdXYW9ujmPUPV2Y6qs20/M6DSmm5e63fdRXXkv2jYe6Xeu+60
bSk9vCJ6eGD3NNj9FuyesNg9DHYPHjc9vHtB7gHwewgMHyUt/vYc2Ome4N8M
u5ATwOHLxcqOO/lgi/aBufV8mtp78aw6kndRpRVke4toXywrUtlAl1sh0FWS
+apVIdAVA10p0JWHQWczXwtVUy8l5pV6s8laC3mPrTyrwa+q1o5OVtHb+5Gq
gsBKrKLaWDn4lVUZ/EqxEhAsFgPDIjJgoc2C+SCYh+WCYA4IZmNZIJgFgpdA
MBNLB8ELeQ67H6gzZMDTdja3kyB4AgRPgOBxEEwDwWMgeBQED4PgITLgAbJf
CvgdxFJA8AAI7gfBZItgEgjuPswv3HVIgsxuCEyCwN0QuAsCd0LgdgjcBoFb
hMAtkgG37Fb2Ct/NFJ+bQDAR/DaC30bwSwC/Ddh68IvfJGeRJf3Fb5TPCHrr
EsxXr3PorTfoxYHeamzVWt6+co1IY0WcJQ9bCn1LVjn6fmTooyRdBH0LVxj6
5mFzoG829M1cauibJvQtNvRNgr6JQp+9znUcWXAs9gUEjoLAERA4fBalKB3A
wTNcq/+L+hAMe0+0CJIC37LXfkdTir5CKdqZFPg8GHYkBbanFG1LKdqGUrS1
XL5BKRrQpSgIxoDgq/Uq0MXe79+xkp4fHAbg8I9w+PscSlE4/I3l8JHThkPp
+d131KS+h/n/Y/D5u/P66PREWv4z1DdK3i0eefaGtqZW9JbX3EmB19y6LkSQ
vZfOqcO5F1VqQbY6VZRrOnmAJ485FeVkPD949aoE8MoseJWQVaVvCa0WvniV
3VabjfIiR1dZp+wd1xU1os0KECvHyqqNlYJYiRiIFVeyk6IKyQ6FUFZQZky+
KZdaMwfKsqEsC7sEZRehLBPK0rHzBW4Q8kfqDMnuNMnuNMnuFKSdtKQdh7Q0
SDsGaUch7QikHYK0g5CWAmnJ1Jl7IW0vlO3DkiFtH6TthbQ9aWYfuyBtxxH5
ru2HBIUdoLYD1HZiO8BtO7htBbUtoLaZWnOTmNC2abeyZ2o2QVsitG2EtgRo
2wBt68WgLX6z7Hqd8LYuUZpv3UaD2toEG6zWbpD9aNqwuHiPNrUSW0GyWw5u
y+JkP0tX0/ZC20+DnFlbAGvzsbmWtVnYDFibLqwtMaxNdqzZK2bHw9s4st1Y
bDS8jYK3EfA2HN6GwttgeBtEF3DgdO/u0d5kvZ5kvXfsRbOvk/Vi6P29CnJd
QO75oUo9OzhYcbah4mxN1guQ9QLvUGm+CW7dwK1rvZcVAs+CW/syen7g9idw
+wO4PXWJSjKdipO09ii4PXTC9PzutynvkRN/qwqzZRC4nzULnFv8+iVfpku8
oHEHuvPqYG6mOlaQpU4WGugygO5SuenN5gJdPtBdJlEVWehKga68zspA4LrN
S3w+5FSFkFgu1JV5pxTKSHVl+pRCqVxMW6ovEimBvmIx6Cuq4kOFlULeZXJc
AfTlYjnQl20JzIbALAi8BH0XsQwIvACB570JDb6vTpPnTmEnIfAkBJ6AwOMQ
mAqBR+1ZuiMQeBgCD0JgCgQegMBkCNwLgUkQuBPydkLeLmz3Cdl30nEZnNxl
CdwOgVuPQBel5hZsKwRuhb5tYhC4FQI3k/A2QWEiFG6EwI1C4EYv322EwAQI
TIDADdh6KIyHwHUQuI58t3Yzb1+7SVp4bSL/3Rg0+fgaGX1Zs0GiWRwMro43
tmqdZRBbvkYzCILyZ8lqccQSO2vTYp3+Fq2Ss38LBUVsHijOwWaD40xBEZsO
jlNBcYqgiE2yVzFOAEeNIjYGGw2Oo8BxBDgOB8eh4DgEHAeB40Bw7D/NFqP/
oN4Cw+4UnzFg+CoYdqH4fIGs12kIWY/Cs70tPFv3Ab/3sXdB8K0GXXjqTPZK
rQq8aCdu6gCCbUDwLwVUnxbB32ZQfZ43CD5sB18esNnu0VN/q2rTTAv8D14n
rzkK3RkF/3sT09M9ClOg8Gh+ljphKUwvNRRmkfpyKs394AVQWAiFxVBYAoVl
9rx3uU59FcJapWaNpxrRMp36Srxys8R+oFgmECkWBIuvSD+mCPwKxUDwMlZA
EsyHvzwsB/4uYZnwl1FqT8PxmAGD6dgFGDxX5Nj7B3WKLHiCWvME/B3H0mAw
FQaPwt9h+Dt4Cc4ybZcN9pKx/dg+GNwLg0kwuItaczsMboXBLfC3FdtGBtyO
7YC/7dSbW+2I5yYY3Ah/idgmGNyUIsey6YBUfJtgcBMMboTBBBjcsEde25Ak
yGzYbU/F0ffbAIjrATEeCOOBcN1WAW+LNCUMqjVim+Sja6T4XLPRxbM4smGc
PsUXp9PhajBcBYIrsRVguBwEl4mB4VIxnQ6XxMmxLbFz7yzmcZGYxnHhKrni
bT4ozl1pUJwlKGLTQXGaQ3GJQVE+PxEcJ2DjsXEgOQYbDY6jwHEEOA4Hx6Hg
OAQcB4HjQHDsP52O4DSq0KmuKv256g6TsTD52milXhql1ItNpMUAVWigJzy+
bc+mx1CBvgqPnS2Pz8BjW3gMwOMfc+kNWh5/A4+PnTE8PnDcVKKP8Pyx08oV
njeL463hs1/6BjC/EvEWKx+K7pqlxPQMS+EFdSAnUx2BwrTLhsILUHjRR2Fe
lfmRl6GwyFBo72Y3Sa7cJD6xKJ39ZAor/l+KFWNFWGGdcrfAF9Y6MnmmCmu0
tYRxyRCXAbJADCDzsVygzAHILOwiQKYD5DlZReFcqdPjWXMzr1eBniQvnsDS
YDIVJo/B4xF4PASPB8mJB2AyGR73kBN3Zti8Boc7sJ3YbmwXTO6Aya0wuZmq
NBEmE+BxIywmHtespQlPm2Byk2UyASbXw+MGMZhMSJEzBhrJBJBMAMkNILke
JOM1kvFJgk+8RTIeJONBMh4k14HkWpBcI7ZVM6i5FCbjNmkT/HSRGmcT42qw
xFqq1Rtk86r1PiLXcSQg2VJ4NCjeEorhajYvXC0n7BeQKOetMiTOFhKxGX4S
lxoS5eOTeJyITYDK8dg4aByDjYbGUdA4AhqHQ+NQaBwCjYOgcSA09ofGvvba
l15TlXp3inIzF8bSNXyNruHLJMjOTSTIQB9To2rwdI0KjK8B40vVZjdfo0dY
TIkKi3+Cxd9n0dODxSdh8XFYfERGZk6YMvWRU38jDm16s5eF/aQ5Br2JseLT
swHRXBGQBIj7AfFwXpZKtSCeB8RMQLwEiNmAmAuI+aRDzQ4gFpmeIN9ZUivH
WGqyn8VS/t6ut5UEIVSXbTYs0O8p8FjkmSqo0dZCFVyRq6/z6Snmw2IelguL
2bCYhV2ExQzsPDyehcdTZaLGk6XebZ7HyY5pVKip2DFIPAqJB/N5OSVP9rsf
EPcB4l5ATCI57gTEbYC4ya7MkwB4G7HEc7LfzeekFNxMgZoIjAnAGA+IawFx
3XEZFEmTl9fD4Xo4XG8vKYuHxXWHpCN3UBphHeXpOsrTdfutweI6WFy3V75h
7R5x5tok9mpZXAuLa3fq13bIa2vgMQ4W47Za26L5k0p1tXQXV2sSV1sSV0Hi
KilTV8mVZivXy2sr4jWGapkxatO1smPJj0usaSDjxCuL4iyOf6/mQ+dccJwD
jrOwmQ5HbBpITrXXxkwBy8nYJGwCSI7HxoHkGGw0SI4CyREgORwkh4LkYJAc
BJIfgWT/WWYfH4BkL5LkuyDZY4orbn6sXiNBvkKC7EK/8cXhSj0nwzQkyA4k
yLYwGRAm7ZJWgR4kydfhsWuNCrxcrQIv2Glz2wNkm8sq8GeA/ANAPgWQvwXI
J87q4hQgW/zVJAbng7YUmustb/MgDAPQBZv49ByVmGHuldl98YJKzs5Uh+Dv
WEGuOllUQGYpomNYguDLEX6lyoG/PPjLJxFermlwExwVgQ7FpcasROrRUukF
lug86PKfYFdgbzO7VeV62OWCnLWWKlenwBxwywa3S9hFcMvALoDbOXA7jZ0A
ubRSM7DTQh0tlsvJjkDaQSjbT77bQ67bAVpbyXHbwGt7lvm/PMq2TdShCdSe
687bxAFWcdgabK0+5bD2tFSCp6Sx42BtJaytSpMXVqeK2I9psVvS4g7zaSFt
tSZtNaTFQVrcfmuQFgdpcZq0OE1aHKTFWdLiIC1Okxa3Q2czSFu9zZoUpKvl
Ys7V+mLOVWS+VYlBk8+vlDPyKwW2lRv0cCdpbzm2LN7aOj0Ws07DRlG6xJqG
bY3uC66RyZlBTi20tgCbZ7mbvcrHHTYdm2bP3E/lcQo2GQYnYRNgbzw2DvbG
YKNhbxTsjYC94dhQ+BsMf4Pg7yM7ieSH8PcB6bAX7L0Hez1g743JyqH3Cqmw
C+i9CHrPUZt2pDZtTzpsSzoMfGSR031FOUF4VQVi66hLr6hAlyrbTwS7tmD3
F7D7H7B7OpNceIG69Kwdqjn5V1BnTzjwTv96Wy4DGvh+3BR8xu3pl6EvF/rM
7Ti7oG8f9KXkZqmj0HeiyKzukQ59meXlZMBKmLgCG7UQWA+BDWSqxmBB2VJT
VmwMHRXrIRqX9IS8fJv4cuR6l2z9p8aVkDxT2freNvl7h7oIgpngl4GlYxdA
8Bx2BgxPgeDxMhcdv6EOUX4esjMrpYBhMglvDxjuAsNtZLpEsIsHudVktzhs
DeitzZDUlKHTTrp5aQUJb+lpV8ku0fAtJdktPalNRHxCTpovBcal9AaXploj
6y2BxSVkvMWHzWEsovpcCIhLpAJdekAK1aWwuBQWl8LiUirQpXswOFyCrZAB
mhW73R2IKyhCtVGIrgDH5duErm1yQCvJfSu3aOOAVkr+Wyn5b0Wia8kV5ECM
V1cIlCskA8JjC4FRDgMkgVHbknU+FHlcLLXpIvmzcI3ITzCcb1Gcs9qHIjYD
m77SfHYaSE7FpmCTwXESNhEbD5LjsDEgORocR2EjQHI4SH4KjoPBcZA9f9if
dPghSH4Ajr3A8T3sbXB8Exy7TXb9xf+rXviCcpR+YkdK0/aUpm2HWAb7B8tS
6SMGupMCoylJXyEFdrYn6NvBYSCP/iEc/t5xeM71BW8WQnelmn2r/t9jdptv
qTuL4y3hKBr5/gA5FqoNGXlkBXNvz65LGRRmFzWJR/Jz1fFCQ+IFSMyAxIuQ
eKmyGhproLGenNWg8gyJuobUtWmdulXYa6G7fbfr5Cf45QURVFnYJX2T6aUa
t2j0JQpOMcFPsDsLcqcFOewkdkLQw1LdrAPQV6pUCgTuh8C9doLLHdC3Ffo2
QV8CiW8tSW8l9eUSEt58ktz808C/4Iw0lPx33mltSHbuKXcks0l7syFtJqTN
gLLpEDYVwqbQt5sEXWPBaQJpbqZkvhkHZYh0BsBNO2A7RlA2AcImQtdMaJsH
efPYNk+es30e2+eSAWeT/WaB2vxd7GbxLmmrxfamhsXQtxj6FpEIF4LdYt0N
XCYpcZnuCy6jL7hskzYJDprApbYCXaoJXCq9waW6N7hsA29c71lLAbGFEGgF
pPlbq9PhWgmAC/k/FKoF1ubB4dw4yyE2a7W8d+YqFfV3aoYdWp3G41SYnIJN
hsVJ2ERsAjYOHsdgo+FxFDyOgMXhsPgpLA62ZzgGwmN/UuOHsNgH6w2PveDx
HcrTt0iPr09TKmaKUq9Ocjx+Tz1DN7GdvZAtMNjkxIAbr5GzhjJ+2o2c2JWc
+LItRZ8pom8Ih3/OphSFw6fg8MlzJpeo658I/IqX/R71IRia/X7m4dbeZj7d
MUgvI/QXqYTMfLXlYrbafvESvGXCWxZdoxx1pCBPpRWaCZHPlZao9PIyOlqV
VIHVVIM1Kqu6DuYaYM7wlk/ayrfMXTap7lZ5goxcxsu1L2db5C7qnJcp1Wbm
FXdSjGfqAsydrTKcwZc6QpV5GDtU5lr7KyoZ0PYCWhKgbcunt0VqW0PnLe6i
PTGy6pIAvZxst4iUNpc+2wxS2GQ9YDIxjUabkCZvGEvOGkWuGg4ug0FiwG6X
Tm9Vg8BjOHQNBZdPeW1Ikrsr7RY1hm1fsG007xmZZAfWv6/GQdE0Nk2DqmlQ
NY3/TwGjSSA0AYSmYDN5Po9t8+zsHvPYNhe05oDWbDLaXGzBFo2ZWqyz22LJ
boskuy3UbC20bC3UQ58LJbst1Gwtgq0l2FLz2FIt0T2+JaS6xdZ04yyWbt8i
+bNQTs8vWCvvmg9o8wBsLjZHun2z42RwfRaszbTz1s6At+nYVPiagk3GJmET
4WwCNh4bC2NfwNcobAR8DceG2lGaQTA2EMYGYP1grC857wPsfVh7F8Z6wFd3
+IqFr9fg6+XJ1JsTg7OrtaHLF6DLF5CacwDW156f0KcIyXPd6Op1Jc+9bPNc
+wLqTdj6n4vUm+l/TW6700PsIdvBc4hZzMwoS0tdY9oryrzxv9UZZRRcRWrj
RZO5tl/KUbuystTenGwoy1NHLheotCJzjfi5sjJ1gayWXl4BadUqs7IG0uog
7SqlYKPXRcurNaTZDCcjJ5LeIAyE5IU8y5mYTW3CmsrA0vV9eReuSOhIt8u4
nRHUSG9p4HYE3FLIY/tKlLuePQnKdmO7IG0r/boEUlkctC2hWpxDvppyXGOl
dzWWHDWGHDUaqkaSo4ZDVq/tVwzbEOWfzbXNxMuq44wS69vbVHfyQQwSfBV9
dUFD0Ty+FW8nR2ip+pJfeqP7fonKTMHFL5gJNTOgZDq0TCMHTcdmbfYIaqHm
b9aZlY/OS9QmmdU7ezA3QYnJNk3PPKhZgMGSkAQmG+StizmwRcYkKcU7DfDM
mOZI/ixYJ69Bk2ZJ8yR4zV0r3bo5YDUbm2XHV2byOAOupmPTsKnYFH7zZGwS
NhEbD1tjsS/gahRtMgKmhtthlk95HAxbg2BrIPlrANYPvvrAVm/Y6klbv03u
eoO81Y0asis15CvUkJ1h6rmJNmJ9QwXoxgU+selKcOoFSu/QfXuTVNWNVNXV
pqpOhXTf6Lr98eJf0U37qpfN7rfdNj9FoQOWP/NuS9Dds4tVKi6zXK2/WKw2
XTIJaXtWntqVnQNGuepAfj4YFYJRsTpVUqrOlpWDUrk6X16p0sEoo/IK/ac6
CrmrKstiJH2snBqTkRxO+uvzZMiELQjWZSs/QZmOIsg5r2f+P3dFMtxZEtZp
KDphbxQ/CkkHSVj7Sr0zDdsKZW6zLfCzgXIwjlJwGZlqPqlpOgyNg5sRsDKI
4qw/WaVvkjlQN9+ZPE9AL3o2QN8Mym7OcD1FrFsRZaGZIjZkRkw3a/IM34oo
drVMWbVq1Hj6D3DZkX28yP5eYf/drE7f5hjeRMo9sPfBoB/UDISmIYA2HPiG
AdtQCBvCtqHYCJ5/wWvjt6hvWnZn2Xw1S8M2a4O02Wwgm4OBnpofCl6UTmek
ufWO1IUcAyYvSLG4IF5egDY13xgvyN9/V/P4/1xrc7DZtvFmcfAzsRnYdGwa
P24qNgWbjE3CJmLjaeCxgPcFjfw5NtJ27IbzOJQG/xQbDISDaPiPaKj+NHxf
7APg60XDv0Ojv0WDdyeZxdLgXQHvJXuTeqdJSnWgoduMVd65AfptXq3YF/B6
USO+Qx57gzwWW6UCr5UbUDrmh0NnWItqDrqve6nr3utB5xJWHD2gNfR51l6s
UBsulahNWcVqS1aR2p59We3OyVd7c/Mg7rI6UmguDDtZUqbOlFZAXYU6V16l
zkPchYoalV5ZC3VXoc4IOQtiLHVEyNxa51ihLEdfkJJT60pAXRvW+mjDLhji
1Fk9MnKmWgqxk9B2HDtG7jpiZ75KLrNt+1u1tVCpRLpfa3Ia1bLMBjXv/FU1
7XQ9rNWrYQfrVN/dNXoW811odqdvJs5tvhlqN9mbsmW+QZl0zc0zqCdbs7PS
6rkFF9vpmd2MtG5uwfm+uQVn+aZnnhq6yJZe4XOsWZFIPvfxSOK57Uu0G1Ou
Xua7ovnO7nx/D46jJ7L+gGPrz7EO5LgH8DiAY/6Ex6H8lhEWuDH8vrHYGDlt
/sVGaeFxvDSRnzwFm85LM7EZ8lyM16YluPm3bvX4nOcY1fwu0PzK/+fbG/zk
cQG20DxGaUJBUv7Mi4fkeesFzrkc8RxrGkoeZ/FLZmIzsOnYNGwqNgWbjE2i
5Sdi4/nVY7Ex2GhbjY7kcQQtMhwbileGYJ/QSgOBdAAt1g/v9MV6A2hPvPM2
XnmTyPg6kS7G3i3RBY88jzeexRvt8USbcco7fT3MZUbA7EtG7AWYb9cCJ1kx
pqLJ68iCPbcWHoA/aprS4Kykd4f14YJTO/y9v1+nbQ2UrL1UrdZdqlQJl8xC
HVuyS9T2nCK1O/ey2ptXoA4UFAKquZDsREm5OlVaqc6UVaqzgHqu/Aqw1qoL
lXUqHVAzqs2VPRftuEdWjQVWo0qXzd6hIp03Z/L/sOJSg0pSFETVaUwglaJS
0uF+Csu9Jaaa3FGk3GLs6+m+raGoXHChUY1PrVEf7ylXPRJNpt9P38gtPeCW
HfCAlQlCE3zArvcBi3T0RCRxwRkS41YEJwR1k4HKdLkyK+ICNyviwuDMV3pW
xFlmCmk9Ve5Uu7jGRLO4hiwhNsxOkTuIzv9HI81Sj26J6Z520fTn2EcX9tmV
73mdY3ibY+opyRTry3H255gHWpKG8ls+4zeNFIh5HMH/P+dxDDYem8j2ydhU
IViPrEzWvE62N0DIo9hUbBo2HZu5QX3FJmIBed56N7I7XwZDF8gfnt0iL+h3
AL5AP8ce0mweZ2moZ66X12ZwuNOxadhUbIrOy5P5+y9qEv+fgI3HxtrUO5rH
z/mpI7ER2HAI/pQmGIxbBmEDcc0ArB/k9qF53sdF7+Get2muN61bonHHK9Qw
nUmnz1O/dKRv2A43tCadBmzMDAwD00/InwNAtQ+o9qSAfZs82r3K9tmvRbWl
r0vnAWm5DRvP/EHTBLtp9wKv1zo+o1pFYFmPx5j+zA/VOlJivMCbZerrLTnl
akduKfAWA28h8Barw0UG7OMlFepkaZU6VValTpdVqzPlNeos8J6vrFcXgDe9
ymRZGTzRAMuYSpb+UyuXlzlQXfBoClTJpqmVeqBF7SJ9bqdc3VKg06jtpr2k
Vmab/Uw51ag+O1QfsmDIQXsbj6PWmww+bNJrTW1CcNLrTVZqMgdKwjozEZeb
OshNUefmM9VzmZqJt9RCewnWXGQye6Fv4i2Zq26WncJ3upn4XVZBGDXRLg4y
znxOFv8LX9NSFtR+z64+/ObHEEtp1n5Mg3puQr16aWqdiplZq15f1qh6cFw9
7SVk/TnmgRz7J9in/JZPeRzO4whsFL/xC2ysIxibIMa28ZbaCbxvIs8nYVN8
9M4w9ErFbOplGemRHmtLTajT2i1Gs/M3GH51d5Zn7s23G4ztPmbZfc4w0YHP
8U1UkVM5hinrzfdPsVFEjmmC/aKxPI7h9dHY59hIfuNn2DB++6fYYNAehA3E
dwOwfvivD1i/Tzu9t8Ls4w18FoufuuKnl/FRZ5B+HqSfxUft8VFrfBQYFxyA
CwwB549AuQ8o96z5X8b423YvegDpnXrXvP/ZVFZ2R7k623To1mRfVWuz6oRs
O43d19XuvDK1N79EHbhcqg4VmWI+taRSnSitVich+VTZFXUams9U1KmzlVfV
ucqGKLdkSzpUZkBopp7y2Bst1anWBHC4pWctPU9Nb6Wh91iFqYcPlhuC1+dA
Ese3Osu1bAe1hM7nwgyUdrrRrHXSxBIPKY7oHWFEb/YRnRh5RtZES3WCb0Yj
mc1ozarglHorfPOqLF4anOZBF8929qIZMnPRPDMDpZ6d2E7KrSfkRjEjoXr4
BPMZb20TqO4H1X2huvcwu1LtkOCKb7FQ3XWAWeSw/celqtOwcvXCpFr1Et/1
mk06by0zyv1AEhTHPYjfMQTFDxW64w3dQoKmW48UwYed33E82zXV6w1Jfqqn
+8mmvWYnaLL142xL2xyL8Vet5ufagn4Oj7PlOgPpSt+iZvKRGdj0BF24t1BT
9R95g1QHP1eTNpqaQT4rlb9EoS+w0QmmrhiZYOqNYXzvp9hgjnfQehPNBmAf
4rc+diDgPdrhbdrjTfz1On6KWWzaStrsRfzTCZo7QHNbEnQb+rqtXSlN3hvS
GAbr/wbA33UAdyfrv+8B/G++nV8z7czfqVWChka40YdwjYrP0gFHJeZUq625
VWpHXqXanW/GlQ9cLlMHi8zzYyVV6njpFXUclE+U1aiT5bXqdEU9SF8FafO7
z1eZsxoWaX4YIAO1oCyIy4CS6+Keu2Kb7U51FJplLOmoJfpQuaH6QJkhe60M
w7q5Kr6uZp8367f416m4Dtzmvld6y6tWBudfcXOvuKkgtPDcNBB2gqMp8+y8
lgA5zk2TDJAjAfKzSRZGqrNPAHIgQA4AyA8B8gOAlJXnZPnFHr41uPTqcwPM
52SWfHls/UkF/TFzb93ziOsV+myxfG8Pvr/XUpNe+pGCPwLOT6SqlOoSSEfE
GzA/jzfpSqcvHsdhDsxJzYEpJysNYF7mNIzeqhPqbRpXQVJboh1d3qTMyaHb
1Ez+O2Oj6U/rPrXpX7eQDjdV8jQC59TNxiZvtiUA28Zj46THzrYxm80o2uf8
fyQ2gl0MTzS9+yHYJxzBxzx+ZG+/7MPv6R1vRgbeldE62uQN2qcbPu2KH1/G
fy8CaydSbwfasd0sH6i2E6PcGNEtfxMcv+fKYjkp8x4ZvF+D+fAvImZUabpv
qlVIOpxI6euuw+Kzay2RVyCyGiKrILJS7S0oV8mXK6LcqNrRkmqVWlqj0rDj
ZbXqRHkdVNarUxUN6rSdJlrOL56DxvPV+FrOh9xq4JNTj9bOVLt8eadHnc6F
PCaLSXcW214ouV/6r8otQDDlVIOadMJEIG+JDP/qMcm2LKP9Dtiz7Psomn3L
YchqGHqm5/BZbN3cm4k2VcgsSxvcDEtrvWnMTJfvZ2quf/qIRXZmMiCaOMfM
4yxzOI8G3lHAO4Ju1TA3xznwfowwPgLefp+bRZFk8byew8wCMG/9/9q+PDir
68qTAS+J7cRZnHSSzmTrLidd1en0TDI9Pf9MTVV6anqqq0cGExuvGC8YjDHG
xpjFgMHs+y4ECEkIBEJCiEVIQvuO9n1HgFiMMRgwtsEGpDu/3znnvvcBkiup
mqHqfEKfvve+d889v3PPPfcsEZ3CXrHif89hNX1qurS48Nr1sWU3Zaf2NORs
DG7/Kr5qAr7+TTzWFOiYd6FvZkBGZ0FW3weWP8DTL+ZO0e8eM9Ts9Pj1i2p0
5gD41dWQO9UsL19cIdXtHC/vJWQHyNXfMLkJRxTF23OUEg2T2/EzAb/Hg+Jy
bC3+G7cl3/ba+BkN2kjCxK0HrQOtBa0BrcL7K0DLMJlL8sxRjt8X2PVz8fsc
fMV7uP10PNK7eNQpGMZkDG8Shv062DAe7BgL1rwEFo0Gu54F257CTD6pzv3/
j9bwD0wdREWdVZf0zD51VS+zm/zSPhbplSLtBYLTIlCcDhTvP0MU33SHzt4A
ihUXOee+dPkfXXdF56+50o+/cOUfA8kXvnBVF68FsGsCgpuvfOVaPr0BJN8E
km+59s/6XYehmEeX3UxZBF4xCv7aGUEdZhn7cxmun0cvu+BIk++V4GcxqOAi
reR+eqF8+ak1TV9JO4/INgZEc2uNsXfI397e6Mb3gSoN+0DdheyIGu53VdXN
VmTn3IHsw76k0wGtJuMryfgqMslpWrUiaa+dlv4PKRIjVZpYnSlBi+auhm22
MlZroS2x0tMs8zkPSJ8DpM9arZ08pgHp7wDpbwHpk4D014H08dbqideMnoVd
G5A+ahrk8B1tg/b4m+aEmXfTjVgBGV0lB/fuRXzXq3iGCZDZN6CFJtMVCxl+
F0vSzFR1APE6Qn4pnUR0FoFW04GUEbFc3wH3zWrwCuR5PY1gQn0bWBhH81eM
5ASJhY8HewlxQhk0jLi2+EIeFCfkKsXr4TGUhxwab8OftuUL8bcCvsZiEmO1
2Z16VfC6CJO8ALujD/D++/j7bFwzC/QeaAZoGu7zDm79Nr59Ep7udTz9eIxs
LI+6DwyO4tB3PCz439d4kf9KXu9zUW9wu9ynERKMlsBEjFivp70/4WfuMcW8
BzvAlNMQItBtkD1DuPapKQyoZpztc5kf3gBcvwJcv3SF56+7YoHsNVd2QbOx
qj/5ytVd+so1XFZjrQlQbf70lmu52udaAde2z/yOtYOZ/YAlnr71Mw05aJFi
bi2fU9k0RzRx4PJaInmN+SxFn3fBKy/sY92O4/1DfIrHQF1HOhrMKv5t2JYq
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Spin Wave Function", "Section",
 CellChangeTimes->{{3.718732142328045*^9, 3.7187321625067163`*^9}}],

Cell[CellGroupData[{

Cell["Local coordinate for spins in ground state", "Subsubsection",
 CellChangeTimes->{{3.718732171683177*^9, 3.718732214469037*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], 
      RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]3", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]3", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "[", "4", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]4", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]4", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718732222979663*^9, 3.718732245544861*^9}, {
  3.718732296369285*^9, 3.7187323861424046`*^9}, {3.7220074192659674`*^9, 
  3.722007460696218*^9}, {3.722010373507238*^9, 3.7220103760863485`*^9}, {
  3.722096195352906*^9, 3.7220961980085735`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"S", "[", "i", "]"}], "=", 
    RowBox[{
     RowBox[{"Z", "[", "i", "]"}], "/", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718732706571398*^9, 3.718732776011696*^9}, {
  3.719255966968883*^9, 3.7192560361604757`*^9}, {3.719257034445321*^9, 
  3.7192570523931026`*^9}, {3.7192578517250032`*^9, 3.7192578575943522`*^9}, {
  3.7220071644107924`*^9, 3.7220071750369234`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7201952622887144`*^9, 3.720195284991826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BJ", "=", 
   RowBox[{"J", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0"},
        {"0", "1", "0"},
        {"0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7201952913076906`*^9, 3.720195301530614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BX", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"Kxy", "0", "0"},
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "\[CapitalGamma]xy", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BY", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "\[CapitalGamma]xy"},
        {"0", "Kxy", "0"},
        {"\[CapitalGamma]xy", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BZ", "=", 
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "\[CapitalGamma]z", "0"},
        {"\[CapitalGamma]z", "0", "0"},
        {"0", "0", "Kz"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
     "BJ"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"h", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZM", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"H", ".", 
      RowBox[{"S", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7187328675104713`*^9, 3.7187329200572395`*^9}, {
  3.7187330077931395`*^9, 3.7187330086056814`*^9}, {3.718735101396516*^9, 
  3.718735102193427*^9}, {3.720195316201436*^9, 3.720195327128065*^9}, {
  3.7220072072275867`*^9, 3.7220072598929243`*^9}, {3.7220079900163956`*^9, 
  3.72200799159501*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.71873310084011*^9, 3.7187331485621133`*^9}, {
  3.7220072294296055`*^9, 3.7220072297108755`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "2", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "I"}], " ", "qa"}], "-", 
        RowBox[{"I", " ", "qb"}]}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BZ", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], ".", "BZ", ".", 
      RowBox[{"S", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "3", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "3", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", "ZM"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7187336079394827`*^9, 3.718733658272017*^9}, {
   3.718734416826456*^9, 3.7187344302101526`*^9}, 3.718734581075245*^9, {
   3.718734653416236*^9, 3.7187346775914855`*^9}, {3.7187347489666414`*^9, 
   3.7187348157451925`*^9}, {3.718734861917691*^9, 3.7187348635583997`*^9}, {
   3.7187350812113624`*^9, 3.718735174818839*^9}, {3.7187352323131423`*^9, 
   3.718735241636572*^9}, 3.719257872671686*^9, {3.722007264683402*^9, 
   3.7220072660275173`*^9}}],

Cell[BoxData["hamiltonian"], "Input",
 CellChangeTimes->{{3.722007387148033*^9, 3.722007394306899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HH", "[", 
   RowBox[{
   "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",", "\[CapitalGamma]z_", 
    ",", "J_", ",", "h_", ",", "qa_", ",", "qb_", ",", "\[Theta]1_", ",", 
    "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", ",", "\[Phi]1_", ",", 
    "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
      RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", " ", 
            RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], ")"}]}]}],
        ")"}]}], "+", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]z", " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
        RowBox[{"J", " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]xy", " ", 
            RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{"J", " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], ")"}]}]}],
        ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7220963151028185`*^9, 3.7220963151493497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pKxy", "=", 
   RowBox[{"-", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pKz", "=", 
   RowBox[{"\[Minus]", "5.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]xy", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[CapitalGamma]z", "=", "7.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pJ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ph", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Theta]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}], " ", 
       RowBox[{"p\[CapitalGamma]xy", "/", 
        RowBox[{"(", 
         RowBox[{"pKxy", "+", "pKz", "-", "p\[CapitalGamma]z"}], ")"}]}]}], 
      "]"}], "/", "2"}], "+", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Phi]", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQbZ+0J1R792vHuF7FaBC9rH/xEhB9un8dmPY15t4J
on8sajsIok+wHzkBoo05HoPpZKldl0H0+o8CN0D0LnWv3yD6iXo4mPbRl/4X
CqSZJz3nDQPSG7ouCYPo9N23wHTLYUlJEG3+w1YRRH94X6kBondE9ILpWz8n
m4NoO5VDjiD6WPOn7yB6Z7jODxC9xddqcR2QvnPWFUy7xzDcBtEZiWxgep5i
yHcQvX9hPJi+uuk+fz2Q/m4uKwCiq5L8nBqB9JxH4WA675ynD4g+UBoNpp8I
9Ws2AWm2xwfBNACuwqOi
  "]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ff", "[", 
    RowBox[{
    "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", 
     ",", "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
    "]"}], ":=", 
   RowBox[{"HH", "[", 
    RowBox[{
    "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", "p\[CapitalGamma]z", 
     ",", "pJ", ",", "ph", ",", "0", ",", "0", ",", "\[Theta]1", ",", 
     "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", "\[Phi]1", ",", 
     "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.722008837687688*^9, 3.7220089084081135`*^9}, {
  3.7220093289032955`*^9, 3.722009348642643*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ff", "[", 
       RowBox[{
       "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",",
         "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]1", "<", "Pi"}], "&&", 
       RowBox[{"0", "<", "\[Theta]2", "<", "Pi"}], "&&", 
       RowBox[{"0", "<", "\[Theta]3", "<", "Pi"}], "&&", 
       RowBox[{"0", "<", "\[Theta]4", "<", "Pi"}], "&&", 
       RowBox[{"0", "<", "\[Phi]1", "<", 
        RowBox[{"2", "Pi"}]}], "&&", 
       RowBox[{"0", "<", "\[Phi]2", "<", 
        RowBox[{"2", "Pi"}]}], "&&", 
       RowBox[{"0", "<", "\[Phi]3", "<", 
        RowBox[{"2", "Pi"}]}], "&&", 
       RowBox[{"0", "<", "\[Phi]4", "<", 
        RowBox[{"2", "Pi"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", 
        RowBox[{"p\[Theta]", "+", "0.8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]2", ",", 
        RowBox[{"p\[Theta]", "-", "0.8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]3", ",", 
        RowBox[{"p\[Theta]", "+", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]4", ",", 
        RowBox[{"p\[Theta]", "-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]1", ",", 
        RowBox[{"p\[Phi]", "+", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]2", ",", 
        RowBox[{"p\[Phi]", "-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]3", ",", 
        RowBox[{"p\[Phi]", "+", "0.8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]4", ",", 
        RowBox[{"p\[Phi]", "-", "0.8"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.722009356019616*^9, 3.7220096030702066`*^9}, {
   3.7220097576280017`*^9, 3.7220098414694953`*^9}, {3.722010216637813*^9, 
   3.7220102544467106`*^9}, {3.722010507769291*^9, 3.722010547420768*^9}, {
   3.722011659149336*^9, 3.7220116747633657`*^9}, {3.7220117139625683`*^9, 
   3.722011767836405*^9}, {3.7220119620558987`*^9, 3.7220119759008737`*^9}, {
   3.7220121761697807`*^9, 3.7220122887532587`*^9}, 3.7220123392180357`*^9, {
   3.722012375843334*^9, 3.722012389639645*^9}, {3.722096446370172*^9, 
   3.7220964604001956`*^9}, {3.7220965350600967`*^9, 3.722096606172509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.33972121100988`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", "1.9413990561362982`"}], ",", 
     RowBox[{"\[Theta]2", "\[Rule]", "1.9413990568754014`"}], ",", 
     RowBox[{"\[Theta]3", "\[Rule]", "1.9413990675395163`"}], ",", 
     RowBox[{"\[Theta]4", "\[Rule]", "1.9413990611354226`"}], ",", 
     RowBox[{"\[Phi]1", "\[Rule]", "1.3401520719967364`"}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", "1.3401520759019159`"}], ",", 
     RowBox[{"\[Phi]3", "\[Rule]", "0.2306442750406843`"}], ",", 
     RowBox[{"\[Phi]4", "\[Rule]", "0.23064428495312114`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.722185321870341*^9, 3.7221853335011477`*^9}, 
   3.7221870950777273`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.33972121100988`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", "1.9413990561362982`"}], ",", 
     RowBox[{"\[Theta]2", "\[Rule]", "1.9413990568754014`"}], ",", 
     RowBox[{"\[Theta]3", "\[Rule]", "1.9413990675395163`"}], ",", 
     RowBox[{"\[Theta]4", "\[Rule]", "1.9413990611354226`"}], ",", 
     RowBox[{"\[Phi]1", "\[Rule]", "1.3401520719967364`"}], ",", 
     RowBox[{"\[Phi]2", "\[Rule]", "1.3401520759019159`"}], ",", 
     RowBox[{"\[Phi]3", "\[Rule]", "0.2306442750406843`"}], ",", 
     RowBox[{"\[Phi]4", "\[Rule]", "0.23064428495312114`"}]}], "}"}]}], 
  "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p\[Theta]1", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.9413990561362982`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Theta]2", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.9413990568754014`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Theta]3", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.9413990675395163`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Theta]4", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.9413990611354226`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Phi]1", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.3401520719967364`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Phi]2", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"1.3401520759019159`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Phi]3", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"0.2306442750406843`", ",", "53"}], "]"}]}], ",", 
   RowBox[{"p\[Phi]4", "=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"0.23064428495312114`", ",", "53"}], "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.722107627564742*^9, 3.722107685978546*^9}, {
  3.722179234998393*^9, 3.7221793454413934`*^9}, {3.722185448960021*^9, 
  3.7221855404382553`*^9}, {3.7221871302339783`*^9, 3.722187187293295*^9}, {
  3.722187220071927*^9, 3.722187242073668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.9413990561362981512871783706941641867160797119140625`53.", ",", 
   "1.941399056875401374355760708567686378955841064453125`53.", ",", 
   "1.941399067539516298808166538947261869907379150390625`53.", ",", 
   "1.9413990611354225990226041176356375217437744140625`53.", ",", 
   "1.34015207199673636040415658499114215373992919921875`53.", ",", 
   "1.3401520759019158735014798367046751081943511962890625`53.", ",", 
   "0.23064427504068429897188252652995288372039794921875`53.", ",", 
   "0.2306442849531211425340160303676384501159191131591796875`53."}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7221076879829*^9, {3.722179321285756*^9, 3.7221793466137733`*^9}, 
   3.722185549195156*^9, 3.7221872534849024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["p\[Theta]1"], "Input",
 CellChangeTimes->{{3.7221076918272457`*^9, 3.7221076972619233`*^9}}],

Cell[BoxData["1.9777739740358748`"], "Output",
 CellChangeTimes->{3.7221076985409403`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7221076127762985`*^9, 3.722107614198247*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "Z", ",", "X", ",", "Y", ",", "S", ",", "hamiltonian", ",", "S0", ",", 
    "SX", ",", "SY", ",", "BJ", ",", "BX", ",", "BY", ",", "BZ", ",", "H", 
    ",", "ZM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.722095895086872*^9, 3.722095927165406*^9}, {
  3.7220987365272136`*^9, 3.7220987398392878`*^9}, {3.7221090577813115`*^9, 
  3.722109169883439*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "2", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], 
        RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "3", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]3", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]3", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "4", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]4", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]4", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]1", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "2", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]2", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "3", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]3", "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], ",", "0"}], "}"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "4", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]4", "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], ",", "0"}], "}"}]}]}], ";"}],
    "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"Y", "[", "i", "]"}], "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"Z", "[", "i", "]"}], ",", 
         RowBox[{"X", "[", "i", "]"}]}], "]"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "4"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"S", "[", "i", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"S0", "[", "i", "]"}], 
        RowBox[{"Z", "[", "i", "]"}]}], "+", 
       RowBox[{
        RowBox[{"SX", "[", "i", "]"}], " ", 
        RowBox[{"X", "[", "i", "]"}]}], "+", " ", 
       RowBox[{
        RowBox[{"SY", "[", "i", "]"}], " ", 
        RowBox[{"Y", "[", "i", "]"}]}]}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"BJ", "=", 
     RowBox[{"J", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"1", "0", "0"},
          {"0", "1", "0"},
          {"0", "0", "1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"BX", "=", 
     TagBox[
      RowBox[{
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"Kxy", "0", "0"},
          {"0", "0", "\[CapitalGamma]xy"},
          {"0", "\[CapitalGamma]xy", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
       "BJ"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BY", "=", 
     TagBox[
      RowBox[{
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "\[CapitalGamma]xy"},
          {"0", "Kxy", "0"},
          {"\[CapitalGamma]xy", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
       "BJ"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BZ", "=", 
     TagBox[
      RowBox[{
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "\[CapitalGamma]z", "0"},
          {"\[CapitalGamma]z", "0", "0"},
          {"0", "0", "Kz"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "+", 
       "BJ"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"h", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ZM", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"H", ".", 
        RowBox[{"S", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7220958469314423`*^9, 3.722095882117812*^9}, {
   3.722095950527494*^9, 3.7220959760452347`*^9}, {3.722096128964814*^9, 
   3.722096168814884*^9}, {3.722096990899536*^9, 3.722097017134716*^9}, 
   3.7220986575575447`*^9, 3.722098728214326*^9, 3.7220991577624617`*^9, 
   3.7220992622013636`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "2", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "I"}], " ", "qa"}], "-", 
        RowBox[{"I", " ", "qb"}]}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "1", "]"}], ".", "BZ", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], ".", "BZ", ".", 
      RowBox[{"S", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"S", "[", "3", "]"}], ".", "BY", ".", 
      RowBox[{"S", "[", "4", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "qb"}], "]"}], 
      RowBox[{
       RowBox[{"S", "[", "3", "]"}], ".", "BX", ".", 
       RowBox[{"S", "[", "4", "]"}]}]}], "+", "ZM"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"hamiltonian", ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SX", "[", "1", "]"}], ",", 
          RowBox[{"SY", "[", "1", "]"}], ",", 
          RowBox[{"SX", "[", "2", "]"}], ",", 
          RowBox[{"SY", "[", "2", "]"}], ",", 
          RowBox[{"SX", "[", "3", "]"}], ",", 
          RowBox[{"SY", "[", "3", "]"}], ",", 
          RowBox[{"SX", "[", "4", "]"}], ",", 
          RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SX", "[", "1", "]"}], ",", 
          RowBox[{"SY", "[", "1", "]"}], ",", 
          RowBox[{"SX", "[", "2", "]"}], ",", 
          RowBox[{"SY", "[", "2", "]"}], ",", 
          RowBox[{"SX", "[", "3", "]"}], ",", 
          RowBox[{"SY", "[", "3", "]"}], ",", 
          RowBox[{"SX", "[", "4", "]"}], ",", 
          RowBox[{"SY", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.722099318153477*^9, 3.7220993201514764`*^9}, 
   3.722109028405633*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UPH", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
         RowBox[{"J", " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{"J", " ", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], "0", "0", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "J"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[CapitalGamma]z"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
           RowBox[{"J", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
       {"0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
         RowBox[{"J", " ", 
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], "0", "0", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
           RowBox[{"J", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"J", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]z", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}]},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "J"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[CapitalGamma]z"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
           RowBox[{"J", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
        "0"},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
           RowBox[{"J", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], "0", 
        "0"},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
         RowBox[{"J", " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "J"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
         RowBox[{"J", " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}]},
       {"0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.72209975709083*^9, 3.7220997592805176`*^9}, {
  3.722099798176035*^9, 3.7220998964670453`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"hamiltonian", ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"S0", "[", "1", "]"}], ",", 
          RowBox[{"S0", "[", "2", "]"}], ",", 
          RowBox[{"S0", "[", "3", "]"}], ",", 
          RowBox[{"S0", "[", "4", "]"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.722100013668973*^9, 3.7221000149037457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DIA", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
          RowBox[{"h", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"S0", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"SX", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"SX", "[", "2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"S0", "[", "2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"S0", "[", "2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"SX", "[", "2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"SX", "[", "2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"S0", "[", "2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"S0", "[", "4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"S0", "[", "4", "]"}]}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SX", "[", "4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SX", "[", "4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"S0", "[", "4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]},
        {
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"S0", "[", "1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"S0", "[", "1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
          RowBox[{"h", " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"SX", "[", "1", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"SY", "[", "1", "]"}]}], "-", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"SY", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"S0", "[", "1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"SX", "[", "1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"SY", "[", "1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "1", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                 RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"S0", "[", "1", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"S0", "[", "1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"SX", "[", "1", "]"}]}], "-", 
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"SY", "[", "1", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"SY", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"SX", "[", "1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"SX", "[", "1", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"S0", "[", "1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"S0", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"S0", "[", "3", "]"}]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"S0", "[", "2", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"S0", "[", "2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"SX", "[", "2", "]"}]}], "+", 
                RowBox[{"\[CapitalGamma]z", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"SY", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"S0", "[", "4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"SX", "[", "4", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"SX", "[", "4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"S0", "[", "4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"S0", "[", "4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
               RowBox[{"J", " ", 
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"S0", "[", "4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SX", "[", "4", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"SX", "[", "4", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"S0", "[", "4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"SY", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]},
        {
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"S0", "[", "3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"S0", "[", "3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
          RowBox[{"h", " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"SX", "[", "3", "]"}]}], "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"J", "+", "Kz"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"S0", "[", "1", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"SX", "[", "1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"SX", "[", "1", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"SX", "[", "1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"S0", "[", "1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"SX", "[", "1", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"SY", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"SY", "[", "3", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"SY", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S0", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"S0", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"SX", "[", "3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"SY", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"S0", "[", "3", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                 RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"S0", "[", "3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"S0", "[", "3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"SX", "[", "3", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"SY", "[", "3", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"SY", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"SX", "[", "3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"S0", "[", "3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"SX", "[", "3", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"J", " ", 
                   RowBox[{"S0", "[", "3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"S0", "[", "3", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                   RowBox[{"SY", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.722109558343915*^9, 3.7221095854168177`*^9}, {
   3.7221096248750744`*^9, 3.722109667845723*^9}, 3.7221097157591343`*^9, 
   3.722109758574889*^9}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"SX", "[", "i", "]"}], "=", "0"}], ",", 
     RowBox[{
      RowBox[{"SY", "[", "i", "]"}], "=", "0"}], ",", 
     RowBox[{
      RowBox[{"S0", "[", "i", "]"}], "=", 
      RowBox[{"1", "/", "2"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7221047948990684`*^9, 3.722104820379871*^9}, {
  3.722104854104227*^9, 3.7221049450125732`*^9}, {3.722109728419108*^9, 
  3.722109730157118*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", "2"}], "DIA"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7221049616680984`*^9, 3.722105008637373*^9}, 
   3.7221052571527147`*^9, {3.7221056814230824`*^9, 3.722105688424077*^9}, {
   3.7221845741645856`*^9, 3.7221845768145027`*^9}, {3.7221847951523404`*^9, 
   3.7221847975854588`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Test", "[", 
   RowBox[{
   "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Theta]3_", ",", "\[Theta]4_", ",",
     "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_", ",", 
    "h_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
               RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}]}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]2"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
               RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
         RowBox[{"2", " ", "h", " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]3", "-", "\[Phi]4"}], "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]3", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", "+", "Kz"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "h"}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
         RowBox[{"2", " ", "J", " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
         RowBox[{"Kxy", " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
         RowBox[{"\[CapitalGamma]z", " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
         RowBox[{"\[CapitalGamma]xy", " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "h"}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
               RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.722184892044306*^9, 3.7221849959021587`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.722185051733358*^9, 3.7221850544355307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Test", "[", 
    RowBox[{
    "\[Theta]1", ",", "\[Theta]1", ",", "\[Theta]1", ",", "\[Theta]1", ",", 
     "\[Phi]1", ",", "\[Phi]1", ",", "\[Phi]1", ",", "\[Phi]1", ",", "0"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.72218500264513*^9, 3.722185075051874*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]1"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy", "-", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]1"}], "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]1"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy", "-", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]1"}], "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]1"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy", "-", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]1"}], "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "Kz"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "-", 
        RowBox[{"\[CapitalGamma]xy", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]1"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "Kxy", "-", 
           RowBox[{"\[CapitalGamma]z", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]1"}], "]"}]}]}], ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7221850762278123`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"UPH", "+", 
     RowBox[{"ConjugateTranspose", "[", "UPH", "]"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "qa", ",", "qb", ",", "Kxy", ",", "Kz", ",", "\[CapitalGamma]xy", ",",
          "\[CapitalGamma]z", ",", "\[Theta]1", ",", "\[Phi]1", ",", 
         "\[Theta]2", ",", "\[Phi]2", ",", "\[Theta]3", ",", "\[Phi]3", ",", 
         "\[Theta]4", ",", "\[Phi]4", ",", "J", ",", "h"}], "}"}], ",", 
       "Reals"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.722105062368746*^9, 3.7221051037233105`*^9}, {
  3.7221051401050153`*^9, 3.72210520116745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hh", "[", 
   RowBox[{
   "qa_", ",", "qb_", ",", "Kxy_", ",", "Kz_", ",", "\[CapitalGamma]xy_", ",",
     "\[CapitalGamma]z_", ",", "J_", ",", "h_", ",", "\[Theta]1_", ",", 
    "\[Phi]1_", ",", "\[Theta]2_", ",", "\[Phi]2_", ",", "\[Theta]3_", ",", 
    "\[Phi]3_", ",", "\[Theta]4_", ",", "\[Phi]4_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "h"}], "+", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"2", " ", "J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
                  RowBox[{"Kxy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "h"}], "+", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}]},
        {"0", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "J", " ", 
               RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "h"}], "+", 
                 RowBox[{"\[CapitalGamma]xy", " ", 
                  RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                 RowBox[{"2", " ", "J", " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
                 RowBox[{"Kxy", " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "-", 
                 RowBox[{"J", " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h"}], "+", 
                 RowBox[{"\[CapitalGamma]xy", " ", 
                  RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", "0", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"J", "+", "Kz"}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J", " ", 
               RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h"}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                 RowBox[{"J", " ", 
                  RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "h"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], "0", 
         "0"},
        {
         RowBox[{
          RowBox[{"J", " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]2", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", 
         RowBox[{" ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"J", "+", "Kz"}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]1", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ")"}]}]}], ")"}]}], 
            "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "h"}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "h"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "J"}], "+", "Kxy"}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], "0",
          "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]z", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{" ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "h"}], "-", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"J", " ", 
                   RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"2", " ", "J", " ", 
                   RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"Kxy", " ", 
                   RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "h"}], "+", 
                  RowBox[{"\[CapitalGamma]xy", " ", 
                   RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
                  RowBox[{"\[CapitalGamma]z", " ", 
                   RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                  RowBox[{"J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
                  RowBox[{"2", " ", "J", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
                  RowBox[{"Kxy", " ", 
                   RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                   RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]},
        {"0", "0", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kz"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]2", "-", "\[Phi]3"}], "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]z", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]2", "+", "\[Phi]3"}], "]"}]}]}], ")"}]}]}], "0", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "Kz"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "J", " ", 
               RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
              RowBox[{"\[CapitalGamma]xy", " ", 
               RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h"}], "-", 
                 RowBox[{"\[CapitalGamma]xy", " ", 
                  RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
                 RowBox[{"J", " ", 
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                 RowBox[{"2", " ", "J", " ", 
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                 RowBox[{"Kxy", " ", 
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h"}], "+", 
                 RowBox[{"\[CapitalGamma]xy", " ", 
                  RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
                 RowBox[{"\[CapitalGamma]z", " ", 
                  RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "-", 
                 RowBox[{"J", " ", 
                  RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], "+", 
                 RowBox[{"2", " ", "J", " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
                 RowBox[{"Kxy", " ", 
                  RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "J"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], "0", 
         "0", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"Kxy", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{"Kxy", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "0"},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[CapitalGamma]z"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"qa", "+", "qb"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"J", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]1", "-", "\[Phi]4"}], "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]z", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Phi]1", "+", "\[Phi]4"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], "0", "0", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"J", "+", "Kxy"}], ")"}]}], " ", 
              RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
                RowBox[{"J", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", 
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}]}], "-", 
             RowBox[{"\[CapitalGamma]xy", " ", 
              RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"\[CapitalGamma]xy", " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{"J", " ", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "qb"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"J", " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
                RowBox[{"\[CapitalGamma]xy", " ", 
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[CapitalGamma]xy"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"J", "+", "Kxy"}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]4", "]"}]}], "+", 
                   RowBox[{"J", " ", 
                    RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Phi]4", "]"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], "0", 
         RowBox[{" ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"J", "+", "Kz"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "+", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
            RowBox[{"Kxy", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], "-", 
            RowBox[{"\[CapitalGamma]xy", " ", 
             RowBox[{"Cos", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], "-", 
            RowBox[{"2", " ", "h", " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"\[CapitalGamma]z", " ", 
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "+", 
            RowBox[{"J", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{"2", " ", "J", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{"Kxy", " ", 
             RowBox[{"Sin", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]3", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J", " ", 
                RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
               RowBox[{"\[CapitalGamma]xy", " ", 
                RowBox[{"Sin", "[", "\[Theta]4", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Phi]4", "]"}], "+", 
                  RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}]}]], "Input",
 CellChangeTimes->{{3.722107135862564*^9, 3.7221071577309937`*^9}, {
   3.722107200119095*^9, 3.7221072114755297`*^9}, {3.7221072581194496`*^9, 
   3.722107267144745*^9}, {3.7221073268262196`*^9, 3.7221073373960137`*^9}, 
   3.7221074174061737`*^9, {3.7221074498562403`*^9, 3.722107529072883*^9}, {
   3.7221086124405346`*^9, 3.722108690512494*^9}, {3.7221851365005536`*^9, 
   3.722185199299713*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HHh", "[", 
     RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
    RowBox[{"Hh", "[", 
     RowBox[{
     "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",",
       "p\[CapitalGamma]z", ",", "pJ", ",", "ph", ",", "p\[Theta]1", ",", 
      "p\[Phi]1", ",", "p\[Theta]2", ",", "p\[Phi]2", ",", "p\[Theta]3", ",", 
      "p\[Phi]3", ",", "p\[Theta]4", ",", "p\[Phi]4"}], "]"}]}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{
  3.72210773970303*^9, {3.722107808767522*^9, 3.7221078174796715`*^9}, {
   3.7221078499692516`*^9, 3.7221079503431377`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]1", "\[Rule]", "1.9995466634121046`"}], ",", 
   RowBox[{"\[Theta]2", "\[Rule]", "1.9995466630292433`"}], ",", 
   RowBox[{"\[Theta]3", "\[Rule]", "1.9995466632629986`"}], ",", 
   RowBox[{"\[Theta]4", "\[Rule]", "1.9995466630114254`"}], ",", 
   RowBox[{"\[Phi]1", "\[Rule]", "0.7853981826424605`"}], ",", 
   RowBox[{"\[Phi]2", "\[Rule]", "0.7853981829186581`"}], ",", 
   RowBox[{"\[Phi]3", "\[Rule]", "0.7853981810817325`"}], ",", 
   RowBox[{"\[Phi]4", "\[Rule]", "0.7853981813906392`"}]}], "}"}]], "Input",
 CellChangeTimes->{3.7221805740431566`*^9, 3.7221808812612915`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HHh", "[", 
    RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
   RowBox[{"Hh", "[", 
    RowBox[{
    "qa", ",", "qb", ",", "pKxy", ",", "pKz", ",", "p\[CapitalGamma]xy", ",", 
     "p\[CapitalGamma]z", ",", "pJ", ",", "ph", ",", "1.9995466634121046`", 
     ",", "0.7853981826424605`", ",", "1.9995466630292433`", ",", 
     "0.7853981829186581`", ",", "1.9995466632629986`", ",", 
     "0.7853981810817325`", ",", "1.9995466630114254`", ",", 
     "0.7853981813906392`"}], "]"}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.722180144848753*^9, 3.72218026060594*^9}, {
  3.7221808962756968`*^9, 3.7221809865966415`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EE", "[", 
   RowBox[{"qa_", ",", "qb_"}], "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"HHh", "[", 
     RowBox[{"qa", ",", "qb"}], "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{"EE", "[", 
  RowBox[{"0", ",", "0"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.722107827570992*^9, 3.722107985919957*^9, {3.722108029316346*^9, 
   3.7221080330275545`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "10.187852695888612`"}], "-", 
    RowBox[{"2.220446049250313`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "6.34753653925308`"}], "+", 
    RowBox[{"1.2997257758584476`*^-15", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "6.106147557684038`"}], "+", 
    RowBox[{"1.2938694080196741`*^-15", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "5.799530248545784`"}], "+", 
    RowBox[{"6.087906081136214`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.799530248545787`", "\[VeryThinSpace]", "+", 
    RowBox[{"2.0247883125381604`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"6.106147557684043`", "\[VeryThinSpace]", "+", 
    RowBox[{"9.405860602057869`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"6.347536539253078`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.083072852718119`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"10.187852695888603`", "\[VeryThinSpace]", "+", 
    RowBox[{"6.210310043996969`*^-16", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.722108034735303*^9, 3.7221087057559185`*^9, 3.722108738866892*^9, 
   3.7221793710467253`*^9, {3.7221802674607954`*^9, 3.7221802875606227`*^9}, 
   3.7221803212947493`*^9, 3.7221805998067555`*^9, 3.722180759880204*^9, 
   3.722180991535198*^9, 3.7221852578143206`*^9, 3.7221855705321293`*^9, 
   3.722187283170851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", 
               RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "*", "3"}], ",", 
          "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"2", "Pi"}], ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", "3", "]"}], 
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Pi", "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
               RowBox[{"2", 
                RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}], "+", 
           RowBox[{"2", "Pi"}]}], ",", 
          RowBox[{
           RowBox[{"2", "Pi"}], "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
                 RowBox[{"2", 
                  RowBox[{"Pi", "/", "3"}]}]}], ")"}], "-", "t"}], ")"}], "/",
              "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EE", "[", 
         RowBox[{
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}], ",", 
          RowBox[{"Pi", "+", 
           RowBox[{"3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", "3"}]}], "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "/", 
                   RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "-", "t"}], 
              ")"}], "/", "2"}]}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}], "&&", 
         RowBox[{"t", "<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "Pi"}], "+", 
            RowBox[{"4", 
             RowBox[{"Pi", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}]}]}]}], "}"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"2", "Pi"}], "+", 
      RowBox[{"4", 
       RowBox[{"Pi", "/", 
        RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"Sqrt", "[", "3", "]"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}]}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ",", "Dashed"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.15"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<Y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<\[CapitalGamma]'\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", "3"}]}], "+", "0.15"}], ",", "0.08"}], "}"}]}],
        "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<M\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"4", 
            RowBox[{"Pi", "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "+", "0.05"}], ",", 
          "0.08"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<X\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"4", 
            RowBox[{"Pi", "/", "3"}]}], "+", 
           RowBox[{"2", "Pi"}], "-", "0.15"}], ",", "0.08"}], "}"}]}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"2", "Pi"}], "+", 
         RowBox[{"4", 
          RowBox[{"Pi", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722107994149173*^9, 3.7221079959310055`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
U4b7FVPfK12ioC/xW7GGpQxDwxQpmxei+MZ0688UVca7kNLU8ZuiRC/pmVFy
yhDePznjWYAolLa8yt+pqQyhzB/vHvaLQNZKJf/tQmXI0I1v/scQwVRnSe6V
aGWo7GJGc22EoL8l4e67WGWIxfT6yOgJwfmbf5F0gjIuBpzbM1dKCFfeajw4
eEEZSyzvRRl+ZMH26alq95vKcKw8bXEylIXItPVfZF8q49K6Tb6i95m4w5v7
bXGDMmZVWgydvMbEuwR2W9gbZXiuYwUvi2VCP/r5z+4vyjixw6M8aSMTtSEz
B2v+KEMneDLKQYoJaScRiaOyfPi++CsquosBi9oWqVI2Hy21T2V71jOwflGZ
bI8iH+kb1G20ljOQN28n10uDj9zNt5VDjRhYof9JY44ZHwKHT98/dNKx/1qR
9g4LPm5HWx+w/kjHNbV4vey5fOzYUPpmqJaOQfYiE84CPsm7war1t+k4R8+1
7HPl48va0WcmoXSUH4yep+/Oh7Pl35+WvnT8GPG2Xu/JR+3MFXNTPemw/KO4
8OVmPqovCZn5LKRjg++AHcuXD2315BsNlnREt79cMi+Aj8zpCQNnTej4+DHc
6UYIH+H5wa56inQwVnmt+LaPD/9eVfqIFB1GDbNX8sL4CAzyyhOw6Dj4rNvj
eCQfqzY+/R3eR0OG7TOvspN8rNzwounBTxpePkzfMBDHx4EV7YFO32hQK1y1
dWMyH89dIB9VT4PPi9SRgVQ+Dvu1HD9dQ0Ne67cTkVf4eFhwoZPxmIaxUR1l
pUw+ysNvmbTco2GB3PabN2/w8fJp3yzDAhpi9POsrO/wsWtW1Ycvt2h4Sw29
rL9L9i/9q+1fFg3bAg/3Dj3gw9LnBzc0jYb845VHT1TwMSP8RVJDMrGfJqbA
r+KjYaOs3rlEYr9wecbt53xc7Xy/8ulpYv9F4iy84oPinrriHkPDm9b31Y2N
fLRWf9i7Mpr4M6bqvuUdH3f5/y24F0nWk/PuHPnEh4vHwJqIY2Q9/ev7T37j
I2GxlUhBOFmP+i2h+p2P7V+dTy0+SsPC1WYXczv5OOmUpIQjNMQG7plm+4eP
MUXXD6mHiT/Hyx419fPxzLzl+///D6Z+ke7iM8KHD69++T7C2wrtWkf/8dHn
q6Q4Sjj/xandMTQVottc574n9sZa61nqQiqIFv5xlUPWXzDGOZcvpoKpkqXm
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
/wEP2m2t
     "]], LineBox[CompressedData["
1:eJwUm3c8VW8cx+29ufece7lclxJlREXE+VJGSBQNkSItUrKSkcgeRUuFjKg0
ZGREIquMiqwSJXtvsn/P769en5dz73me7/y8VdL2Fw84sjAxMfGwMzH9/6cw
fa46KyJOZ0GHdTrbGYcQdvHiLSyuxBd68aENF3BI8CpO52S5Thx8FLvbzwUH
D+ehsX+B4cRR3ZM6uZdwePqGV3yOOZYo+7eV8t4NB7EXjA8X9O4S6fUzpdFe
OASk73ToD3xAXLa4QSP74jD62JzTriKRuN03wmtwHYctDbktI8wpxPlju8T4
Q3GwN/4gt4mRRgS8vyt6LBqH+Jpa71N66cStnX9f0u/gwP6xm9YZ+JzI6p56
/jMVh4sdnGoDzNlET7OgV3UFDjwP+W3YRXKIyMPPX9yoxyHjiGiwDCOXwJK5
eM614PCrRbLNTu8tEWalJxszgIPRt+0+7YFFxOO+6fff+CjQE6P1ZD7uHbFZ
6oq7LpkC/vt0G8TSignlVPOiIikKUPgM51VzS4g5g5Lz6vIUyKs1lbKoeE+c
/1eVUqhKgf3hB4wufi8llgb7MrV2UWDY8IhrdM8HQor9yXqpPgX0WJUbWrzL
CM0Xpl9zzChw6292dy9zOYE9GlG02keBrvJt8zPh5YSgid3WMRMKbE4p4GEV
+UhwOmqNXDWmQLXdezVpRgVx++JKrZchBVZ+fQq21asiJNzWDy4CBYxLTB46
11YREy4RdF2CAvcffXntc6CaMBnq0L2mTQFV6+a2B/Y1xHQwvaNrJwXOtf2W
bw38TEwY7R1VROfPz7fX6eOpJViq634rqFCA7V7fgdm4WmKEP6lXUokCyZYj
PiJpdcRXqbmwUXT/1sb5BrOKBmJPYpmMtDQFpPs5inqYGwllsSB1LgEKNGPT
8k9MGgmB1GexprwUCNnb+fDU3UZiJeBMRBgXis/LXN++TU3Ez/0blwdYKJDj
dgIG9n8nvvbnO+9dwGEP87ua4cQW4mBoc3pJFw6nJS60Tu38Sbgcddmd+RwH
3OyIYU7QT8Jb3+n1zgwcaq/tLrzc8JPouDgTX43qQ6mH8nDmRAfxdq7l/Y9H
OCw8r7adC/1FfG9d4hlB9RWmTu/719JF7DEKdR50xcHq+dDiemE3oans0lir
iYNky+ojl45uYtzzDNcLdRwGmUR0Ole7iR0CtH8x23C4ekQz8J3eX0LZwT3P
XgmHJM5IHo/6v4RjVUuADgM977hFfPh3DzEnYa0wzoNDdiy8P8LSS9xKniuS
5EKff29pVyPbS8yMSFVasePAT/JLe3Kul8jSypxtW8dAtbJhs91ML3H/W4rH
1jkMfBkXdzVz9BPHJHI7bLsx0DcL6tKT7yc0Al5Ocf/GQODq/YBsk35iC5OP
1IdfGKQ0fqiMudVPnBNyttdvx6A6QGjfXuoAEfmQq7XqKwY3X8pOFOwaIA5L
l62UNmBwpF0jdqPdABGtTnb/WIfBiPLJFtYnA8RyQ+bIYA0GQr+zbUsVBwn3
SwkChWUY/OCpXt9iPkjw+bjXc37AIHXHz5RHlweJK5d/MDm8x2B7DEv/lYJB
Iujg4tFd7zBYKyKHDfwYJMgeCpXvCjH41KegcGhlkJjtaVTWL8DAWvugi5ru
EPHqxsU4/zwMZM6dEUp1GCJ+iY3UKeZiMHrHJ0coZIgYzuqNHMrG4Npo2vxY
7RCRw02lh2ZhYIQXxtuMDRGRdu/Uzr3GQGRPvWad4DBBsDw2PfIKgyePZv2f
WQ4TXWI+XMdfYPDuc4zGec9hgiElddQ7E4NvC5umN8cPE61mV5NTnmPQv6Hi
xVjRMCGk+XOx9RkGKwdtHbM6hgkfcdkACtIigQuSrqvDRGfc933nnmKw6U1s
u6rUCMF9dtG3OgMDna7NcbMwQliba8ptRfogX7VJvv0IUVzQ4Pg8HYOzmifY
r9wYIbZH+VooI+1/dql0Z8YI4c6XzFLxBIM79+5cWa4ZIZge0mNPIZ1ZqaT6
fmiEqIh2FxNDumz604g/7yhhJvQ4rTENg1a6QzoojhJ755SsEpEeNVs9zrJ/
lJB9qE14Ic3idx+vvDRKCHy64GWHNP5ia1Nw3CiR8GBY5BDSSj/qIg3zRglX
h9MbjyG9h/O0PnfrKLGUTKl2Qdp6O9N67cIowdJbzh6L9CWHh4VRlDHC81Py
v3KkQ2K3XTbTGiMMR65mM6PzJXz4slnIdoyI67unZ4509tjZvkb/MeKlccn7
V0hXi7M+vp08Rthlqm6jovv/2pt4xOrjGPH9Xln+XaSnvdRFsN4xYvpVphUd
xY8ro7GunX2ckH6aQ3+HtGSzU/BDuXGi24Es54Div42Fg7DZO06ws9/0Ekf5
OXFcM+d31Diha8Kh/A7l0zOq2Snl9Tjx8Xjbm2SU76h3Lhscvo0TTV4ncu6h
eigkp8X3i04QOsonT2WjevmyR/vAs+0TxJil/eZWVE+9l9t4zx+eID5MbnnM
8wYDwa+818YeThBZGsp5qTkYyK6ma2SVTBB3MqLPcKD61dwM05e6Joj70cyj
3m8xyN39TnVJaJIQdT8YcgvV/+/H4+l+lpPE9noszxf1z3B+ceBxx0lCQPv6
U7tyDGYbwuwIz0lCrTviwYEKDHhWGBTm+EmCiLYMPov6cceRw1E3OiaJrtS6
V5bfMNC9KHvOcXSSeKZgVl/QhIFpyJS+weok8eXG1ymFFgzs8yLXOaWmCEuu
HGPdnxjECJVdjrSfIsYMT/xR7MNAIl49/Kf7FOGtKGVgPojqTSrrsXzoFLGl
ZtoheASDKqWk+poXU8SvybPpctOoH0x9N7LNTRExRWclTZhwiGie2XWQc5pg
bI6XZ2FD89nG6WAqZZqY2nIzto4TBzUn6wDQmSZKVh7vvCuIw/lwjZ++odPE
XvpRdhY6Dv+E3kzWPZgmDCQmMWNZ5Efi5TjFX04TLsINM2mbcEh5St5W9G2a
cG8OfRm1FYf2qtnoOcoM4V6JuSnvwcGAJVvX5eUMUamm25iC/Exz+KYj70tn
iJ4izaFFNN/thZNd+BpniJVu7pmTyJ/40W8+ypybIRzrU/acDMQhT+fCXL/O
LOGUdTMQf4ADw0f+uV3jLOF2YA7f/RmH9ZkUIYv5OUKTCZ8WV0P7sWrw2BnO
eSLt3gepRLRPee4pP/XD54kR6yLNjWgfkzXea2dqzhPhy26wH+13CW628DKT
eeJzndLL8YMUYPw0bm61mScGMmU571pTQMm3/TzrtXni1Oyha3NnKLBtn1Q+
5dY88UooXzTLhQKakqeZVVLmCSeZ8GAXDwrAxEtTg5x5Yr8ELVrNlwL6ZTP3
bSrmCX2PU92rgcgPxGr2XG6eJ1pMJtUbwilgbn9dKbxvnqg1GtqTcosCh9Q+
eT+enydqlnoP8NymgA2bYNVbzgUiWt5x77koCti3WAnV4wtEwK+EA/XBFDib
kXDsr/wCQbv89b3aNQq4GylMC5guENdXBpaELlMgMkpf6uytBWKWyrHGf4QC
78R8vamUf0RaVfvfYxsoUNb3sVJF4R9R/jcS24L8VHU+t5Ch1j+C/dsQEweF
Ak1H7me42f4jYv1eHWtHfmwoIed7fco/QuXIVlXmOVRPG4YUryksEr9Tr7/O
q0H7eV7Z+67WIuE1Ouhq8hEH2RrPyhemi4TWBc6SqRIclM+xHWt3WSTqc8l2
LjmoPl5JhW3NXSTEs/HtqknIz24/9LdHa4loFF/s2u6Nw5qn4ZmzZktE/xHF
0/fcUf0VaoyOnlgi2nwtlgSR343XEp+fC14iktrtWM3P4ED34/O5Gr9EeASU
WGAOODwvXV1fy1wi1vze2S0ex+Gd7h9urm9LBO/VymOCh3HYHdQYE/UX/fxT
O2nPQRzqKz+KCs8tEScdzsvd3Y9Dp2E6jUpdJnwD2puijXBgMju/dcupZaKi
eO/hHi0cwm8ey3/juUwszyQOsO3EQaTRVGt7+DLB8L9yR38HDjKWyvo6r5cJ
3W5Ptw2oP17epdd+LFsmXATHt1chf7KtTXi/4fdlwuDTqe3BW1A8rGePmP9b
JkLMpwdPo/768qivs5lnhdDY6y0avhGHw52t9kdpK0QdVnSmHvXjH8lPA53K
K0QGVQ3fKoPD2RNFzvZ6K8SZ/PqDBdI4TKVkTvVbrhC8Dh/07VA/X+155Ol0
ZoW4/CucJC+FA8uG6OUJ7xVCN/Bvv5gkDpGn/QPco1YI1unMHwwa4odnF9kX
k1YIp/5e7oMSiD+GTkT4Za8QbKee3UwXx2HD5gOCLJUrROou8WtUpF87774T
0rpC3Jg4N5hNxWHH620U3qEV4spYeZsT0h8mNiTdXF4hXu3ZZ2WEtNFWTEZM
YJVIKlR2NET622WuZ/H0VaLKKJjzHNJH8xa30NRWCdJGe41XSP+dG85O0V8l
NCjNE6LofefVf+3YeGSVuHaoTzoR6ZkrDcWZ51eJnaXJpUbovL7vSkHZb5U4
F4zlkNF92FayqnJvrhL2emd7OdB9o7VTjDVSV4mwQzU7KSge5GtxX0vyVol9
WWFx+1C8HpcFWerWrBKKLQp1aSiem1g8flT9WCVKCIcScRTvN7tPHzceXSUy
+jZrvUX52Bl8uOfL2irhttyIX0L5+lhtdPag8Bqh2MYuY4ryacylOdYms0ZM
DY/I7FXAwSZSYuGP0RqRsVFEOh3VQ289v6/jsTVCrDIkmRXVywWBdabhC2vE
Pm2CFqiGg39sN89M3Brx+lPsVKcGmr/3MyTZO9eIwzKed7j0cTD/aa2sNrFG
DOScrDf7v15pgnCSeZ3w0GZxyTbB4Xiq18n3G9YJP2plTO0BHKivjJ54uKwT
IhVuO/Tscfg8sZKXFrBO0NSulJw8jcMV1eyqxrh1Qpv34buH53FoLaAMKBas
E5q1jiGHEV/GfRyW719fJ+72PuqbDMYhOXA/jYebCezmOcq/RaD9kfZ8g7QI
EzhUfKmovon4tN92x35ZJphz+HJjBs1zdufqwy+MmEBv4+2C3Vk4lHvef+gQ
ywS3Nie9P9aJ5kv8VOrVh0wgPDFudK4Hh0tFJi9i05jA6lrTUPAQ6veV9eIP
b5nA5LTJs2E0j/yvn+0U/8kEC4pJjVaCiIdSP/ap9jCB2oP95V9JFFCslBjf
O8oEsRnDe60kKPCLo3HNa40JhsT7XK8jftKM2klvZjBDwa5nhw/soUDcq9ub
RjYzw4L5Jn0a4r+hL2MqLNuZQaXIynPSggLxwqm6KobM0OjGy/XajgKTqit7
Dc2ZQelpb8L90xQwtDx04PhRZlD1IHWFXqDA/D0ehygnZtjUOdV21YcCZoWn
nNLcmYGIlq33Rfsh/Uep2zs/ZhBo/NgThPbDyhLu2xjCDK+/DJXeRPvBUsLt
xuBNZsjVL7j5IY4CL7UbotbjmeFF7Kzd1UgKsNrJ3SWnMkPmtaBLmjcQv6V0
pO/JYwb+saQPdWg/VZ9JNPpQwgxGLF5slIsU+KFoN7KzihnubO3mdT5LAaZ3
f1WUW5nhmc9Td9lj6HxNQ8WUf8zwiF9qsA/tzxGWf43jWizAn/vevJufAmuf
itzP7WEBTQsO52ecFBC56YP1mrJAZp4Bnzcziqf4us0PWxbo2LD7qTrKT5ga
x2DFNRbYKqiWpozyK3tKbC2+ggV0RkcfqKL8ayi0JovWs8Bi3r6lp4gnTSbv
745pZgHB1wHp8k9wuOwrHh7UxwJgb3bpAKqfsjsMMRdOVhg4blCgfQP1U5WK
wm4TVgg6/Dbsvg2ql8jp+vcHWUF06LdVN5r3QRZ5FzVsWIFYfOi4E837zE71
t4oXWKFvdUu2mDGq1zkdwG+ywsfeuFtXUX/d3bjv0FgTK9w0WRkj4TgMy/aS
pH6xAseevWarojjoyPi0mPexgkCZ+cQ88k+DUs8t8xZYofNLj5Y04sldFPaD
PhJsgI2sVR9cxCAWSxB5tQFpsVPLXxA/9pPUmrqU2GD6e+eQDfJvt0ROWujp
sgFu10XPRv6ul/f9fu7TbBBcUvVPC/HkTh5LQa2LbMB9L5vdDPFkDNfIF+cr
bED584Lf7QcGGuwUs28RbGCe0Cc5/x2DaNY3/Cx32GB1u7CSZSMGf5kNG9QS
2YBLc8Oeqi/Ib6+5m97PYgO/uduhfz5j0L3Cy/e5kA2qpWh5Ef/72eXUuqVy
NmiwGeszrMLgz8I34+PNbBAe/MhsGfHmtqktezcsssFNzYJ3+kUYhE9UcB1m
YYe/qq2JoYgfu8asP4XxsgP76wvHfiG/HTYcZjhKYwfZVmPdUuTPOwelOCXl
2KH8q7qVCeJH1YH86v0q7JAvMU4dQfz4q6dXP1ePHS6Gn46wR/5/618f9j4T
dhibuUXRfIn45o9IFdmKHfpfHd4gi3iho+v5DaPj7KD66kYSHfGESifsuXqG
HSxE6R7KiDeCO9pYX15iB3dP13hzxCM/f7hUdHqzg+lW5oUgxCvK7exBgkHs
aM498P+MeOZGa4KebhQ73Jg1kpBG+kezGovbXXawfH6yJALxkNL32vInSexg
8sPXmAPpoMaT11ufskPsDp/s24in2r/+A65sdngbH9KhirTil5tMmu/YYY+X
aE4P4rPA+o1lThXswOv8l5aBdFvt+2uJ9eyQ9o6Z8yrSWz5bEl9b2IH++4vl
/3x4vWZkjek3OyRL/xuz+p8vqwJLVQfZYeNW/0JbpDdXUvxPTbFDQMXbB55I
B3x8o31viR0itfZ6JiPdUma4WsPKAXZWmqodSCt86CpZ5OOAlbaeNxvR+fzf
e/huJnPAW9Pl5kCkvxfz7bKV4oBHJXEBE0j3Hue9Ny3HAb/U6isc0H3nmHkm
Q1U4wJnco9mPNEc6lzFtJwe8bmKt90Txwow4n+TockDwYI8N6X8eH2FfMzTm
gCr1iqZypHfGsB3pPMABzeYXRHxRPo41M/NxneKAl3dEAigof85eTKcTnTlg
m42TxwrSftT1D6oeHDDw27RiFOX78YkVN9sQDiivy5ieRfXxhnW5YTqGA7rj
hOL5UP2UZyzKhd3nAKe0QdpWxIc9o/MdOc84oNhG3ywZ1d/szbntRtkccITm
WzSciwG72uzNziIOiNAKC9FF9SrnPbWbq44DBMm7K0QRHzqxj76wHUP3T7CX
NCzFwPfZMPvMHAds3E6bnkS8GG0yZBe2xgG3trvjGYgXs2L7RXMFOaFzouDL
VtQ/M7RuHy5VTniY9HKkth4DtvLfLYmanHC0q/pEHepH0qkuZbXdnGh+l7C2
In5Uz+zosbXkhANtUlrciBd9drSa5HpywsC9RPWeTgxY99eJHy/mhJ9nRL7q
TWEgNv3ZY6aCE1bdEiq/z2Cw4e6nr2H1nFBja33eeR4Dw46qoNxOTviqayeV
t4xB5JmyES4mLji2onwnngMH0YC3xbl7uGDHKX6TW8gvFabd7aDt4wLrdXVr
b+SHbGo8lkOtuIC1MFLzDPI/TwR2aNmc5oKbb7Q+m8sjP5uY/44tjAuu87y+
c2g7DofeFRRZ1XHB77c1Z7jMkF+fLSpYsOCGrrDjWn8C0HzEH7adtOaGNzM2
z0XQ/P6jdXWhzh7pKJa8PaE4yAdpqie7cYPEV7/ljGjk34WL843ucgPrx8ku
u4c4dCiVvH3Qzg09B2PKruUi/jhXmqtlxwOfnfNfnUZ+ga3KbdLmLA/8Pf2q
y68fhyG6vKK/Kw+0iueOxiD/kNd+O6MsiAeKt4qMJ06gfWN07oH+Mx5wVTf5
cH4Z+R85sWv7p3hA0Pdi1UNhChwP+lx8aYkHBHLxOi0xCuz+7f8vlpUXzrx5
gjWTKSBwf8i1mcQLrrfpk0PiFHjC8eHUUU1eePvhWUYG4q3GvnPGDkG8YHVv
SdFAnQL5ulKhN6J44W+OiI4J4tWExOaK9Lu8EHugy19fC/GdFaE9+JQXav7t
kqYQaB9nz3pzZ/MC68Fsk2m0j9X4M/MV3vFCcnOSRpke2seVYioX6nnhsnvs
9E4DCvTSa51jWnjhARYS3WdIgc++155ndfECOaslJHgvBV63b+v/NsALBvFY
DQX5mzvbhhnTk7wQ+jVSPdWUAldvPbYTXeKFwe0SHyXNKGA3apmwjZUPvnBu
vC+OPr/HiOeHFR8fpOw4Jt+nQwGFJx9IXiQ+OFVcnoisPwgxeRyIl+SDE6BR
561AgbljCjeL5PiAM2jkoxEd8afoXa6VnXwwFjiTtcxLgcNB55cDjvNB6bJ7
Dl8vqo/fUhqpZ/hAv/OVkulPxP9aLe4Vl/ig5MJ6x6tvOIxPE+PsQXxQ94NX
c+Y9Ds1mcwpyUXwQWFa5fSAPh6LMzDNGd/lgefCHruRLHG7Yk7ojnvKBf5rN
rRuPcNjooFoo+IYPJn1Sc/ffwaHGYf/NO4V8YDzYvvEGqrezp5xPU8r5QFPa
fo8Kqkcex3DtpM980Lij+IrDdcRzjhliMk18IKbwalHRFwez0xUjT3/yAd59
/WCyFw6Tp/983NLDB5Lvr3yqRX459szqg+wRPrj1+lNwCeJX1bNU1x2zfPCw
IrU40AWd/6y6UfEKH3g7jr2Ru4CD5zlLKWDnh/lF2uz/fx+En3edr+Tnh6/0
sG4rpN+dj2nYS+aHth1lVuCEwzGnF0++SPJDgbJUqOc5HFacPvkclOMHOz+L
N0yIj5Oc+w60K/PDDPvQqSHEx3CBRcFWgx8+MrM07TqBQ/cFKea/wA8XhvxZ
uJB/CnTZ1X56Lz9k3+fQOoL8k+zFo1kjFvwgf/n5FU3ED9UXPUMuWfPDZ+9y
sWJTFK9Lt23n7Pmh5H5XRJ8BDi9cG3jX3fjhejNl7YQmDqaXh/8G+fKDdMul
iQrEM+OXOd9xBfODiNPl/FnEv6ruumdF7vGDt1PU4x+Izwo931ZuKOSHrHIL
Ox1mHKy9mh5llvFDuvIewSfITy17TVxW/swP1hqt6sto/ul4y0vv/InicUz8
TOhfDKp8Ev1MV/jhz4MNIyYVGDQFBO9wAwHg2H/KL+0GBu7XU/n/GQkAviOr
+acvmr+BH3p9LQRAnHaOCfPA4EjQYlyIvQCIaNiVPnbE4HfwhYkHNwSg7GfC
wTUDtF9DIqolowXgQMYn6lkCA0bo08S0uwJg8ede2Q91DE6HdZu8yhCAE9rV
JS2bMOAKX2OoZgmAsY/K7RPSGDwPF1/KLxCAvx2se2cpGBhHaDRqlQmA+z8/
UqwIBqMRVs/KPgmApHvQGwkBDL5WGCasNArAvOM1lWQ+DHJWdt7S6BAAjV3v
IyR4MbjiInnlzZgAfJl2nVznRPvlwIBhsoggXI9w8LnMjAGN4j1wzUYQFoQz
pwVmyMB0wKmj2FEQYtlXvWWnyNAbYft1wUUQ9iWtXVGbIEPmim7BxeuCYEW3
4NUZIcOOPzyhdhmC8HjGo4ajhwxmTxM2EpOCwL7tk41rIxm2/omh+iwKgm9r
H7vsVzJEREHoMWYhuL6mNvGtngwuVao+93mEgB5u/Y7yiQzb1DEHQZoQDJoP
VJwtJUMZ9Y/quq4QeHgEFXBnkqG927WpK1IIDgu8tPrkR4bbpceUz9wSgu1G
1zvGr6L3P9KPmrgjBIFOvN+Fr5Ch0pJiwJQkBJ7f6uz2XSZDdk1ZkfQbITjx
bGYm4TQ6zyvBlFPNQhBcV5X02owMu7xfXRyWEIZDD6pEN9HIsGB1v/6ytDB8
uPP5MQuVDDmq1+WXNwij+Se88ReZDJtGLXt4lYWhovakT5QQGUh2K4cUdYXh
5onMql5WMozvMdG55CgMxmxFjLBhEjwWGuKbfyUMeXvTCL1CEhR+4FBXyREG
D9syFbu3JGhykT15Pl8Yboyi/ZRDArYGu7ddpcJwa2S8suwlCc6Gt9rWfBWG
EjtVHrsUEmxlqXwdPyUM1sL/pIUiSWCc3d3eNCcM252orQfCSHDqxDoL/5Iw
UDNCEuODSXCvVPPwdRYRcIpKeq8YQIKlq9nr50RFkH//+CzAgwQVM0nmWttF
IHRH/ZVfJ0jwK7XkqsdOETAVzMmxPk6CeYufT7K0RWCa2etk5zESbHpDWpQx
EIGRnxOek4dIEOUclcJ3WASuKb6a2b+PBOnimXUGx0TgsoeXwawxCUpra+YC
7EQgqg0vTzQiweQmVuO5MyKgPhgYyrSHBFZ93tOdV0RgSNG+nlOLBC537kvg
fiIQWGfU2KZBgrDdbw0OXBeByEit7Fc7SPAuZfJhdbgIjBsUH3NSJcF3c4Eq
phgRoFctHjioQoLR9c0TmnEi0GOb4a+rRALJ42d2Zz0UATJ+pV5FgQTq/MEX
hpJEIPnRBnHVTSQwL0m9L5MmAk0D5gs7N5LgnFNZue1TEShd3+JlJEuCQGrX
yP0XIiDI0/fGlkGCR5+XSU1ZIuD/8dE7bzoJ8q5QgC9PBGRUFXUjpEjwRU79
vEGhCFBUeqvPS5NgoNXyTkCJCOR/fSZ3QIYEdEanKblcBHLVGs+f30AC6wuO
7C+rRKCt2yAsQg59ntXTs+2LCGhWNv3p3kyCfJX7R5S6ReBhmv3Y0DYS3Ij4
IfGLXRQm3u0KNkDxZOgcT1ffLwqGZ0Mqz7mRwCa837bhoChU7H5EM/BE+W92
ITscEYUiW+6PG71JwON0LTTmpCi0Rbv4zvqTYOp+8rk+N1GQi3+WURpBgrKp
v4q340VB8+5u37lUEtimn8kf7xaFnR+6dyu1kMCS9+KGbzNicLkOm34eTQa+
qrs73f6JwdLXU5Srt8hQ5V+yj7wqBp95Ty7r30bzYprb04YD1blh8NNv8WTA
fzypHsRJkHzFPScrjQydGT/PMOuQ4MDR9y+DC8lw7wSz7xM9pI38z3EXo/6m
brplaPh/Xn2bQ9+j+RDtURhtTgK/kQEv949kSHUX4qY6kOCQZY05L5ovp/UM
MlVRH0z7dbxjdJFBcsW5tCWKBIpejcHGf8jQ9vZ205VYEhT7ONKc/5LBSL57
qfQhCW4yJq4l9JNBQcjXxOQVCaT/1b57M06Gv59T7cazSQBmH2PTJ8nwKOiz
W2w+CVSE25pvT6P7L5AT2j6QIM3/yGWbeTJMdGaPOjShOvY98CNhlQzP7rcz
cbaRgGPmQdexdTKcsFgXy+wggTyn+5IomsdNlabak70k8FI5bnaRDYMIfzeL
20MkeO0p7ibCgcFujYeOO8ZJIF5VFfoazfO8FwPRvgskWHhLt2nkQXzkKJAq
tUKCaK3f3EfQPtggtT3/IxO6572MoDZ+xN/tx2od2cmgjpfllQtjcC8usIuL
hwwPNER769C+MTN9Pv1CAM05C8mff9A+4uT4xrFflAyKgoH7mRTQPvGmKd+V
IEOu674gW00Mrs5sy2BIk6GZIizprof454Ip7c0GMtA6A+7cNkb78KQPb50S
GcK68u+MWGMQvvfHAJMuGdhZ51/M+GDwkHI32dmRDGdmSC9+IX5KuP0SWzqH
6oTlhad2DQZJ/JUxoS7o+wNtxR59xSCNecY31QvtJVnr7QZ/MHg5ZH60PZwM
o5eLjKWRH3jtcPabYwwZbm7teaXEjcObzmuGM3FkWBkPjZUVRv6+8fV2gQQy
ODAt1hcgfnlfxCey5zUZWBRKIpq1cShTkw1vzCGD3gNvvet7cPj4SovJroAM
P18yLXQY41Apd9BrFNWhJ1fX3nZz5HdSzo97l5FBuac2+uwhHD6JBzpyVpHB
3fTugN8xHGrvPvh15zMZbnn03uVCfqpeMPsg4wuqk3Dq+X/Ib30J/1Sb1YTq
zk3zijbyY99Y/+hqt5FhCb+29An5tSa/hcLaDhSvNffDMcjPNS8IqBxBdatj
8Uf+BvJ7ba4bn/b1kmHV8s2XcqR/jmhLug2Rwd7j/dYU5Bd/OVrdZUJ1Ky59
9nvQRRy6fjvzxaA6rXY+4293GfHV0RtB4gtkqDCRT9vgicPf74+Wni2jeIRs
uV15FYfefbmuO5gwGNIuqN2E+Ky/pnawAtXlq79O4johOAzq/rWz4EZ1ueNI
wmQUDsPFi61dqM72B2odUkT+eXS7sJkz8i22UYJv/iJ/PSUPu0LFMcgv4/xz
Bfnv2bTDuWJ0DLasPkvUeYvDPO2iQqosBr0c958alOKwJJyEv1fEQD9SK2wB
+XuWpeXZaeSr3qj7XhX8h4O9geFO1T0YqD7Jb3VgpsDHuDg/VyN0HhEz1yoe
CgRtlueYNMfgzo+oZ+k0xD9e7sbKVhjYNHg/kZJDvFL5IcblKAZMvhcjElUQ
nwnxfn9li4HQ8weJNE0KsNkewsZOYqA0c3B/0m4KnHqecmzLaQw+NwXulNxH
gcq50cdO59F5oziE05GW1dPozXTBYO160jcC8dKNmKBNw5cxcHnrZPTNGL3/
5xdneS8MouusIg79z0ty1OyzqA8ehFc8a0I8xl72ZudAEAbnDmvVvNxDgdN8
K34bwzBw8AwZ50Hvrz5i+NExCoMR7xaw06VAyFSnce8dDL5pm7wb1qYAhwyv
TXc6BtSjNxxv7qAAV4ijfwfqo4cHf+6R3Yj4senNR2o9BgeNj/2dkKHAJ8kV
DutvKF6XPivlSlMgrCDuZns7mhuufnukUby4hz4ktwxhELgqGJEkSgEeU2rF
V14clDq3zKuv48Av8pWzcj8O/7y0gusbcYhZuvHzuCUOwk5umhFfcBDo0Xy1
eARx1D03sd11OAjlZRxQtsfh0VXLpYxKHMQO+Sc+dMdh08PahV0FOIg/VFRz
fYDDgwHrpQZUL/KMqOOSiNsnf380mUb9ksmjt7VoAL1nSkfhCuonhZkFVstR
HCT4UorXEZ9sqXR4Hj6Hw/PlvU1iqB9VTmvNznIiTvby/2pjhIN65nB43RYK
aM3ThO8o4qCvuvftFU8UR4W/x2krGMiOqVpVXaVAIZfRDTfEEyzPJOaEr1HA
XjKMo3EegzLa5LYXoRSgmHPWpiK+2MV9P68znoL8vX9n+gAG4pUBlgqJFPit
espHqw+DJf/zs54pFMA7hsp/IP4onNXeJpRJAdusF8MqXRhs+9Obq1dMgZg1
Dx6zFgxEH305ePMDBX6SDpkpfsdg2qpwpqMCcTMzdoXciOq+LlLNo54CYpd+
kDkbMNhcoJr7tJMCrh/8njhWYcBzWeLgbDcFHEhndsUjvhncwjED/ei+gQV9
LeUYZKT+UP05jupC4PjKZTRvGTEBOXxMVCifCCRpFGLAvPf8gaNsVHDnfUKu
ycfgD6vldDoXFdbPfCfs36J57C2nSghTYarwe8z7HAz8tgk3RZKoEH57ZM4v
G/XVxJJrO4UKfiEJnCZvMKA4fsl2ZVDhcgPrc97XGPyTKrQo3UhFvrXZc/0l
Bq0/U6Z4NqOfK7s4MSH99m5k7GFlKsyntTwReIH61txj6xM1Kgj/SQaFTAzc
eO0aJ9WpIKv079jB5xgcqDZy1d5FhTGdO6IRz1Df7pLIbt1DheSNhp/oTzGY
mGe3kNlLBQvWuysBGRh8yZ6YvLiPCkXLcVoTqE9eOf+4VWJBhZP7Ch47IR0l
V6HCfYgKJTeYds8/wcDp78tvVtbovsqzOjeRNk68dyn1OBWodxJf7kBa/kiA
0IQ9FQ6diXoymoZ4TvT8G60zVKBEf9fJRnqg4aB5mBMVXrRx3r6BdHWY9mTz
RSqM1ukUnkY6fbfcLWl3KjCf5686jPSNNSEVlytUgMWQr/9rh6Klr+98qbDQ
pjX2//N67r0XOa9T4fp+DbVgpOnKXwQtg6mwx5k1Pwfp9aGCrORwKrj+SAyf
QHqTY1xOWzQVSmv2Smii85r/cX4rEEcFReVfkf//PvrKMcNC/XtUaErJGlpG
OrlVutj3IRVuhSUZuKF4fLJYeZ+bRIUURZbcRaSn6lvLhlOpYPY5W+cmiifV
KLtC+ikV+O4wL6qheOtVRFYfeUGFyI7yyQGkz+uc/nwziwrW4jrbXqD83C6C
+upcFB/qrkY/lL+SbeJfVwuo4Mi93GyH8tubNde4rYQKWzJVTS1Q/vk2f2t2
KqOCkIfI7gOoPrZnZLalVlLBswqq/v/9f0iCXadQAxWKZy7ez8nC4DWm+cew
kQqBeVwrU6j+2uLEevxbqHBvqyRJF9XrpvDPg6OdVPBg6gsVQPVszvZkROYv
FQzGq6aiUL17X/Mft+6ngqntdRVx1A+1Hmqzn8apyP+WGJwpRv04yb+wPk0F
ntBR+Q3vUb87Dy7uWKACedZqcRr1k7N94vqTdSpc0xu7UPoRA4H9nLzXhcTh
TqwPO6kOgx213fyFYuKwkliRfgD1r51+idAELg6XYmz1k5G/eaPlSraVFofW
c2MBTs2ovjd1SO9UFYeUkMGScjQvrqa9lb20QxxefTNRvtaN/JDkLbmnmuJw
Uk4nxrQXg1kxfUXSbnFg3ja7Qh5G/o45S2PqoDi4fbYcOofmV6lvuNamI+JQ
cUFSKAPNt4EFBx07G3F44vxxaArNP41xfE/DKXH44TMXVciK/MTPwP3PPcRB
T/bgQSYRHCTzDp0+eV8cFuYo9Re24nCm7tHCzCNxOLPcUb+0Hfmtv3/CQpLF
Ye9DAeUHmjjsFnZ68eK5OPBJv33NjfzUWZdrk3PF4kCoPAjNP4xD9qZnVyP+
oJ/PnR2WCUT7nhjjpfWJQ8ODox8KQ3HYc1g1MWtIHFzi9/fYROPQGlzyoXla
HPzv7HJtikfP//3GJsUuAc0y/j8uvEHPJy7G5MpLQMul3/+0/uIQnadDN1CS
AM+h43NZg+jzdUHZ7aoSkN3KIacygcO5Jf7mVS0JeDU2r2m5gvbKYQbFyEwC
7KzuHZLFKNDmcibz5wEJsA9i3zGD9iE95KXWhcMS8Jbd2aRelgI5eTuOx52Q
gBNGU2uPVNHzwiZpvy5LwHH1B6HPzdDz8re2XfSSQHOAT+qjFQXOQ0sVs68E
RPJm3v5rQ4EVF7vBjcESIGbjWLvTiQL6IU+8i8IlIEr4aM/Fy2gvJA7xmMZI
QNKEYOhLb/T9eUoJXXES4MCabDMRgL6/3k3R9b4ExHQe4NYIo8C5nsJS1gQJ
YM95pBJyE51vaXX/vWR0n58iMem30fuEd3dvSpeAjszshqgo9D75sMvFz9F9
cmXzrwSj90EDq9lrCViyTn92zp8C7YdF7v7JkQCve6c5T3ih84ckFLCXSEDJ
F8P7x89RQPgSiWxcJgGyITVeXfZobx6NcY+plICLu5+dO4Xux6kYsBVrQPmR
9foWtB/5q+8OLzZ1SYAJj9k/CvInXfTNj02YaFDPLKc4yUaBYJ4nqzfZaND2
UyV3cQ3t81kJm2YuGhwKHKkXWMTBp0aAYitMg5OfYxVtx3DAXabjXBg0CM29
1nynFQeL4qKQ2D00cCz9Ml7+AvmSJ6p9LUY0oMpZRr7JwCE55sVu6j4adFS/
j3+TgsP4yUSmNCsavHjxx6f/Pg4RXNev5p2mweYfB4LVgnHYOr3Y/u88DSq3
nq4vQP63veOyuvZFGoTtH3Ew98VBLuvUbJUXDcYKfQY/uCE+sDJyaQujgSn9
XHMK8itORHm9eDQN+jouqzTZ4SAir7n5RCwNeqo/RlGQXzm5snlw8AENKvJr
wsaRb+Lqf2KgmEQD2phNta8F6qevtHTXVBokpbYQMmY4rKUK2i9l0oAj663w
O0Mc0qPCynSyaGC4mLGcifrL1JNZKiiXBpuYLux5q4t81t6ZDt4SGljmiLBg
u3DQU3PWNC+jwadfK4suO5Ffl+iLv1NJg+sPsg5178BBY7LVitZAg3PGW5TI
qjgweb7Te99Ig+Hy9v2ZyohvlhOVbVtpwHL+yI3jyD/dun5dYvUnDc6fnONT
24zDEU5H7sTfNFjXzZXbJI8DPdpoflcvDR4MawrqyCFeENnS82sQ3VexZsl9
A7pfvOA33zEUT3cRyQYZHK5IzpRITNPgrIP+cwMGDvCk9XnJPA2+xfR/6ka8
xqXw7p7NMg0CTOvSk6QQL2UlBq2s06DpFbejnyQO8duvX0pgkwSr1yNy/jQc
ThSfst3FLQkXU3p4UySQz9Q1Mv7FLwmcg9cV+sWRr6zerO4rIglpC04P9iFd
YCooK4FJQm6R5fk2Kg7+TdNCJeKSQDWezwxC2uBI6+oxuiQ8o/A7HkBaoKto
eFlWEnZ7WybtRrrVIbHtkbwkCN+6ceQw0klDAZVaSpJw4INFbDTSpy+eyu5Q
lYT3ly/o9SOtNGeY5KMuCXx2YSdPovfPX90cKb5LEnwUDv1ZQ7qUSfBKMUjC
Z7+4l6Xo/CEh06eO6UvC4Sucb5LR/cz4Wi2W90rC98C7356g+5PjinQemUnC
nyu7JmtRfLqwxM1aByWBW2bjmIg0DhmJAXjHYUmoXMhO8UXxdZE5xe5jIwlm
lMBeTlkcdjw3nKaelAT10PCwPJSfNaXNv985SgLZU9w2EOWvOk+g3vq8JNyr
WFZ0Rfk9VNaS/tBNEtLB8u8bVA+SBkVxmlck4eiUvCmzCuLFuoRrP30lIalO
5YMrqiePNoej1BBJWONcfZ6tjsMuW0ODdxGS8MgpOyYA7Qu2HgU165uS4NiT
esgF8fid8Sm+h/GScJbjrHH6bsTv7AFllBcovsY2+l6oP3wjHV4VZUlC6ffD
v9Ss0PwXNnx4NE8S6k74h/MdRbwsIeD+4L0kkPZT7wqdRLypliBH+SYJ0Z83
ix5B/FtSdE2sqFkSaLVMfMOIf28QDsxHf0hC9Zpx/R0fxCcmCh3xfyVBOi/l
jyqaB2r2hTH4nCR8GD9efwNxyp5nUV2pi5KAh5lFFySheIyfUFJcQ+93DMxf
S8Ph6lXuL7qcUhA/kHvt02scyuKs+Z0oUqDDeTRauwr1a8VK5HttKcjWvKVj
jLjlOHdjh6GeFLxzc3aLWcbh4v70zU0GUmBRt7D+G/FtXMe+uv79UvBtiOXU
cwE0n2eSeITspeCQ06TF502IT2V1w+1DpGBBm6f493EKeJ4n/RiNkIKZb9jL
akcKhL4Z2uR1Uwp2z7yzyHOmQOauuE+R8VIwtJVVKRVxT0ngaZycKAX6b+KS
U65ToOGT5tnkFCkIto4jMtB+6RIQLFTIQOcp3vciC+2XScsezreZUiAm++TT
M7RfWB4VHCaypGBbwVzPKbRfRLsjn37OlYKLH2S2bkT7ZceFbYZdJVLQKzPY
UIS4yzc4OITzqxRsLMl8qmSN9k/d0dbY7+h+08lztIMUeCystFGiXQo4Tksz
SIinPya2Vql0S8GxTav7JHQQx+TLsVvPSME1ExepewwKGM/06rby0uE7a89l
d7QfAtfPms/y02HSc0eJK+LGd7xjx0WE6FC5sy7Uuxvxpeycj5kYHTCCZPu8
Bc0XK/b8agk6PNl4uymmFNV7/gaFAkU6tCSqF9yJQ/3w8blGizId9lVFdu5D
fmTHV0XDma10SG+QZxELQ/N4YPsp5R10uPHM73ONH6on3CDpqQ4dLnbavv92
Ds3fq6dF4vfTYch/fdf/v1+6GjJMz7egQ7/AZdR9OOTEuSg3H6RDt/ifj++1
cJB+4WkqdIQOuJTh1e1qaB7/CgkJO0GHe9MBbD9Q/2oM8tzNsKeD58SvHwOo
/y/NxqRVnqLDHb7udXY0P37z3S9jOkcHia+C/pdE0TzRfrp0xZUOZ3ju/15n
Q/Nm72bu+2508Ks83RHBjObRoSzsrQcdQkv17m9YwyDRpWDblDcdlGvDrkYs
YOD7uMblXCAdDin4LouM/P/7RxO/0Bt0+O14nIs2iMFowdfI9BA6PK1OEFdH
/HvsW9uz7gg6yB084fzoNwaazIN/j95G3yf6eMcGxLuBx1IK0+/SIepLwm2f
JuS331rHTN2nw98XA6O9yA9bn2/YGZ5Ah2w55/jJWgxSK0MEW5LoIHo2bjju
EwbDktBHT6GDZt0fDaNqDHy+59wqTKeD4FpW2Qji3UpF59Nsz+iw5+W1mR8f
EE+EbdhlnkkHFRwjdSD/nrArfmDgNR2ydu0RIL9D/HHP4r1aNh1mJp6170f+
f8sUz+1ruei81h5eCYgPStL9dLBCOlw9jwu65GLAxqQu5vCODgbnj89OI/41
tZ4cel1ChxesYyERiD/u5D3/sFRKh5R0juJt///7JQGHuwbldPhnIndjCvGL
7DkJp7gKOrzOZG8pQ3zjXNECXVV00Dtx53Eq4p9VL6NRj1pUH9vKHBMRLxk0
MX8sr0f50/bWzUc8FbOl+D7/VxS/NYnD3Yi3WkPcLxxtpMP4pV93JJGW7Fbc
nf4dPb9hy+AFxGuntQbwqRY6JKZWaX9FPPf6bvL4rnY6LHx6dl0P6fmJo5Vh
P+loLtAe1yAe1DEWfdj8iw7tLbkBx5EOeVJ/kf6bDt8wIyFOpL+sBes7d9OB
+xWz+v//v4R8lBAv7EH3G7bqjEL6eO6/SdZ+OuRbc4+cQzqDP6d6/yAdUo22
Gh5BevyMU8KjYTrQjm5v/593d3yUvTwwSodA2cags0hfk+gyVJugg1o7STkC
6U+e92nXpuiwq9OptARpoUbzmdoZOuQE3yExofMc2czzmTyP4lX6ArP8n2eD
K5Ls/6HzfpZ/Woj04G9f99dLqF7+9aYrovuqaO4wXlqhg9cl0bkcpK/cmZAy
WEfvnzP1MELxKht/NhfLLA1n86I4xv///y177es6WaXhBaYWlobia54mniLP
IQ1ySZw/zqJ8xK82e3pwSQNLkWabNsrXn8MxpuU80jDz4swJBuLbTTmGDH5+
adB3v2dBRvm9xMf874igNCzmaIdSUP6Zyt3SJkWlgRhjU973GgMjcUXvXWRp
EO8yPeyH6ueWR79ZGC4Nn2VOqpSg+qIrHF2SokkDU7/tMUdUj7q3dSz2b0Sf
Pzq552QRBoWtsfzum6QhmGzu3Y/qW4Xa9zleQRqGKref9ipB9ZESqfdXSRoo
Z3n+FKP+WHrdruahLg0+fEt+daifXKc3Tz7YKQ2edUppmajfBrdfe1mqJQ05
V2Qc76B+bC3ZsIELpMGp1npz6BcMcmsvkx8ZScOZ35NP+loxUBCobvpgLA0b
2nffI/1A/WtBudlrKg2Hg9dmzTrQfdo/cCpZSEPNxl+2nWg+OPfzLZYdlYbV
1F/Bp4Yw2MDytKP/vDSYNW8r+LeK+lV/6T7vBWm4dRhLf8mE9nP4PkuVi9LQ
/zvY7QziVRah2XpvN2nowwmuKS7kf2i6pXy+0nBMNvrUfjEc7u/sSFaNloYj
Ayzioltw4HYVPO2fJQ30Fu2ooOM4PBHrOBifLQ2/Ro6zZiG/AIUZujm50iBx
7UtzxynkT9e1af0F0uB9SvePhhPys9HOzfvKpKH28XfBFS/kjzM/69EapYFX
c7YkMBb5td4gqZJpaZh17F72qMCBEbafv3VWGsS+b63yq0bzeLP48sS8NKwM
dvZf/4zm8eWcVpllaehwz0z0/4qDI3N3dCQrA3j5Lb/odyC/IamzYi3GgO/h
q29GpnD4U8497E5mQOag09zTWeSHHFvaYnAGfEmVP3J8Afmll865HyUYMDmW
PFOI+FZW69F5hQ0MaIhVmJLmpADrkX/ti9sZEPGeJ/oplQJv9i5G62owQK8E
K9+EeNdGa0kvXJMB2/oYZclSFMiTXHmJEwyg8qfFuiP+Pd23HqBuxIAwY6/y
p4oUEGlj2nHNmAGviljCO5QpUPqJeaTalAGi+xME2BEfYy9ZrQ5ZMGDcR6Nd
A/Hfp8uc8h7WDLA3/S1DR/vc/RRXV4kNA7I7n9xbIxDfHuK+zWbHAEPPgN+N
uhTw3sm7etuBAdoX5SIP6VNg42a+nA5HBvg8sCvmNKRAkwT/GZmzDODYGGHz
yogCCkyCjTnODLD89PR2iwkFWqcEQ5ZcGBDzb8fK4X0UCOwR0tJzZcCwl1yo
H+J1pRbhyXA3BrBr84Ya76EgThRJb/RgwKUddcFkTQqEFYpaU64wYP7Cdu0e
dL9tmWKCJ68yICWYNTFnAwWiosnek/4M+JR20tJemAIa1zAljesMyE1TGDJE
8e69hPdcC2LAkOLvQs1VHLQtqfsEwxjQsbPu76EhxGP64iyHI1D8Dkauh/3G
4Z66REFSFANGN/ly/UT+ZJwqKa0Uy4CT7NP60x9xeMgn1epxmwEFtuU3PxUh
PlmTinx/lwEhh+t3/HqDw+Nu6TnThwy4/IXPdOAx8pvfGZl3EhiwnaP/6D/E
u/8qZex+JTFgn2r49qu3UP3ny4rJpjCgi+V0jV84DubPNnx2SmNAVYP5VVIQ
DisPNvrnpjNAyml1yBL5m2eRcmrLTxnAbKZyyPwKDpZ+mwb1Mhng6ratSdwd
B+aL8okRLxmQnxGjWnsJh9cnFA40vWZAvcauOicXHKwPbOakZjPg8U4mWf4L
OHDs2VJyMpcBA/UhYnnOyA9tV3R9/pYBupdo90jo58fllDZOFTDgbLfHdg70
eR6KcofGOwYkUovjAi7ikM+jciughAH6O5ev+rri4LCiov+pFL2/87L9BOJz
ofGtS4LlDIjy4ZipR36/5Ldq1uEK9HzF+yTOqzicbVQ79bgKxa91k3wsup9Y
xTbKQA0DKHwKUseu4zCR+DWPsxa9X9fnkTDigdor58031aN8+fgHDCL/d10p
OfTcNwYsrRkaNqB42nBryUQ0MeDl0uDbmjvIr/W2lGY2M+AAZ0RdcTzK5wPe
+ZF2Buiwm728nIzDZ/eMWL4O9P2vxd03PUH52K+rqNiJ6vlmRdf7pzgcY/c6
5dLNAI9rjT88EU/s+CPMdLOHAckNIVx3snEQKX75KKuPAbuDhplv5KF5dOlv
0+QQA2xtuuzaUH2kmfi5CI+i/svOKNtZgvh2I86jOo7iN6NT5oz8rjVzbvqB
SQYcLZhlci3DYfuvfbpu0wx4U1t+xRDVm1DB4K/bswyYsWM7MYXm2Whs0JW8
eQbQfzyQvoR4psZZUqzlH6pHt1TTKjTfUg2LsuaW0PnaRcOma3DwY1iakFcZ
oLVLNmzxEw5HVsf7d6wzIGcggP0Xmn/b2sMDDzPLQOBe1fxHtTgI5spKXmGV
gbaPbEaadag/oj8UxbPLgNxtQ5sipKvPWlsVccoAt1f2DWo9Dim75yZ/cMtA
VLmWrh3SvpK3opZ4ZYB3uGYtDOnDiwqbxAVk4PHIGfIDpFWbqyq0hGRAtXJj
wy2kBbJO2NmIyMC+82qWrkgPhS8v+YrJwMOTVp+1kK48de9eIlkGLAPuqU+h
9ycTW1VLcRlYOSkcH4e0D7W+oYsqA/Kn25roSB+aO31uXUIGpuZ7PiSg+2z9
xsxOl5IBv+2kTZxI871ISAZpGTCmyVafQPcfDFbfdVJGBpQq7htmovhUnGhq
u75BBtjvvdnXi+KXpHXBLVVOBq4H7XURRPoqmUuwQl4GFp692rYFxVulXtuA
TUkGfll2Z+2qxIH3aXu3rIoMvH5ttm8rylf/dTc/fVX0fADmQEH5TFR/nhey
QwacGy55Vn1A/ZQmJsNNyECBso7dvXfoeb+sUnldGXhJCiSroPopP2Jsbbxb
BqrGfuZ8KED7UCAgNtJQBpa+RPqUo3rr8x5Z5zeXgViVtlJLVJ/fUovtbQ7I
wPDkS0v/l6jf6iKrMi3R+XRMKxMzEd/TtkQaHpWBGaexv6UZiI/KncnX7VF8
Zea8YhBPP+Ya3zLrjn6eolB+LQqHiK2lN/W8ZKBDrykXi8DB0zpm+pa3DHwK
f+P5NBQHs5dKhYr+MrDcz1P2OhDNq/0Xd58JRfURuM3/OJpPR+9PHv35QAb2
iFq/sLBH+7SsrGRTggxcLPxCumiH4jd0S8orSQYYob+sg20QD2pt7RNNk4Gd
i7ueJxxC86XL9dK+lyjfWo0FXsY4iG6cCSkrRe9zrx0cUsGhIW8uN6NHBg5r
s0hyLSK/VG232tAnAwo1ew7dncOA5cdng7kBGTjup+1Om8ZAYzXxx+5RVA+D
Kr6SiKdS9Q3W/8zKQO77JrfeX8iPtt4zFueQBXL4b99g5M8Y/9S7b26SBRb9
xgu7r2PgqXVVwPuCLEQWpz2IXyBD/iub8LsXZUF+rfmexAwZ5qQIthxXWXCj
ucQkjJPBnY1tadhDFsq+sDrd6iPD5YboPht/9Pm2J5WG38lwwS6lBG7KQrrt
pqaZV2Q4FfTpPFe2LGgwFBeVT5DhyVxmn2yuLOTvLfFXPkaGnjPRJ3TfyoKT
BT1d4RAZ7fEDh64WyYJ9VHOpqCkZ7Ei/dEfLZeGqf0rIG3UyWD+dwL81yYKQ
mMScgAAZLOrINfdnZWFYxvL3lgISJEcqcf+dl4WEQscWSjYJJk0MTLYsysIW
2oNbTC9IcKve42vZqixgQmabipNI8K2huW2IYwMkfd15ryeYBGbf4ga1KBtA
oeMo38IBEhi3CPD80d4AiZ8U97QMiMHDuxtNFWADKPXdE+v9IwbDVjox7nob
4PUXVo2RH2IQ3npBhNtwA/xXwrmHU5W2YbzIoWlj25ttM8lQe+293z2llBwK
d05TdJAIqZzKJDI5JR2kImlKkhzKaGokSqmkg2NIoxRDTpkdJckpyhQaRt/b
9f15X89a13ru913Pte7f+uPt3Ge1prNGDdUtT7UMHARotdO/FpynBtu2Y5Jo
bwFMLPpt1MLUYNUhv0oUK4DpxR4b8b9cVBy9F2YfJ4CddNK9aJgLGGzPCPxV
gJXJT1Rt+7kwj3k2dPukAKrWr11tpFyYSpISl6UKMG2joX1/CRfzw3VbN+QI
8DZ4h0fTAS5mqiz1OVEjQErvmfWLJzkYMQ+KGFZhkLah6c7dblXELHb1s+Iw
2KcgM6NRqgq1eRZuSWoMFs+5OdbboAoDbSWTxZoMEPf3kEyZKn4Zzx6L0GNQ
J519pD9ZFT13X4VPNWRgzcx/mWOjirb5DrvYGxiYyUxE7TnPhp/IyNdrI4ND
y86lfkpiY0xn1vpbmxkMcoqI/zE2eCoDhk4+DJaPC5jVYWysex/7OSWAwV9R
vesH7dh4mlMWqnOAgcP95Peb+lVQpqcfMi+TgWRJomPXaWUE74lPCs1iwL8a
n/0wUhlMw/uCwmwGBuWBXZl+yog/mDtme41B2+bZg1stlLH5lTjS4w6DZf5P
d33oUwLHOO78pXsMVr57L2xuUsKjkz0P+gsZnLVujy55oIR5Fpdld5fR9dk1
S5yYrITJ3+bEJVQzWOM9Ge5mqYRbnw9faX7C4M+JyU7HuUrwXfWmZuYzBqVN
4c/W8JVQO3FBOaeegbmLrIrzIAuHnKbOH3rOQL29+uWmFywszvVca9jMYOFP
gd/7P2Qhw10nqbyNQWP0nqbTZ1lwzI8sUHjJIOu35Jq8GBbkZ7Q3r+pgkLr+
6+z6nSwUepuNnX7NwLXEeOaYOwuBhemabW8YTElcndLmwIIeZ8L0h24GTbJH
Ym5sZaHZz32jbw+D+f/uX3R8DwtmmlrnhwcY2I2uaV+XycKHnREPjIcYzNya
tdniPguZ1a2vIz8yCKrLv6JfywJrd8qcGSMMXqo/ztceY0HarHZl9le6Xjtz
xkQrlbAvSaXASVUI9T77X6s/KaFIRa7mjqEQl3dmrU+zVUGGw2RDk5EQ2xoW
/me5QQVRp0bbPpkIYZwekN63QwW23L4+A3MhAi7E8haeUUEDr+67PFshnh5K
M8t8o4I+7TS7yy5CNCZmTX6wYEPrx7lPUiKEyJdXvOjUxsbu5c6Pd5cIccM+
zTFKlgP/lsOpVWVCVD16fc9YiYPNvrd+5lQI0amwKaSPx4FNtIp87iMhXsRN
yzAhHHAePLbsqBPCmu3fG+3AwTUj82KbTiEqLANWlJ/joJMR5nEURAhSHfEL
+pGLpgLnSI/pIry1L68yMuSi2jp6Ve4MEeTFda2fzbjI837db8MWwfufUkW3
NVzsyzgnitAUIce88nVhEBc8Hvtih0SEmwld9j23ubCX+5KU6yDCLZGXVLpI
DYH7y+0aHEXYJYgZYy9VQ8LnuCljTrRumFBkZqWGxrdaAVZuIkhvWNkeXKuG
zY+WWrV5iaBcx+6/sUMNO2OjPiqEiFC8I1zrbqYazkxXXO1zRoTagbW18Urq
6FDSUNBqE6FKPKbp8lQdTLfL4CKpCOG7j/s+r1dHYGlq05p2Ecqb+y7atahj
IlArM6aT9mt9nkU61cH/S3vZxz7qL6En7tqoOhwS5+ytHhdh0GSxXK0uDxU8
g6Fd2mIMOS0LuRTMw/Sh4OZTOmLYdru8ORHOg8Of+SW5umLMNHfkBe/joT3c
8HinQIyx6f80zT3Cw3irsXj1PDGmBFiRkDQeFp2z8BFYiFEaelHDuIyHLJ1V
Lc89aT02MbBQQQOTNpUxM33E0Czulo9iacA5wGTR1q1iBDn090JVA9PuC06N
+Ilhd0H9xG0tDXg7TtpphohRsKNH5DNXA9oxeaWbY8TwdHnJSNdqIKlPNas3
h9a1vMeFKRoYYB91MsgVg/+l0cjxnAasjCZl9l4X44xKk3P4eQ0MH+7zYOWL
4fD5us6tb/93tCs19YvFWL9it3XvXQ2wHEJPhNaKIRv1wcK1RQOHC5pDvw5T
v7afn8tzaH6q6p6u+1mMtWfqmq3V+UhoHMmwHBVDcN00dT+fj/R/eI9jxsWY
ddfCpGMWzRMLXLRZ0wiiZif94C2h+fZaSxVfneBy6PSzHlZ87Cx5t8FUg6BT
62SHjS0fo09Hh9w1CQoubfVmVvAxbUBD67w2wdaEa+NNq/mYRVwDBQzB16CO
sEE3PhyzWnkGRgQmIeyyccpLrQU9V9eZELhUErODlI88qsYQtoTgoOXrtVMo
rwV08f3vWRCotHWx+mleOqLnVma+nKAv56lzEM1ThRkvfrZ3I6i74SFZRHkG
13snAtwJmtfprVuZTPN/yZdT8ZsI5u004m6ifNMo1Syu9yIo2jMhty39G79u
YLtup/VRb11dyjehZPuliACCpPNJ+8Yv8TFussf0XCDBb/myl59R3lF0O7ul
PZhgT3F7v+tVPnRT2u5t2Uvg2ZfipfDtvIh9QeVV+wmCs9MHnuTT/r0UnzBR
tN9PCyoPFfBxT7L4755oglj9O2a19/hoZz97syKWXr/5qJ0XzbfTRnwGrsQR
3Kx+GPKuiPLug1P/BcQTmOrI5NZQHtp1SSRfm0BwwOvIRxHlofRjZcr6pwkW
HtYrCy/n453Te52PKQQVI1YyPTRfs0yjRY5nCepVGV9FykMGOt8vyE8naLja
+yOf5vPI3uWWYRcIWFE9JrI032fWdtg1/0HwS7dI4SXVT/J3rTPKIrjTlW35
B+WBD6lKG1OzCcY13eScKS+oR2Zu+XKFQBLt5/SRalOfJTs2XKP3R1zWCae8
4bm8Iawoj6B8sNbiLdVH5vpFzrxF8LtbS6gp5ZdczpTY/bcJbBSXbwmjumE0
+WT7HQLz9ZkpSVSPSeemWtwnUK+X25tM9ayKh7//XkSQsGnqxgiqrS6750wt
JXjWPLHtGw9tOz580/sBwevwOTfb6PPig+IKKysIag+bCpypvr3+h8o5VQSJ
V2PTsmm/bUvu1sT8SWDZZ/64gfqboru6sfsxwdLSW+711D8j/1b601OCRzIV
/Rco36zs3/s2u5bAseWtqiVdv6C/OIPT6wmIgk1QHuWb5IKcke3PCR6wdKvf
UZ4pPouvNU0EHKZBtpfuV+eBFoW5rdTvdDfXm3Q/FbcGsuPbCHivVrlbUP6d
ZyenOSQlKM3M1k2kfOOkn67r0EEgrxXvkXOH8seXxwacLoIl22YPC29Q/mv3
XBLSTRA2cuJ9IuWZvspRq8Ye6vfJznePsymPxwuck98TvFjheSyP8vzGkOJN
o0OEfo8rzfzp+3/IdZ2v6zAB120LT4nOxzO9g+FaowTOHgdaJCf5GFbgR+39
QvC9PmvFA8o3/PfXj0rHCSLcPev9jvCx5a40LWOKBMvqBxKNIikPpYdc/Coj
gZc/gvfu4ePGwe+uespJIGOlpskN56PZ90J+uYIE6KwpVabzPWFvXKz3nQRx
vNUv9tP511tQ9/AwS4K8voOhgb/wsZzn+6xLWQJNq1P7B3bwETg+0WSjKkGJ
ug93KtWnX51uz+JKIFzy//MI/wfqz44H
     "]], LineBox[CompressedData["
1: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
mRUhw9X2eF2dW5wQx+781YKK/EWrKptvDCeMcMzwE0h/Kn15X5OayAmUG7qb
JZnIX31aAJ58Tvj+UqLvrhwZFD9Gsuws5YQ8q0kTtc1kuNy4qfpYLSfsySYf
rFciw+Z3lsSnNk4YSCnlyFUlw6W3E6ss3znBSJw7hBvp5fa6y5Uqo5ygvPeY
sTHS0xdf52nfX+QEfomkzMfIf34pE9BylOKCQY2oUDfkLwed+O/PyHDBsQHe
hzxIv8+x8k1f38IFfe8F/z1C/lLCkDu1QIcLdhzR9LyD/KXsBOeqgREXBG/K
c/2N/IBGBIdtzwEuiHDaE6iD/OXBVlYBHjcu8Moref8c+QnvAJajCd5c4KgR
+fsD8hvnSWtVKn5ckLXHn6cD+ZGIihWs4TwXRI5OcnxBfjPJZdnXMZQLdL+m
dZcj/5LHvtQ0E8EFtdzXr8Ugf1Pz9J9MWCwXSJlnzjkgP9Syd+ES5TEXfBK0
lRZDfmlgcr6rIIMLrlULc5Yg/hM5t90wnwsWSi9H7UN+i1P1T2TPKy7YVh9R
1YRYvH1m7PRrdP4m/dBdyJ/JBP3W4/nABVdu/uxOQLyDPJ2Q8IULTqjPl04g
3ls19VelG31enUNSFvk/e9ef5g2DXKDVMj5xAPExzslsx59coDeQo+SN+FzG
OOfsHBesRJ3r8EV8e9+Yc9gqF9TxlvV5Ik6cGnlF4eaGEdUFXRPEuVHDYoXr
uOHemZk/NMTV24aOG0pyQ6n7/ek+dP/mrwNve2jcMJu8qhSFuD+4n+4rxw2C
p30zlRDPUvrO8qhwQ3Oql10pej6Omu9tCTu5wcHo+o5tiDe49Sqr6nEDR8gD
iEfx2cTdE96wjxtClROPzaB4qmd1DThacoPeVGWhGmJD407tWQduWHhpLuaJ
4m833REbdoQb2F93XA1H+Tmr1r6v0J8bdtzPCLuH8nnrW2ua4QVu4HFpFr6A
8p1w7staz3VuUMSe37dB9VD1+nMhzwNuaK+nh7cgf/n5yCfBxGRuKP45O3kG
1VMfz0d31SxucGNOa3GiemM3/YA7lXEDnHsR9QvV5/qZd36ztdzgWSkcuRf5
y40xDZ/CGrnhDbXUMwr5S4OuuiuFPdzQKvcrc5wgg23Imx7DYXTeZy68y9pk
8KTXqvdOcUNez4TGkiYZbrpXT/Cw8MDg5Qn2WnUyxPNV7Unk4QFzn9i4m9vJ
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
hjezcKr7VGfGNE3cnPz/91//D2z6fOA=
     "]], LineBox[CompressedData["
1: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
KHOTEsj+//+38D9HorUs
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    TagBox[
     InsetBox["X", {0.05, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.499592559330068, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.493987661723263`, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["X", {10.321975511965977`, 0.08}], "InsetString"]},
  Frame->True,
  FrameLabel->{None, None},
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 13}}, {{
     0, 13.53838276411646}, {0, 13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7221873718448596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7221872976716228`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwcW3c8Ve8ft7fse8691nWNjEgoijofEpoImVESmVFRIioREdGgQoiySsio
KGVkNcgW2dl7j/ye7+8vr/frnvOc5/ms9/t9jythf/74WQY6OrpvTHR0//3l
oy5U5dyJ2VeU8GJeTJ4MIczCH7YxeBHSj7OpZITjL39IY2W4QUhEOqSxIuzt
NjKxfDOMWBqMChqVI8PLN5zCC/TRxMa0Z8lnhAWzaJ/cdR4SFztqje8ifD1t
95mhm4+Joke9B44iPP7MiNWuPIFYq/d9So/wtm/5zWP0yYRRSZtZpiwZ7A99
2ipLe05IC1dc0Uc47mutr4NOGrEwc4OtfSsZvuu21CXZvyQSvNrY7RBm/tIr
2nUzg+Cr4L7ZLkMGLWLiPPl5FvG57a+PAcIXSpY/m5W/IooVsiezpMlwvpNV
9S99LuFfFXzTSIoMHE+4bZj58wizW8mvoiXJ8MJCIFiSlk9EtOf7fqWR4Xez
WKudTgFhIKmO80mQ4fIDKbqA44VEasmzDSkqGfhN5OXi7YuI+oCJDEVxMhj8
3OnXdvMdMXEy5KaoKBn6IzVTF2PeE3o1ryuZRMgQcFT7m+DzD0SwqM9GD4UM
b2uPiBuXlxK+e4avXcHJcK8vt3eA/jNhm7JHR1qADN2f1Rbnwj4T9bntLwr4
yKCQXMTByP+F4GC7ekGTlwxVdqWqErRyIqK35fpWbjKs/64OPqlTSdRLnLIP
YiHDoZLDT9xqKwnmXVIDZUxkiH36/bXf8SoigmHRZp6BDCpWTa2P7b8SIobG
t/Zu4uDc+keu5WYN0VpxdNFqCYfCQvt9gxy1hOmLKt9DCzgwPRo8Ph9TS2iL
vk1SnsMhyXTMj/95HRGmp6HeO4lDS8Pit2Pl3wjWTgGVlkEcJIZY3vXTNxDX
nqlwyDTi0ITNyqUebiC2F5wCkx84hBzseuLwsIFwr3jscrkeh9HsfP9B2UZi
mtdUNa0Kh7yLp+Cv4S8iQdKm48l7HHTp338dTWgmbF40buNPxsFRxL1lZncH
cX3j4JyDMw74MQv9vKAOom7nl/YvZ3GoDdxffOFbB/Hyh7iBqD0OSv3kJ3On
OokJJbhdbYXDUkbVyYXbv4muPTFy/w7jEKpOHVxu7ib+bv/yUkAJB7OMkZXN
4l6Cqcuk2G4WA7Hmjacenb1EqMPVPXOTGAzT8e/r2uglXLbnRIeNYXDVYs/N
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
     "]], LineBox[CompressedData["
1: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
oeWxII947JRbWsd+HFwrrr6flkY8d+O15knEi/skg6LGJDDIzlU7Fol44RHv
lgM9bBgsf7n4j+GCw2sPn5GWZRIY9JUFv/dAc+XGs3Nfp0ho3rKL7DmFeFHZ
xrR6BM0hYdNnXefQ3Nj5qPFDLwlkFO5tP+2Hw/GLuXp/O0jgCS3VzJcQ77wp
2X7qNwlyDpEPRQfjINf2UXgFPb9yyn54w3UcHj8zuBU9SQLDGyn+BWE4BCc2
mqkvov0SRnjMwhHv7tvI0c+Ezl/nveVsLKrj/ZYcNkLo/n35JazxiGe/vYmn
k9B9llYtHjxFOn+yofb/+xoqhJ4reoV8MUPR840SBp434t+zF+Ngo36EK8AC
A+Ez4hJ7ynCoEdL2nEZzIv9I+PnwKhxOyEqEnkXx5dwSvE3yKw5Nrn9uBCDe
T/nulC7fgwP7G0XWPMTLPTKKT0yZpGDDrj2fTyMeu86TshrBJgUKrZtH2RBv
bZ7BbZu5pMB7//q/2DY0Jz8KYHbCUvDvbej1PMRLpFNTkafoUnBgyPhmKeKV
fUUFN+4bSMHmq7vkQlF9LaSoDLSYSEFAcIVVnhEZnoan65P3SoFzUJ9jK+r7
8eMJTM+spaBXu4Z/8igZbnFdCch1lYJLV7+ZnfNDfTu12L7gKQV/bmnryAeR
ob3znLr2aSm4WT905cs1MmzMdJ6p9pMCl7ZJ19b7ZKiyNjnVFioFJwov3+9L
I8MJoryOclcKHI3npf68JYOIwi5Fh/tSEJZJOLW+I8PxFcXh4UdS0NEdzWVb
QYa1ZEHHpTQpeLtLrXoN6cPnd0LLdDKlIHCJoSGB+t7Ml1k6JEcKVs4pCvL+
JsPj3dOdvMVSUPR9OSP0Lxk0Jlqtpb5KAX+Y96F3K2Rg8i3U+9AoBePDhsQY
0pO1ywlKdq1S8HPkTt4kGwXuXbmCr3ZIwS1z4koFFwUOc7pwJ/yUgjgRt3PH
+Cggc9dkTqtfCt5ZHnOqEqTAsMjmvq5hKdDVE9w1LYL8HHW6GJ+SAqHbsWdT
Ea9ASuur4jkpWHhl3LeJQgGuTYUPbJelgP3552PeUhRoyEwIWVmXgi8WhESw
NAUe7rhyJp6NCjIeZ80tEd84FDnbaXFT4Wpsh30fHfGdrsmeLn4qyF+4+14D
+cOJGkX1SyJUqKjgbLeQo8B7M0EGLol8b/nwEfkNFAhqmhIqplDheEbYaDnC
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
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    TagBox[
     InsetBox["X", {0.05, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]", {3.777598728468436, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["Y", {5.871993830861632, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["\[CapitalGamma]'", {9.499592559330068, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["M", {11.493987661723263`, 0.08}], "InsetString"], 
    TagBox[
     InsetBox["X", {10.321975511965977`, 0.08}], "InsetString"]},
  Frame->True,
  FrameLabel->{None, None},
  GridLines->NCache[{{{2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 2 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[2, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}, {Rational[4, 3] Pi + 4 3^Rational[-1, 2] Pi, 
       Dashing[{Small, Small}]}}, {}}, {{{3.627598728468436, 
       Dashing[{Small, Small}]}, {5.721993830861631, 
       Dashing[{Small, Small}]}, {9.349592559330068, 
       Dashing[{Small, Small}]}, {11.443987661723263`, 
       Dashing[{Small, Small}]}}, {}}],
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi + 4 3^Rational[-1, 2] Pi}, {0, 13}}, {{
     0, 13.53838276411646}, {0, 13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722108005384122*^9, 3.7221794363411684`*^9, 
  3.722180775281432*^9, 3.722185278679453*^9, 3.722185653354944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"EE", "[", 
    RowBox[{"x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7221861317915397`*^9, 3.7221861595463185`*^9}, {
   3.722186205486457*^9, 3.7221862155419493`*^9}, {3.7221876848558497`*^9, 
   3.7221876873653736`*^9}, 3.722187760403482*^9, {3.7221878022165804`*^9, 
   3.722187803263503*^9}, 3.7221879297804413`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
P3p84Cg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {0, 13}}, {{-3.141592653589793, 3.141592653589793}, {0, 
     13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7221862545554004`*^9, 3.7221877140622187`*^9, 
  3.7221877917461586`*^9, 3.7221878366904774`*^9, 3.7221879530428057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"EE", "[", 
    RowBox[{"Pi", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722188146051062*^9, 3.7221881491454434`*^9}, {
  3.7221886648486667`*^9, 3.7221886661924877`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
de/Ypmuyu9mgk9wUEFg3Sdm32/9Kes2G07bBjEl6kjKUOmF/pJ0NHwRK8RGP
J6kOyHTb2oX0oOfu4tg7k5RW4LIQjV42DGoJZjJPTVJKs0u9fg+zIZvSPNdt
Nkl1v78Yqi/NAfUv0bfXPp2gRPa40TucOKCms7pLLmuc2jVc7N75hQP9T9eJ
EA/HqC6Hvkf+PDFQ2lvifjj2N3Xx9ya18FPiIKiXvv3rwDC1qPRDirTkLDhI
ch33jA9SLlGp4ZnxEvBYr4EeK+qnRqM4m34vkIRcqeo8+bI+KmvQM6ZiWBIO
GiUxTff3UiddvG7lv5ICo1M7Lb/5vqVC2OUuBRnSMOTDvxhxupU6MbTy4BtP
GThRmWJETtRQa/eFnDm+hAffGg3jvB7XUAqpOrprlvJgY2fHwLkjNZRXGpOJ
L+OB4qDMtTcT1RRkaSuG6fIgTz5WeGCyiprDGhXzWc2Dd75hlRlTFdSCcZkt
cg488J//NJU3RVEuapzymnAeGBr82eB+lKLyzy2R2BvJA5atrjBnqpwy7xzY
P+sED1IO3XdfP11GJTPjvDad5kFtbfLio/wSarXSPZHaKzyYvz80r0dQTE04
moeeu8OD9hKTyvvMPGqXTritcxMPlEM83o9wc6lv3T9eNbzmQexRG/1L0g+o
ec3/ua5t48He8Lkf6udmUzYHvwZrd/Fg6YlnBqB/lzph3Nz65xMP7l0Q/brU
/Qb1+mRNhMs4D3RVv4Rcakij7uccI6hJHkgvKF704k0qpW1cHLOIz4Nm9W3h
MJRIlWjyg4cwWbDTT9fSVL5M6bQJxoLFZGGnf3/ei40XqFTZgdXtXFlQCbrA
MfM6Sy1U+HNUf7YsXItoL9a8cpwKSClq/ikjC4/FxlTWbA6nFp2S7LeUkwUD
udWNWscOUQaMjtFbCrKw11xsWtt5LzUkvX14WlEWmgr1CzhuLpTcrZH3DnNl
oTUo21T3IUmamPTmhKqg+IfXfbdL9SRlOzZYLFRG+eVtrVp98wAZcPDQqxdz
ZKE5Q1rOISiEPK5LWAfKy8I9Wy+9wvRI8qxKziN5WVnot3jWbXr+JHlPS16u
VBqdbxyi5egWS2YqfsvFJWShPdnXd2jhJbIz7O7ALXFZ+JOQWF445wqpQPQo
m4ui/K+MepPMq6RzoZtHJAs9X3R2sWP7NVIdLscOTvFgp5bFjOPlB+RMZrSp
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

     "]], LineBox[CompressedData["
1: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
DP///zAY9qvgf/+H/R/pDbhC
     "]], LineBox[CompressedData["
1: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
AkKuF1Yu///K/wFvYwVn
     "]], LineBox[CompressedData["
1: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
2+gu/dzQIh2ZuPbqamNvPudAMKHTUUlFfsaaW/d3DqMJOkq2Fri45qc8+u/3
DtDRhtaZK2v3N/1Tdi3+Fx2V1pvUrT2+SKHCIb4WOpLarnJn7fnbw5MWvWvp
qLn0yb2144uxE6wYQnRUWeQwsHb85mrBoSbFdLTtZN4zJWxxQcZJcg4d3f/h
+lIB+9eIw+Z96XTUVh5PXzs/cV86O+IT6ci0UDWVgH0uWj+B7zkd3bsO3khg
b3X+ZHszgo68fuYtbV67fW2t7sYQOrq2b3MLH7akTIf8a1860tLbxMa+9v+7
g4JqnnT06E7mw1n8/kn2U5hNV+ko/cQf1ynsOK2Vbns7OlI4mZU1gC2RsIG8
YElHh9SFdDuxxc1lwmT06cjYLeVBOXZsgbL7Z0hHSjW1SvnYYkLaZiaH6Uj/
UMjB19iijVZS/rvpiPKrwOAetsh/UR/aueloJptWqo0dnZz0wnmZhsTNclUV
sYVX3vuxM2moQ39l0zZsodJq3b1DNDQYa9ZMx58nQcWl7pCvNETroz+Ox34S
wUeWLKOhe0dNB+5ib5oQfZOXjy188rEztsAbJfeeZBqycuWbP4zNv9WRUyWA
ht60TG1owJ//iFteY3XeNBSRqqGci72hI6jxohsN+U0rFUZhr49KeBF+gYY0
LCTqzLB5eVrlB4/QUKTATqWfeP48sP8reFuZhi56Te/Nx+b5OskUkKehHSY3
7kVir7vDQ1aXpCHjliqd49jcdA2zp3NUZGnZwZWP512I0Qk1WQoVxWwd63yI
zZVjLlU+SkU1J9q47dZ8xWNsvIOKovUNPQSxOf6+9dMupKJZjaORDniernwX
ekO5TkWX69M6KHg+G8fKFIpdpSLh6cSCr9hpDupVWnZUxOmowRmNfYLNbjjC
hIq8hu/QVLBjDubv2qNMRfKKGRLX8Lzfm3w63ZZBQRxczx7X430R6Hqp6MEk
Benp+vlEY7eq36zOHaKgKEmnjvPYt9qTRpbbKEiBaNf/D++fb+unZeIKKUg4
/5UOJ/b5GxFvW70pqPBnlK4Y3me5R5OL590oqFJ4VqcT7zsOwYIagiMFvS5p
K4jBznj3e9TNnIKyeSTHhbEZf+VkNxymoKANJWk8eF+KPn9qfJ82gwqHptzb
rpGgJ+A3uzI7jS6nVMZyuuB59h+6d2lkGo0m1Y+8w/tZ9LhH8YX2aWS47kWk
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
D0Nrsl312u/D/wNPMYvj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {0, 13}}, {{-3.141592653589793, 3.141592653589793}, {0, 
     13}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7221881897078266`*^9, 3.722188696728792*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.2000000476837158`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 110, 1, 60, "Input"],
Cell[CellGroupData[{
Cell[692, 25, 155, 3, 103, "Section"],
Cell[850, 30, 26, 0, 36, "Input"],
Cell[879, 32, 2053, 45, 221, "Input"],
Cell[2935, 79, 957, 25, 36, "Input"],
Cell[3895, 106, 1048, 29, 83, "Input"],
Cell[CellGroupData[{
Cell[4968, 139, 1649, 45, 106, "Input"],
Cell[6620, 186, 239518, 3942, 215, 186734, 3075, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246187, 4134, 109, 1, 103, "Section"],
Cell[CellGroupData[{
Cell[246321, 4139, 133, 1, 47, "Subsubsection"],
Cell[246457, 4142, 1945, 57, 106, "Input"],
Cell[248405, 4201, 559, 13, 36, "Input"],
Cell[248967, 4216, 212, 5, 60, "Input"],
Cell[249182, 4223, 798, 22, 71, "Input"],
Cell[249983, 4247, 3060, 85, 249, "Input"],
Cell[253046, 4334, 146, 2, 36, "Input"],
Cell[253195, 4338, 1662, 43, 60, "Input"],
Cell[254860, 4383, 103, 1, 36, "Input"],
Cell[254966, 4386, 8337, 210, 294, "Input"],
Cell[263306, 4598, 1415, 38, 221, "Input"],
Cell[264724, 4638, 714, 15, 60, "Input"],
Cell[CellGroupData[{
Cell[265463, 4657, 2447, 57, 106, "Input"],
Cell[267913, 4716, 773, 16, 36, "Output"]
}, Open  ]],
Cell[268701, 4735, 676, 14, 83, "Input"],
Cell[CellGroupData[{
Cell[269402, 4753, 1342, 30, 106, "Input"],
Cell[270747, 4785, 758, 14, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271542, 4804, 106, 1, 36, "Input"],
Cell[271651, 4807, 90, 1, 36, "Output"]
}, Open  ]],
Cell[271756, 4811, 94, 1, 36, "Input"],
Cell[271853, 4814, 440, 9, 60, "Input"],
Cell[272296, 4825, 7988, 231, 661, "Input"],
Cell[280287, 5058, 1188, 36, 60, "Input"],
Cell[281478, 5096, 1460, 38, 129, "Input"],
Cell[282941, 5136, 19077, 466, 182, "Input"],
Cell[302021, 5604, 704, 19, 60, "Input"],
Cell[302728, 5625, 36170, 824, 90, "Input"],
Cell[338901, 6451, 599, 17, 36, "Input"],
Cell[339503, 6470, 395, 8, 36, "Input"],
Cell[339901, 6480, 10623, 258, 90, InheritFromParent],
Cell[350527, 6740, 94, 1, 36, "Input"],
Cell[CellGroupData[{
Cell[350646, 6745, 366, 8, 36, "Input"],
Cell[351015, 6755, 3981, 110, 119, "Output"]
}, Open  ]],
Cell[355011, 6868, 762, 17, 60, "Input"],
Cell[355776, 6887, 65088, 1479, 198, "Input"],
Cell[420867, 8368, 648, 15, 83, "Input"],
Cell[421518, 8385, 640, 11, 60, "Input"],
Cell[422161, 8398, 663, 14, 106, "Input"],
Cell[CellGroupData[{
Cell[422849, 8416, 420, 12, 60, "Input"],
Cell[423272, 8430, 1443, 29, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424752, 8464, 9555, 290, 290, "Input"],
Cell[434310, 8756, 105196, 1740, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539543, 10501, 89, 1, 60, "Input"],
Cell[539635, 10504, 101865, 1683, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641537, 12192, 727, 19, 36, "Input"],
Cell[642267, 12213, 29071, 485, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671375, 12703, 575, 17, 36, "Input"],
Cell[671953, 12722, 39650, 660, 304, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
